# 1 "Kernel.cudafe1.cpp"
# 1 "/home/sx302/test/NQueen/CheckOne_Datafile_compare/gpu_1_Queen//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "Kernel.cudafe1.cpp"
# 1 "Kernel.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "Kernel.cu"
#pragma GCC diagnostic push
# 1 "Kernel.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "Kernel.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "Kernel.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "Kernel.cu"
#pragma GCC diagnostic pop
# 1 "Kernel.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "Kernel.cu"
# 1 "Kernel.cu"
# 56 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic push
# 59 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic ignored "-Wunused-function"
# 61 "/usr/local/cuda-8.0/bin/..//include/device_types.h"
# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3

# 149 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef long ptrdiff_t;
# 216 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned long size_t;
# 1 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 1 3
# 69 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 3
# 1 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 1 3
# 56 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 3
# 1 "/usr/local/cuda-8.0/include/device_types.h" 1 3
# 53 "/usr/local/cuda-8.0/include/device_types.h" 3
# 1 "/usr/local/cuda-8.0/include/host_defines.h" 1 3
# 54 "/usr/local/cuda-8.0/include/device_types.h" 2 3







enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-8.0/include/driver_types.h" 1 3
# 156 "/usr/local/cuda-8.0/include/driver_types.h" 3
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorMissingConfiguration = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,
# 191 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchFailure = 4,
# 200 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorPriorLaunchFailure = 5,
# 210 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchTimeout = 6,
# 219 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchOutOfResources = 7,





    cudaErrorInvalidDeviceFunction = 8,
# 234 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidDevice = 10,





    cudaErrorInvalidValue = 11,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,




    cudaErrorMapBufferObjectFailed = 14,




    cudaErrorUnmapBufferObjectFailed = 15,





    cudaErrorInvalidHostPointer = 16,





    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 315 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorAddressOfConstant = 22,
# 324 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorTextureFetchFailed = 23,
# 333 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorTextureNotBound = 24,
# 342 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,






    cudaErrorCudartUnloading = 29,




    cudaErrorUnknown = 30,







    cudaErrorNotYetImplemented = 31,
# 391 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorInvalidResourceHandle = 33,







    cudaErrorNotReady = 34,






    cudaErrorInsufficientDriver = 35,
# 426 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSetOnActiveProcess = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorNoDevice = 38,





    cudaErrorECCUncorrectable = 39,




    cudaErrorSharedObjectSymbolNotFound = 40,




    cudaErrorSharedObjectInitFailed = 41,





    cudaErrorUnsupportedLimit = 42,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 488 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorDevicesUnavailable = 46,




    cudaErrorInvalidKernelImage = 47,







    cudaErrorNoKernelImageForDevice = 48,
# 514 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorIncompatibleDriverContext = 49,






    cudaErrorPeerAccessAlreadyEnabled = 50,






    cudaErrorPeerAccessNotEnabled = 51,





    cudaErrorDeviceAlreadyInUse = 54,






    cudaErrorProfilerDisabled = 55,







    cudaErrorProfilerNotInitialized = 56,






    cudaErrorProfilerAlreadyStarted = 57,






     cudaErrorProfilerAlreadyStopped = 58,







    cudaErrorAssert = 59,






    cudaErrorTooManyPeers = 60,





    cudaErrorHostMemoryAlreadyRegistered = 61,





    cudaErrorHostMemoryNotRegistered = 62,




    cudaErrorOperatingSystem = 63,





    cudaErrorPeerAccessUnsupported = 64,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 639 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorSyncDepthExceeded = 68,
# 651 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorLaunchPendingCountExceeded = 69,




    cudaErrorNotPermitted = 70,





    cudaErrorNotSupported = 71,
# 671 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorHardwareStackError = 72,







    cudaErrorIllegalInstruction = 73,
# 688 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorMisalignedAddress = 74,
# 699 "/usr/local/cuda-8.0/include/driver_types.h" 3
    cudaErrorInvalidAddressSpace = 75,







    cudaErrorInvalidPc = 76,







    cudaErrorIllegalAddress = 77,





    cudaErrorInvalidPtx = 78,




    cudaErrorInvalidGraphicsContext = 79,





    cudaErrorNvlinkUncorrectable = 80,




    cudaErrorStartupFailure = 0x7f,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;




enum cudaMemoryType
{
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
 enum cudaResourceType resType;

 union {
  struct {
   cudaArray_t array;
  } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t sizeInBytes;
  } linear;
  struct {
   void *devPtr;
   struct cudaChannelFormatDesc desc;
   size_t width;
   size_t height;
   size_t pitchInBytes;
  } pitch2D;
 } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType memoryType;
# 1044 "/usr/local/cuda-8.0/include/driver_types.h" 3
    int device;





    void *devicePointer;





    void *hostPointer;




    int isManaged;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaOutputMode
{
    cudaKeyValuePair = 0x00,
    cudaCSV = 0x01
};




enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3
};



struct cudaDeviceProp
{
    char name[256];
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
};
# 1455 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;
# 1477 "/usr/local/cuda-8.0/include/driver_types.h" 3
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUuuid_st cudaUUID_t;




typedef enum cudaOutputMode cudaOutputMode_t;
# 60 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 2 3


# 1 "/usr/local/cuda-8.0/include/surface_types.h" 1 3
# 59 "/usr/local/cuda-8.0/include/surface_types.h" 3
# 1 "/usr/local/cuda-8.0/include/driver_types.h" 1 3
# 60 "/usr/local/cuda-8.0/include/surface_types.h" 2 3
# 84 "/usr/local/cuda-8.0/include/surface_types.h" 3
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




struct surfaceReference
{



    struct cudaChannelFormatDesc channelDesc;
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/texture_types.h" 1 3
# 84 "/usr/local/cuda-8.0/include/texture_types.h" 3
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct textureReference
{



    int normalized;



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureAddressMode addressMode[3];



    struct cudaChannelFormatDesc channelDesc;



    int sRGB;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
    int __cudaReserved[15];
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/vector_types.h" 1 3
# 61 "/usr/local/cuda-8.0/include/vector_types.h" 3
# 1 "/usr/local/cuda-8.0/include/builtin_types.h" 1 3
# 56 "/usr/local/cuda-8.0/include/builtin_types.h" 3
# 1 "/usr/local/cuda-8.0/include/device_types.h" 1 3
# 57 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3





# 1 "/usr/local/cuda-8.0/include/surface_types.h" 1 3
# 63 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/texture_types.h" 1 3
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 1 "/usr/local/cuda-8.0/include/vector_types.h" 1 3
# 64 "/usr/local/cuda-8.0/include/builtin_types.h" 2 3
# 62 "/usr/local/cuda-8.0/include/vector_types.h" 2 3
# 98 "/usr/local/cuda-8.0/include/vector_types.h" 3
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 274 "/usr/local/cuda-8.0/include/vector_types.h" 3
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 362 "/usr/local/cuda-8.0/include/vector_types.h" 3
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;

    dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    operator uint3(void) { uint3 t; t.x = x; t.y = y; t.z = z; return t; }

};

typedef struct dim3 dim3;
# 64 "/usr/local/cuda-8.0/bin/..//include/builtin_types.h" 2 3
# 70 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 2 3
# 1 "/usr/local/cuda-8.0/include/crt/storage_class.h" 1 3
# 71 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 2 3
# 218 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 2 3
# 429 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef
# 426 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
struct {
# 427 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
long long __max_align_ll __attribute((__aligned__(__alignof__(long long))));
# 428 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
long double __max_align_ld __attribute((__aligned__(__alignof__(long double))));
# 429 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
} max_align_t;
# 436 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 156 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 751 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 762 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 774 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"

# 774 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
typedef struct cudaArray *cudaArray_t;
# 779 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
typedef const cudaArray *cudaArray_const_t;
# 781 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
struct cudaArray;
# 786 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 791 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 793 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
struct cudaMipmappedArray;
# 798 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 807 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 821 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 834 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 846 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 856 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 873 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 891 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
struct cudaGraphicsResource;
# 896 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 908 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 918 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 931 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 942 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 984 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1012 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1027 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1067 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1123 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1135 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1145 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1156 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1168 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1181 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1192 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1201 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1299 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1307 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1458 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1466 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1477 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1482 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1487 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1492 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1497 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 1502 "/usr/local/cuda-8.0/bin/..//include/driver_types.h"
# 84 "/usr/local/cuda-8.0/bin/..//include/surface_types.h"
# 94 "/usr/local/cuda-8.0/bin/..//include/surface_types.h"
# 103 "/usr/local/cuda-8.0/bin/..//include/surface_types.h"
# 114 "/usr/local/cuda-8.0/bin/..//include/surface_types.h"
# 84 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 95 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 104 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 113 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 161 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 212 "/usr/local/cuda-8.0/bin/..//include/texture_types.h"
# 98 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 103 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 109 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 114 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 119 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 124 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 129 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 134 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 139 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 144 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 149 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 154 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 159 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 164 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 169 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 170 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 172 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 177 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 182 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 183 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 185 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 190 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 195 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 200 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 205 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 210 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 220 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 225 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 232 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 237 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 242 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 247 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 252 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 274 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 279 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 284 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 289 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 294 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 299 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 304 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 309 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 314 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 319 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 324 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 329 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 334 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 339 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 344 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 362 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 363 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 364 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 365 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 366 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 367 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 368 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 369 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 370 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 371 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 372 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 373 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 374 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 375 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 376 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 377 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 378 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 379 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 380 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 381 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 382 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 383 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 384 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 385 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 386 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 387 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 388 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 389 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 390 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 391 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 392 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 393 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 394 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 395 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 396 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 397 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 398 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 399 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 400 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 401 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 402 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 403 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 404 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 405 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 406 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 407 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 408 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 409 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 417 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 427 "/usr/local/cuda-8.0/bin/..//include/vector_types.h"
# 70 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
typedef
# 54 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
enum cudaDataType_t {
# 56 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_16F = 2,
# 57 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_16F = 6,
# 58 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_32F = 0,
# 59 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_32F = 4,
# 60 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_64F = 1,
# 61 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_64F = 5,
# 62 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_8I = 3,
# 63 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_8I = 7,
# 64 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_8U,
# 65 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_8U,
# 66 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_32I,
# 67 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_32I,
# 68 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_R_32U,
# 69 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
CUDA_C_32U
# 70 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
} cudaDataType;
# 78 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
typedef
# 73 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
enum libraryPropertyType_t {
# 75 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
MAJOR_VERSION,
# 76 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
MINOR_VERSION,
# 77 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
PATCH_LEVEL
# 78 "/usr/local/cuda-8.0/bin/..//include/library_types.h"
} libraryPropertyType;
# 104 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern "C" {
# 106 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 107 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(::size_t * pValue, cudaLimit limit);
# 108 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 109 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 110 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 111 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 112 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 113 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 114 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 115 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 116 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 117 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 118 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 119 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 120 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaStreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 121 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 122 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream);
# 123 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaEventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 124 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 125 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 126 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 127 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, ::size_t size);
# 128 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 129 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpyAsync_ptsz(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 130 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 131 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy2DAsync_ptsz(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 132 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 133 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 134 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, ::size_t count, cudaStream_t stream);
# 135 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemsetAsync_ptsz(void * devPtr, int value, ::size_t count, cudaStream_t stream);
# 136 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream);
# 137 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset2DAsync_ptsz(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream);
# 138 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 139 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaMemset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 140 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 161 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBuffer(::size_t alignment, ::size_t size);
# 189 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern void *cudaGetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 190 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 191 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 209 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 210 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
__attribute__((unused)) extern cudaError_t cudaLaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 213 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSmemSize);
# 214 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSmemSize, unsigned flags);
# 216 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
}
# 218 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, ::size_t size);
# 219 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 220 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, ::size_t dynamicSmemSize);
# 221 "/usr/local/cuda-8.0/bin/..//include/cuda_device_runtime_api.h"
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, ::size_t dynamicSmemSize, unsigned flags);
# 219 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern "C" {
# 252 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceReset();
# 269 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSynchronize();
# 344 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, ::size_t value);
# 373 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetLimit(::size_t * pValue, cudaLimit limit);
# 404 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 439 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 481 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 510 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 552 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 575 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 602 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 644 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 679 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 717 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 767 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 797 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 837 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadExit();
# 861 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSynchronize();
# 908 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSetLimit(cudaLimit limit, ::size_t value);
# 939 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadGetLimit(::size_t * pValue, cudaLimit limit);
# 974 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1020 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1074 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetLastError();
# 1115 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaPeekAtLastError();
# 1130 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern const char *cudaGetErrorName(cudaError_t error);
# 1145 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern const char *cudaGetErrorString(cudaError_t error);
# 1175 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceCount(int * count);
# 1421 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceProperties(cudaDeviceProp * prop, int device);
# 1593 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1628 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 1647 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 1681 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDevice(int device);
# 1698 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDevice(int * device);
# 1727 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 1789 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 1830 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 1867 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 1896 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 1939 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 1963 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 1984 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2005 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2037 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 2051 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2108 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2128 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2149 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2220 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, ::size_t length = 0, unsigned flags = 4);
# 2256 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 2290 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 2321 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 2353 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 2385 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 2410 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 2451 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 2510 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, ::size_t sharedMem, cudaStream_t stream);
# 2560 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 2614 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 2648 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 2671 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDoubleForDevice(double * d);
# 2694 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetDoubleForHost(double * d);
# 2750 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSMemSize);
# 2794 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, ::size_t dynamicSMemSize, unsigned flags);
# 2845 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaConfigureCall(dim3 gridDim, dim3 blockDim, ::size_t sharedMem = 0, cudaStream_t stream = 0);
# 2874 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaSetupArgument(const void * arg, ::size_t size, ::size_t offset);
# 2912 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaLaunch(const void * func);
# 3030 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocManaged(void ** devPtr, ::size_t size, unsigned flags = 1);
# 3056 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc(void ** devPtr, ::size_t size);
# 3085 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocHost(void ** ptr, ::size_t size);
# 3124 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocPitch(void ** devPtr, ::size_t * pitch, ::size_t width, ::size_t height);
# 3166 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, ::size_t width, ::size_t height = 0, unsigned flags = 0);
# 3193 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFree(void * devPtr);
# 3213 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeHost(void * ptr);
# 3235 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 3257 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 3316 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostAlloc(void ** pHost, ::size_t size, unsigned flags);
# 3393 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostRegister(void * ptr, ::size_t size, unsigned flags);
# 3412 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostUnregister(void * ptr);
# 3454 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 3473 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 3508 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 3643 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 3764 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 3790 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 3890 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 3918 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 4029 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 4052 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 4071 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemGetInfo(::size_t * free, ::size_t * total);
# 4092 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 4130 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind);
# 4162 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, ::size_t count);
# 4200 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t count, cudaMemcpyKind kind);
# 4237 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t count, cudaMemcpyKind kind);
# 4275 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, ::size_t wOffsetDst, ::size_t hOffsetDst, cudaArray_const_t src, ::size_t wOffsetSrc, ::size_t hOffsetSrc, ::size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4320 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2D(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4366 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4412 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArray(void * dst, ::size_t dpitch, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t width, ::size_t height, cudaMemcpyKind kind);
# 4455 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, ::size_t wOffsetDst, ::size_t hOffsetDst, cudaArray_const_t src, ::size_t wOffsetSrc, ::size_t hOffsetSrc, ::size_t width, ::size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 4493 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, ::size_t count, ::size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 4531 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, ::size_t count, ::size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 4582 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4614 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, ::size_t count, cudaStream_t stream = 0);
# 4660 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4705 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4765 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DAsync(void * dst, ::size_t dpitch, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4820 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, ::size_t wOffset, ::size_t hOffset, const void * src, ::size_t spitch, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4874 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, ::size_t dpitch, cudaArray_const_t src, ::size_t wOffset, ::size_t hOffset, ::size_t width, ::size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4920 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, ::size_t count, ::size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4966 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, ::size_t count, ::size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 4992 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset(void * devPtr, int value, ::size_t count);
# 5022 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2D(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height);
# 5065 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 5097 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, ::size_t count, cudaStream_t stream = 0);
# 5134 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset2DAsync(void * devPtr, ::size_t pitch, int value, ::size_t width, ::size_t height, cudaStream_t stream = 0);
# 5184 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 5207 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 5229 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSymbolSize(::size_t * size, const void * symbol);
# 5296 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, ::size_t count, int dstDevice, cudaStream_t stream = 0);
# 5382 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemAdvise(const void * devPtr, ::size_t count, cudaMemoryAdvise advice, int device);
# 5438 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttribute(void * data, ::size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, ::size_t count);
# 5474 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaMemRangeGetAttributes(void ** data, ::size_t * dataSizes, cudaMemRangeAttribute * attributes, ::size_t numAttributes, const void * devPtr, ::size_t count);
# 5627 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 5665 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 5704 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 5723 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 5783 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 5815 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 5851 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5883 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 5912 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, ::size_t * size, cudaGraphicsResource_t resource);
# 5946 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 5971 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 6011 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 6046 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 6093 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture(::size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, ::size_t size = ((2147483647) * 2U) + 1U);
# 6144 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTexture2D(::size_t * offset, const textureReference * texref, const void * devPtr, const cudaChannelFormatDesc * desc, ::size_t width, ::size_t height, ::size_t pitch);
# 6172 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToArray(const textureReference * texref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6200 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindTextureToMipmappedArray(const textureReference * texref, cudaMipmappedArray_const_t mipmappedArray, const cudaChannelFormatDesc * desc);
# 6221 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaUnbindTexture(const textureReference * texref);
# 6246 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureAlignmentOffset(::size_t * offset, const textureReference * texref);
# 6271 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureReference(const textureReference ** texref, const void * symbol);
# 6311 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaBindSurfaceToArray(const surfaceReference * surfref, cudaArray_const_t array, const cudaChannelFormatDesc * desc);
# 6330 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceReference(const surfaceReference ** surfref, const void * symbol);
# 6556 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 6571 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 6587 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 6603 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 6620 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 6659 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 6674 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 6689 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 6716 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 6733 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 6738 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 6964 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime_api.h"
}
# 107 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 108 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 109 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 110 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 112 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 113 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 114 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 116 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 117 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 119 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 120 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 121 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 123 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 124 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 126 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 127 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 128 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 130 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 131 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 133 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 134 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 135 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 137 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 138 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 140 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 141 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 142 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(char)) * 8);
# 147 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 149 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 151 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 152 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 153 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 155 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 156 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 158 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 159 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 160 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 162 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 163 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 165 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 166 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 167 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 169 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 170 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 172 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 173 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 174 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 176 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 177 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 179 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 180 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 181 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 183 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 184 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 186 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 187 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 188 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 190 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 191 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 193 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 194 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 195 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(signed char)) * 8);
# 197 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 198 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 200 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 201 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 202 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned char)) * 8);
# 204 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 205 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 207 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 208 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 209 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 211 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 212 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 214 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 215 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 216 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 218 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 219 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 221 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 222 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 223 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 225 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 226 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 228 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 229 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 230 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 232 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 233 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 235 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 236 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 237 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 239 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 240 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 242 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 243 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 244 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 246 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 247 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 249 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 250 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 251 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(short)) * 8);
# 253 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 254 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 256 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 257 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 258 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned short)) * 8);
# 260 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 261 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 263 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 264 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 265 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 267 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 268 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 270 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 271 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 272 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 274 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 275 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 277 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 278 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 279 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 281 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 282 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 284 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 285 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 286 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 288 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 289 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 291 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 292 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 293 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 295 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 296 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 298 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 299 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 300 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 302 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 303 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 305 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 306 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 307 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(int)) * 8);
# 309 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 310 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 312 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 313 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 314 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(unsigned)) * 8);
# 316 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 317 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 379 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 380 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 381 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 383 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 384 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 386 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 387 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 388 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 390 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 391 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 393 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 394 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 395 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 397 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 398 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 400 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 401 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
{
# 402 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
int e = (((int)sizeof(float)) * 8);
# 404 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 405 "/usr/local/cuda-8.0/bin/..//include/channel_descriptor.h"
}
# 79 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, ::size_t p, ::size_t xsz, ::size_t ysz)
# 80 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
{
# 81 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
cudaPitchedPtr s;
# 83 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(s.ptr) = d;
# 84 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(s.pitch) = p;
# 85 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(s.xsize) = xsz;
# 86 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(s.ysize) = ysz;
# 88 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
return s;
# 89 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
}
# 106 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
static inline cudaPos make_cudaPos(::size_t x, ::size_t y, ::size_t z)
# 107 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
{
# 108 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
cudaPos p;
# 110 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(p.x) = x;
# 111 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(p.y) = y;
# 112 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(p.z) = z;
# 114 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
return p;
# 115 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
}
# 132 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
static inline cudaExtent make_cudaExtent(::size_t w, ::size_t h, ::size_t d)
# 133 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
{
# 134 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
cudaExtent e;
# 136 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(e.width) = w;
# 137 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(e.height) = h;
# 138 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
(e.depth) = d;
# 140 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
return e;
# 141 "/usr/local/cuda-8.0/bin/..//include/driver_functions.h"
}
# 75 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline char1 make_char1(signed char x)
# 76 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 77 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
char1 t; (t.x) = x; return t;
# 78 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 80 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uchar1 make_uchar1(unsigned char x)
# 81 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 82 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uchar1 t; (t.x) = x; return t;
# 83 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 85 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline char2 make_char2(signed char x, signed char y)
# 86 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 87 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
char2 t; (t.x) = x; (t.y) = y; return t;
# 88 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 90 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 91 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 92 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 93 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 95 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 96 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 97 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 98 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 100 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 101 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 102 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 103 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 105 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 106 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 107 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 108 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 110 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 111 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 112 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 113 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 115 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline short1 make_short1(short x)
# 116 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 117 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
short1 t; (t.x) = x; return t;
# 118 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 120 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ushort1 make_ushort1(unsigned short x)
# 121 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 122 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ushort1 t; (t.x) = x; return t;
# 123 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 125 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline short2 make_short2(short x, short y)
# 126 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 127 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
short2 t; (t.x) = x; (t.y) = y; return t;
# 128 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 130 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 131 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 132 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 133 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 135 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline short3 make_short3(short x, short y, short z)
# 136 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 137 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 138 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 140 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 141 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 142 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 143 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 145 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline short4 make_short4(short x, short y, short z, short w)
# 146 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 147 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 148 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 150 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 151 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 152 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 153 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 155 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline int1 make_int1(int x)
# 156 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 157 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
int1 t; (t.x) = x; return t;
# 158 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 160 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uint1 make_uint1(unsigned x)
# 161 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 162 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uint1 t; (t.x) = x; return t;
# 163 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 165 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline int2 make_int2(int x, int y)
# 166 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 167 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
int2 t; (t.x) = x; (t.y) = y; return t;
# 168 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 170 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uint2 make_uint2(unsigned x, unsigned y)
# 171 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 172 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uint2 t; (t.x) = x; (t.y) = y; return t;
# 173 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 175 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline int3 make_int3(int x, int y, int z)
# 176 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 177 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 178 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 180 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 181 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 182 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 183 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 185 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline int4 make_int4(int x, int y, int z, int w)
# 186 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 187 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 188 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 190 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 191 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 192 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 193 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 195 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline long1 make_long1(long x)
# 196 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 197 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
long1 t; (t.x) = x; return t;
# 198 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 200 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulong1 make_ulong1(unsigned long x)
# 201 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 202 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulong1 t; (t.x) = x; return t;
# 203 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 205 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline long2 make_long2(long x, long y)
# 206 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 207 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
long2 t; (t.x) = x; (t.y) = y; return t;
# 208 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 210 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 211 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 212 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 213 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 215 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline long3 make_long3(long x, long y, long z)
# 216 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 217 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 218 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 220 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 221 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 222 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 223 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 225 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline long4 make_long4(long x, long y, long z, long w)
# 226 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 227 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 228 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 230 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 231 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 232 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 233 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 235 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline float1 make_float1(float x)
# 236 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 237 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
float1 t; (t.x) = x; return t;
# 238 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 240 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline float2 make_float2(float x, float y)
# 241 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 242 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
float2 t; (t.x) = x; (t.y) = y; return t;
# 243 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 245 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline float3 make_float3(float x, float y, float z)
# 246 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 247 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 248 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 250 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline float4 make_float4(float x, float y, float z, float w)
# 251 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 252 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 253 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 255 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline longlong1 make_longlong1(long long x)
# 256 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 257 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
longlong1 t; (t.x) = x; return t;
# 258 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 260 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 261 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 262 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulonglong1 t; (t.x) = x; return t;
# 263 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 265 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline longlong2 make_longlong2(long long x, long long y)
# 266 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 267 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 268 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 270 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 271 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 272 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 273 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 275 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 276 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 277 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 278 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 280 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 281 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 282 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 283 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 285 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 286 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 287 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 288 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 290 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 291 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 292 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 293 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 295 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline double1 make_double1(double x)
# 296 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 297 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
double1 t; (t.x) = x; return t;
# 298 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 300 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline double2 make_double2(double x, double y)
# 301 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 302 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
double2 t; (t.x) = x; (t.y) = y; return t;
# 303 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 305 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline double3 make_double3(double x, double y, double z)
# 306 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 307 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 308 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 310 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
static inline double4 make_double4(double x, double y, double z, double w)
# 311 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
{
# 312 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 313 "/usr/local/cuda-8.0/bin/..//include/vector_functions.hpp"
}
# 27 "/usr/include/string.h" 3

# 27 "/usr/include/string.h" 3
extern "C" {
# 42 "/usr/include/string.h" 3
extern void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 43 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 46 "/usr/include/string.h" 3
extern void *memmove(void * __dest, const void * __src, ::size_t __n) throw()
# 47 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, ::size_t __n) throw()
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 62 "/usr/include/string.h" 3
extern void *memset(void * __s, int __c, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 65 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, ::size_t __n) throw()
# 66 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 70 "/usr/include/string.h" 3
extern "C++" {
# 72 "/usr/include/string.h" 3
extern void *memchr(void * __s, int __c, ::size_t __n) throw() __asm__("memchr")
# 73 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 74 "/usr/include/string.h" 3
extern const void *memchr(const void * __s, int __c, ::size_t __n) throw() __asm__("memchr")
# 75 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 90 "/usr/include/string.h" 3
}
# 101 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) throw() __asm__("rawmemchr")
# 102 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 103 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) throw() __asm__("rawmemchr")
# 104 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 112 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, ::size_t __n) throw() __asm__("memrchr")
# 113 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 114 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, ::size_t __n) throw() __asm__("memrchr")
# 115 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 125 "/usr/include/string.h" 3
extern char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 126 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/string.h" 3
extern char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 130 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 133 "/usr/include/string.h" 3
extern char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 134 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 136 "/usr/include/string.h" 3
extern char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 137 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 140 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) throw()
# 141 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 143 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, ::size_t __n) throw()
# 144 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 147 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) throw()
# 148 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 150 "/usr/include/string.h" 3
extern ::size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 152 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 39 "/usr/include/xlocale.h" 3
typedef
# 27 "/usr/include/xlocale.h" 3
struct __locale_struct {
# 30 "/usr/include/xlocale.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/xlocale.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/xlocale.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/xlocale.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/xlocale.h" 3
const char *__names[13];
# 39 "/usr/include/xlocale.h" 3
} *__locale_t;
# 42 "/usr/include/xlocale.h" 3
typedef __locale_t locale_t;
# 162 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, __locale_t __l) throw()
# 163 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 165 "/usr/include/string.h" 3
extern ::size_t strxfrm_l(char * __dest, const char * __src, ::size_t __n, __locale_t __l) throw()
# 166 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)));
# 171 "/usr/include/string.h" 3
extern char *strdup(const char * __s) throw()
# 172 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 179 "/usr/include/string.h" 3
extern char *strndup(const char * __string, ::size_t __n) throw()
# 180 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 209 "/usr/include/string.h" 3
extern "C++" {
# 211 "/usr/include/string.h" 3
extern char *strchr(char * __s, int __c) throw() __asm__("strchr")
# 212 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 213 "/usr/include/string.h" 3
extern const char *strchr(const char * __s, int __c) throw() __asm__("strchr")
# 214 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 229 "/usr/include/string.h" 3
}
# 236 "/usr/include/string.h" 3
extern "C++" {
# 238 "/usr/include/string.h" 3
extern char *strrchr(char * __s, int __c) throw() __asm__("strrchr")
# 239 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 240 "/usr/include/string.h" 3
extern const char *strrchr(const char * __s, int __c) throw() __asm__("strrchr")
# 241 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 256 "/usr/include/string.h" 3
}
# 267 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) throw() __asm__("strchrnul")
# 268 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 269 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) throw() __asm__("strchrnul")
# 270 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 280 "/usr/include/string.h" 3
extern ::size_t strcspn(const char * __s, const char * __reject) throw()
# 281 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 284 "/usr/include/string.h" 3
extern ::size_t strspn(const char * __s, const char * __accept) throw()
# 285 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 288 "/usr/include/string.h" 3
extern "C++" {
# 290 "/usr/include/string.h" 3
extern char *strpbrk(char * __s, const char * __accept) throw() __asm__("strpbrk")
# 291 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 292 "/usr/include/string.h" 3
extern const char *strpbrk(const char * __s, const char * __accept) throw() __asm__("strpbrk")
# 293 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 308 "/usr/include/string.h" 3
}
# 315 "/usr/include/string.h" 3
extern "C++" {
# 317 "/usr/include/string.h" 3
extern char *strstr(char * __haystack, const char * __needle) throw() __asm__("strstr")
# 318 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 319 "/usr/include/string.h" 3
extern const char *strstr(const char * __haystack, const char * __needle) throw() __asm__("strstr")
# 320 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 335 "/usr/include/string.h" 3
}
# 343 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) throw()
# 344 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 349 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 352 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 354 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) throw()
# 356 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 362 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 363 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 364 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) throw() __asm__("strcasestr")
# 366 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 377 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, ::size_t __haystacklen, const void * __needle, ::size_t __needlelen) throw()
# 379 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)));
# 383 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 385 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 386 "/usr/include/string.h" 3
extern void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, ::size_t __n) throw()
# 388 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 394 "/usr/include/string.h" 3
extern ::size_t strlen(const char * __s) throw()
# 395 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 401 "/usr/include/string.h" 3
extern ::size_t strnlen(const char * __string, ::size_t __maxlen) throw()
# 402 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 408 "/usr/include/string.h" 3
extern char *strerror(int __errnum) throw();
# 433 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, ::size_t __buflen) throw()
# 434 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 440 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, __locale_t __l) throw();
# 446 "/usr/include/string.h" 3
extern void __bzero(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 450 "/usr/include/string.h" 3
extern void bcopy(const void * __src, void * __dest, ::size_t __n) throw()
# 451 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/string.h" 3
extern void bzero(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 457 "/usr/include/string.h" 3
extern int bcmp(const void * __s1, const void * __s2, ::size_t __n) throw()
# 458 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 462 "/usr/include/string.h" 3
extern "C++" {
# 464 "/usr/include/string.h" 3
extern char *index(char * __s, int __c) throw() __asm__("index")
# 465 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 466 "/usr/include/string.h" 3
extern const char *index(const char * __s, int __c) throw() __asm__("index")
# 467 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 482 "/usr/include/string.h" 3
}
# 490 "/usr/include/string.h" 3
extern "C++" {
# 492 "/usr/include/string.h" 3
extern char *rindex(char * __s, int __c) throw() __asm__("rindex")
# 493 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 494 "/usr/include/string.h" 3
extern const char *rindex(const char * __s, int __c) throw() __asm__("rindex")
# 495 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 510 "/usr/include/string.h" 3
}
# 518 "/usr/include/string.h" 3
extern int ffs(int __i) throw() __attribute((const));
# 523 "/usr/include/string.h" 3
extern int ffsl(long __l) throw() __attribute((const));
# 524 "/usr/include/string.h" 3
__extension__ extern int ffsll(long long __ll) throw()
# 525 "/usr/include/string.h" 3
 __attribute((const));
# 529 "/usr/include/string.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) throw()
# 530 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 533 "/usr/include/string.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, ::size_t __n) throw()
# 534 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 540 "/usr/include/string.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, __locale_t __loc) throw()
# 542 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 544 "/usr/include/string.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, ::size_t __n, __locale_t __loc) throw()
# 546 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 552 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) throw()
# 554 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 559 "/usr/include/string.h" 3
extern char *strsignal(int __sig) throw();
# 562 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 563 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 564 "/usr/include/string.h" 3
extern char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) throw()
# 565 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 569 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 571 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 572 "/usr/include/string.h" 3
extern char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, ::size_t __n) throw()
# 574 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 579 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) throw()
# 580 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 583 "/usr/include/string.h" 3
extern char *strfry(char * __string) throw() __attribute((__nonnull__(1)));
# 586 "/usr/include/string.h" 3
extern void *memfrob(void * __s, ::size_t __n) throw() __attribute((__nonnull__(1)));
# 594 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) throw() __asm__("basename")
# 595 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 596 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) throw() __asm__("basename")
# 597 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 658 "/usr/include/string.h" 3
}
# 29 "/usr/include/time.h" 3
extern "C" {
# 30 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 36 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 43 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 124 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 125 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 126 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 127 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 129 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 130 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 131 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 132 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 133 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 135 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 136 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 137 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 138 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 139 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 140 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 141 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 143 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 144 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 163 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 166 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 167 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 170 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 177 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 182 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __quad_t *__qaddr_t;
# 183 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 186 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 189 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
struct timeval {
# 32 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__time_t tv_sec;
# 33 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
__suseconds_t tv_usec;
# 34 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
};
# 25 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 27 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 28 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 29 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 30 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 31 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 32 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 33 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 34 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 35 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 36 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 37 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 38 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 39 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 40 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 41 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 42 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 43 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 44 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 45 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 47 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 50 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 51 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 52 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 53 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 90 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" {
# 93 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}
# 59 "/usr/include/time.h" 3
typedef __clock_t clock_t;
# 75 "/usr/include/time.h" 3
typedef __time_t time_t;
# 91 "/usr/include/time.h" 3
typedef __clockid_t clockid_t;
# 103 "/usr/include/time.h" 3
typedef __timer_t timer_t;
# 120 "/usr/include/time.h" 3
struct timespec {
# 122 "/usr/include/time.h" 3
__time_t tv_sec;
# 123 "/usr/include/time.h" 3
__syscall_slong_t tv_nsec;
# 124 "/usr/include/time.h" 3
};
# 133 "/usr/include/time.h" 3
struct tm {
# 135 "/usr/include/time.h" 3
int tm_sec;
# 136 "/usr/include/time.h" 3
int tm_min;
# 137 "/usr/include/time.h" 3
int tm_hour;
# 138 "/usr/include/time.h" 3
int tm_mday;
# 139 "/usr/include/time.h" 3
int tm_mon;
# 140 "/usr/include/time.h" 3
int tm_year;
# 141 "/usr/include/time.h" 3
int tm_wday;
# 142 "/usr/include/time.h" 3
int tm_yday;
# 143 "/usr/include/time.h" 3
int tm_isdst;
# 146 "/usr/include/time.h" 3
long tm_gmtoff;
# 147 "/usr/include/time.h" 3
const char *tm_zone;
# 152 "/usr/include/time.h" 3
};
# 161 "/usr/include/time.h" 3
struct itimerspec {
# 163 "/usr/include/time.h" 3
timespec it_interval;
# 164 "/usr/include/time.h" 3
timespec it_value;
# 165 "/usr/include/time.h" 3
};
# 168 "/usr/include/time.h" 3
struct sigevent;
# 174 "/usr/include/time.h" 3
typedef __pid_t pid_t;
# 189 "/usr/include/time.h" 3
extern clock_t clock() throw();
# 192 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) throw();
# 195 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) throw()
# 196 "/usr/include/time.h" 3
 __attribute((const));
# 199 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) throw();
# 205 "/usr/include/time.h" 3
extern ::size_t strftime(char *__restrict__ __s, ::size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 213 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) throw();
# 223 "/usr/include/time.h" 3
extern ::size_t strftime_l(char *__restrict__ __s, ::size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 230 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, __locale_t __loc) throw();
# 239 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) throw();
# 243 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) throw();
# 249 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 254 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) throw();
# 261 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) throw();
# 264 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) throw();
# 272 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) throw();
# 276 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) throw();
# 282 "/usr/include/time.h" 3
extern char *__tzname[2];
# 283 "/usr/include/time.h" 3
extern int __daylight;
# 284 "/usr/include/time.h" 3
extern long __timezone;
# 289 "/usr/include/time.h" 3
extern char *tzname[2];
# 293 "/usr/include/time.h" 3
extern void tzset() throw();
# 297 "/usr/include/time.h" 3
extern int daylight;
# 298 "/usr/include/time.h" 3
extern long timezone;
# 304 "/usr/include/time.h" 3
extern int stime(const time_t * __when) throw();
# 319 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) throw();
# 322 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) throw();
# 325 "/usr/include/time.h" 3
extern int dysize(int __year) throw() __attribute((const));
# 334 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 339 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) throw();
# 342 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) throw();
# 345 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) throw();
# 353 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 358 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) throw();
# 363 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) throw();
# 368 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) throw();
# 371 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) throw();
# 376 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) throw();
# 380 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) throw();
# 386 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) throw()
# 387 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/time.h" 3
extern int getdate_err;
# 412 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 426 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 430 "/usr/include/time.h" 3
}
# 68 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"

# 68 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"
extern "C" {
# 71 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"
extern clock_t clock() throw();
# 72 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"
extern void *memset(void *, int, ::size_t) throw();
# 73 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"
extern void *memcpy(void *, const void *, ::size_t) throw();
# 75 "/usr/local/cuda-8.0/bin/..//include/common_functions.h"
}
# 93 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern "C" {
# 164 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int abs(int) throw();
# 165 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long labs(long) throw();
# 166 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long long llabs(long long) throw();
# 216 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fabs(double x) throw();
# 257 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fabsf(float x) throw();
# 261 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline int min(int, int);
# 263 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline unsigned umin(unsigned, unsigned);
# 264 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline long long llmin(long long, long long);
# 265 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline unsigned long long ullmin(unsigned long long, unsigned long long);
# 286 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fminf(float x, float y) throw();
# 306 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fmin(double x, double y) throw();
# 313 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline int max(int, int);
# 315 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline unsigned umax(unsigned, unsigned);
# 316 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline long long llmax(long long, long long);
# 317 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline unsigned long long ullmax(unsigned long long, unsigned long long);
# 338 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fmaxf(float x, float y) throw();
# 358 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fmax(double, double) throw();
# 402 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double sin(double x) throw();
# 435 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cos(double x) throw();
# 454 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern void sincos(double x, double * sptr, double * cptr) throw();
# 470 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern void sincosf(float x, float * sptr, float * cptr) throw();
# 515 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double tan(double x) throw();
# 584 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double sqrt(double x) throw();
# 656 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rsqrt(double x);
# 726 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rsqrtf(float x);
# 782 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double log2(double x) throw();
# 807 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double exp2(double x) throw();
# 832 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float exp2f(float x) throw();
# 859 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double exp10(double x) throw();
# 882 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float exp10f(float x) throw();
# 928 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double expm1(double x) throw();
# 973 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float expm1f(float x) throw();
# 1028 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float log2f(float x) throw();
# 1082 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double log10(double x) throw();
# 1153 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double log(double x) throw();
# 1247 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double log1p(double x) throw();
# 1344 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float log1pf(float x) throw();
# 1419 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double floor(double x) throw();
# 1458 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double exp(double x) throw();
# 1489 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cosh(double x) throw();
# 1519 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double sinh(double x) throw();
# 1549 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double tanh(double x) throw();
# 1584 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double acosh(double x) throw();
# 1622 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float acoshf(float x) throw();
# 1638 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double asinh(double x) throw();
# 1654 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float asinhf(float x) throw();
# 1708 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double atanh(double x) throw();
# 1762 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float atanhf(float x) throw();
# 1821 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double ldexp(double x, int exp) throw();
# 1877 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float ldexpf(float x, int exp) throw();
# 1929 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double logb(double x) throw();
# 1984 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float logbf(float x) throw();
# 2014 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int ilogb(double x) throw();
# 2044 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int ilogbf(float x) throw();
# 2120 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double scalbn(double x, int n) throw();
# 2196 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float scalbnf(float x, int n) throw();
# 2272 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double scalbln(double x, long n) throw();
# 2348 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float scalblnf(float x, long n) throw();
# 2426 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double frexp(double x, int * nptr) throw();
# 2501 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float frexpf(float x, int * nptr) throw();
# 2515 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double round(double x) throw();
# 2532 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float roundf(float x) throw();
# 2550 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long lround(double x) throw();
# 2568 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long lroundf(float x) throw();
# 2586 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long long llround(double x) throw();
# 2604 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long long llroundf(float x) throw();
# 2656 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rintf(float x) throw();
# 2672 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long lrint(double x) throw();
# 2688 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long lrintf(float x) throw();
# 2704 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long long llrint(double x) throw();
# 2720 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern long long llrintf(float x) throw();
# 2773 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double nearbyint(double x) throw();
# 2826 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float nearbyintf(float x) throw();
# 2888 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double ceil(double x) throw();
# 2900 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double trunc(double x) throw();
# 2915 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float truncf(float x) throw();
# 2941 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fdim(double x, double y) throw();
# 2967 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fdimf(float x, float y) throw();
# 3003 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double atan2(double y, double x) throw();
# 3034 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double atan(double x) throw();
# 3057 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double acos(double x) throw();
# 3089 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double asin(double x) throw();
# 3135 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double hypot(double x, double y) throw();
# 3187 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rhypot(double x, double y) throw();
# 3233 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float hypotf(float x, float y) throw();
# 3285 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rhypotf(float x, float y) throw();
# 3332 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double norm3d(double a, double b, double c) throw();
# 3383 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rnorm3d(double a, double b, double c) throw();
# 3432 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double norm4d(double a, double b, double c, double d) throw();
# 3488 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rnorm4d(double a, double b, double c, double d) throw();
# 3533 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double norm(int dim, const double * t) throw();
# 3584 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rnorm(int dim, const double * t) throw();
# 3636 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rnormf(int dim, const float * a) throw();
# 3680 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float normf(int dim, const float * a) throw();
# 3725 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float norm3df(float a, float b, float c) throw();
# 3776 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rnorm3df(float a, float b, float c) throw();
# 3825 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float norm4df(float a, float b, float c, float d) throw();
# 3881 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rnorm4df(float a, float b, float c, float d) throw();
# 3965 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cbrt(double x) throw();
# 4051 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float cbrtf(float x) throw();
# 4106 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double rcbrt(double x);
# 4156 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float rcbrtf(float x);
# 4216 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double sinpi(double x);
# 4276 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float sinpif(float x);
# 4328 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cospi(double x);
# 4380 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float cospif(float x);
# 4410 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern void sincospi(double x, double * sptr, double * cptr);
# 4440 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern void sincospif(float x, float * sptr, float * cptr);
# 4752 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double pow(double x, double y) throw();
# 4808 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double modf(double x, double * iptr) throw();
# 4867 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fmod(double x, double y) throw();
# 4953 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double remainder(double x, double y) throw();
# 5043 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float remainderf(float x, float y) throw();
# 5097 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double remquo(double x, double y, int * quo) throw();
# 5151 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float remquof(float x, float y, int * quo) throw();
# 5192 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double j0(double x) throw();
# 5234 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float j0f(float x) throw();
# 5295 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double j1(double x) throw();
# 5356 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float j1f(float x) throw();
# 5399 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double jn(int n, double x) throw();
# 5442 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float jnf(int n, float x) throw();
# 5494 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double y0(double x) throw();
# 5546 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float y0f(float x) throw();
# 5598 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double y1(double x) throw();
# 5650 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float y1f(float x) throw();
# 5703 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double yn(int n, double x) throw();
# 5756 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float ynf(int n, float x) throw();
# 5783 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cyl_bessel_i0(double x) throw();
# 5809 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float cyl_bessel_i0f(float x) throw();
# 5836 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double cyl_bessel_i1(double x) throw();
# 5862 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float cyl_bessel_i1f(float x) throw();
# 5945 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double erf(double x) throw();
# 6027 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float erff(float x) throw();
# 6091 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double erfinv(double y);
# 6148 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float erfinvf(float y);
# 6187 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double erfc(double x) throw();
# 6225 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float erfcf(float x) throw();
# 6353 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double lgamma(double x) throw();
# 6416 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double erfcinv(double y);
# 6472 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float erfcinvf(float y);
# 6530 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double normcdfinv(double y);
# 6588 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float normcdfinvf(float y);
# 6631 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double normcdf(double y);
# 6674 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float normcdff(float y);
# 6749 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double erfcx(double x);
# 6824 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float erfcxf(float x);
# 6958 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float lgammaf(float x) throw();
# 7067 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double tgamma(double x) throw();
# 7176 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float tgammaf(float x) throw();
# 7189 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double copysign(double x, double y) throw();
# 7202 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float copysignf(float x, float y) throw();
# 7239 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double nextafter(double x, double y) throw();
# 7276 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float nextafterf(float x, float y) throw();
# 7292 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double nan(const char * tagp) throw();
# 7308 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float nanf(const char * tagp) throw();
# 7315 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isinff(float) throw();
# 7316 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isnanf(float) throw();
# 7326 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __finite(double) throw();
# 7327 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __finitef(float) throw();
# 7328 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __signbit(double) throw();
# 7329 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isnan(double) throw();
# 7330 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isinf(double) throw();
# 7333 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __signbitf(float) throw();
# 7492 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern double fma(double x, double y, double z) throw();
# 7650 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fmaf(float x, float y, float z) throw();
# 7661 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __signbitl(long double) throw();
# 7667 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __finitel(long double) throw();
# 7668 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isinfl(long double) throw();
# 7669 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern int __isnanl(long double) throw();
# 7719 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float acosf(float x) throw();
# 7759 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float asinf(float x) throw();
# 7799 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float atanf(float x) throw();
# 7832 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float atan2f(float y, float x) throw();
# 7856 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float cosf(float x) throw();
# 7898 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float sinf(float x) throw();
# 7940 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float tanf(float x) throw();
# 7964 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float coshf(float x) throw();
# 8005 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float sinhf(float x) throw();
# 8035 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float tanhf(float x) throw();
# 8086 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float logf(float x) throw();
# 8136 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float expf(float x) throw();
# 8187 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float log10f(float x) throw();
# 8242 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float modff(float x, float * iptr) throw();
# 8550 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float powf(float x, float y) throw();
# 8619 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float sqrtf(float x) throw();
# 8678 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float ceilf(float x) throw();
# 8750 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float floorf(float x) throw();
# 8809 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern float fmodf(float x, float y) throw();
# 8823 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
}
# 28 "/usr/include/math.h" 3

# 28 "/usr/include/math.h" 3
extern "C" {
# 28 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef float float_t;
# 29 "/usr/include/x86_64-linux-gnu/bits/mathdef.h" 3
typedef double double_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acos(double __x) throw(); extern double __acos(double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asin(double __x) throw(); extern double __asin(double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan(double __x) throw(); extern double __atan(double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) throw(); extern double __atan2(double __y, double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cos(double __x) throw(); extern double __cos(double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sin(double __x) throw(); extern double __sin(double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tan(double __x) throw(); extern double __tan(double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cosh(double __x) throw(); extern double __cosh(double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sinh(double __x) throw(); extern double __sinh(double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tanh(double __x) throw(); extern double __tanh(double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) throw(); extern void __sincos(double __x, double * __sinx, double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acosh(double __x) throw(); extern double __acosh(double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asinh(double __x) throw(); extern double __asinh(double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atanh(double __x) throw(); extern double __atanh(double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp(double __x) throw(); extern double __exp(double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) throw(); extern double __frexp(double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) throw(); extern double __ldexp(double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log(double __x) throw(); extern double __log(double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log10(double __x) throw(); extern double __log10(double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) throw(); extern double __modf(double __x, double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp10(double __x) throw(); extern double __exp10(double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow10(double __x) throw(); extern double __pow10(double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double expm1(double __x) throw(); extern double __expm1(double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log1p(double __x) throw(); extern double __log1p(double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double logb(double __x) throw(); extern double __logb(double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp2(double __x) throw(); extern double __exp2(double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log2(double __x) throw(); extern double __log2(double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow(double __x, double __y) throw(); extern double __pow(double __x, double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sqrt(double __x) throw(); extern double __sqrt(double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) throw(); extern double __hypot(double __x, double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cbrt(double __x) throw(); extern double __cbrt(double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ceil(double __x) throw() __attribute((const)); extern double __ceil(double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fabs(double __x) throw() __attribute((const)); extern double __fabs(double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double floor(double __x) throw() __attribute((const)); extern double __floor(double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) throw(); extern double __fmod(double __x, double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinf(double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finite(double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finite(double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double drem(double __x, double __y) throw(); extern double __drem(double __x, double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double significand(double __x) throw(); extern double __significand(double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) throw() __attribute((const)); extern double __copysign(double __x, double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nan(const char * __tagb) throw() __attribute((const)); extern double __nan(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnan(double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j0(double) throw(); extern double __j0(double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j1(double) throw(); extern double __j1(double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double jn(int, double) throw(); extern double __jn(int, double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y0(double) throw(); extern double __y0(double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y1(double) throw(); extern double __y1(double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double yn(int, double) throw(); extern double __yn(int, double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erf(double) throw(); extern double __erf(double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erfc(double) throw(); extern double __erfc(double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma(double) throw(); extern double __lgamma(double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tgamma(double) throw(); extern double __tgamma(double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double gamma(double) throw(); extern double __gamma(double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) throw(); extern double __lgamma_r(double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double rint(double __x) throw(); extern double __rint(double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) throw() __attribute((const)); extern double __nextafter(double __x, double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) throw() __attribute((const)); extern double __nexttoward(double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) throw(); extern double __remainder(double __x, double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) throw(); extern double __scalbn(double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogb(double __x) throw(); extern int __ilogb(double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) throw(); extern double __scalbln(double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nearbyint(double __x) throw(); extern double __nearbyint(double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double round(double __x) throw() __attribute((const)); extern double __round(double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double trunc(double __x) throw() __attribute((const)); extern double __trunc(double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) throw(); extern double __remquo(double __x, double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrint(double __x) throw(); extern long __lrint(double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrint(double __x) throw(); extern long long __llrint(double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lround(double __x) throw(); extern long __lround(double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llround(double __x) throw(); extern long long __llround(double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) throw(); extern double __fdim(double __x, double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) throw() __attribute((const)); extern double __fmax(double __x, double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) throw() __attribute((const)); extern double __fmin(double __x, double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassify(double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __signbit(double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) throw(); extern double __fma(double __x, double __y, double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignaling(double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) throw(); extern double __scalb(double __x, double __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acosf(float __x) throw(); extern float __acosf(float __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinf(float __x) throw(); extern float __asinf(float __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanf(float __x) throw(); extern float __atanf(float __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) throw(); extern float __atan2f(float __y, float __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cosf(float __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinf(float __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanf(float __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float coshf(float __x) throw(); extern float __coshf(float __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinhf(float __x) throw(); extern float __sinhf(float __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanhf(float __x) throw(); extern float __tanhf(float __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acoshf(float __x) throw(); extern float __acoshf(float __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinhf(float __x) throw(); extern float __asinhf(float __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanhf(float __x) throw(); extern float __atanhf(float __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expf(float __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) throw(); extern float __frexpf(float __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) throw(); extern float __ldexpf(float __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logf(float __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log10f(float __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) throw(); extern float __modff(float __x, float * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp10f(float __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float pow10f(float __x) throw(); extern float __pow10f(float __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expm1f(float __x) throw(); extern float __expm1f(float __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log1pf(float __x) throw(); extern float __log1pf(float __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logbf(float __x) throw(); extern float __logbf(float __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp2f(float __x) throw(); extern float __exp2f(float __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log2f(float __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float powf(float __x, float __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sqrtf(float __x) throw(); extern float __sqrtf(float __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) throw(); extern float __hypotf(float __x, float __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cbrtf(float __x) throw(); extern float __cbrtf(float __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ceilf(float __x) throw() __attribute((const)); extern float __ceilf(float __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fabsf(float __x) throw() __attribute((const)); extern float __fabsf(float __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float floorf(float __x) throw() __attribute((const)); extern float __floorf(float __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) throw(); extern float __fmodf(float __x, float __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinff(float __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitef(float __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinff(float __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitef(float __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) throw(); extern float __dremf(float __x, float __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float significandf(float __x) throw(); extern float __significandf(float __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) throw() __attribute((const)); extern float __copysignf(float __x, float __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) throw() __attribute((const)); extern float __nanf(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanf(float __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanf(float __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j0f(float) throw(); extern float __j0f(float) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j1f(float) throw(); extern float __j1f(float) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float jnf(int, float) throw(); extern float __jnf(int, float) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y0f(float) throw(); extern float __y0f(float) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y1f(float) throw(); extern float __y1f(float) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ynf(int, float) throw(); extern float __ynf(int, float) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erff(float) throw(); extern float __erff(float) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erfcf(float) throw(); extern float __erfcf(float) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf(float) throw(); extern float __lgammaf(float) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tgammaf(float) throw(); extern float __tgammaf(float) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float gammaf(float) throw(); extern float __gammaf(float) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) throw(); extern float __lgammaf_r(float, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float rintf(float __x) throw(); extern float __rintf(float __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) throw() __attribute((const)); extern float __nextafterf(float __x, float __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) throw() __attribute((const)); extern float __nexttowardf(float __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) throw(); extern float __remainderf(float __x, float __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) throw(); extern float __scalbnf(float __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf(float __x) throw(); extern int __ilogbf(float __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) throw(); extern float __scalblnf(float __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nearbyintf(float __x) throw(); extern float __nearbyintf(float __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundf(float __x) throw() __attribute((const)); extern float __roundf(float __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float truncf(float __x) throw() __attribute((const)); extern float __truncf(float __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) throw(); extern float __remquof(float __x, float __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf(float __x) throw(); extern long __lrintf(float __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf(float __x) throw(); extern long long __llrintf(float __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf(float __x) throw(); extern long __lroundf(float __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf(float __x) throw(); extern long long __llroundf(float __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) throw(); extern float __fdimf(float __x, float __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) throw() __attribute((const)); extern float __fmaxf(float __x, float __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) throw() __attribute((const)); extern float __fminf(float __x, float __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyf(float __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __signbitf(float __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) throw(); extern float __fmaf(float __x, float __y, float __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingf(float __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) throw(); extern float __scalbf(float __x, float __n) throw();
# 54 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acosl(long double __x) throw(); extern long double __acosl(long double __x) throw();
# 56 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinl(long double __x) throw(); extern long double __asinl(long double __x) throw();
# 58 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanl(long double __x) throw(); extern long double __atanl(long double __x) throw();
# 60 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) throw(); extern long double __atan2l(long double __y, long double __x) throw();
# 63 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cosl(long double __x) throw(); extern long double __cosl(long double __x) throw();
# 65 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinl(long double __x) throw(); extern long double __sinl(long double __x) throw();
# 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanl(long double __x) throw(); extern long double __tanl(long double __x) throw();
# 72 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double coshl(long double __x) throw(); extern long double __coshl(long double __x) throw();
# 74 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinhl(long double __x) throw(); extern long double __sinhl(long double __x) throw();
# 76 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanhl(long double __x) throw(); extern long double __tanhl(long double __x) throw();
# 81 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) throw(); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acoshl(long double __x) throw(); extern long double __acoshl(long double __x) throw();
# 90 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinhl(long double __x) throw(); extern long double __asinhl(long double __x) throw();
# 92 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanhl(long double __x) throw(); extern long double __atanhl(long double __x) throw();
# 100 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expl(long double __x) throw(); extern long double __expl(long double __x) throw();
# 103 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) throw(); extern long double __frexpl(long double __x, int * __exponent) throw();
# 106 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) throw(); extern long double __ldexpl(long double __x, int __exponent) throw();
# 109 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logl(long double __x) throw(); extern long double __logl(long double __x) throw();
# 112 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log10l(long double __x) throw(); extern long double __log10l(long double __x) throw();
# 115 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) throw(); extern long double __modfl(long double __x, long double * __iptr) throw() __attribute((__nonnull__(2)));
# 120 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp10l(long double __x) throw(); extern long double __exp10l(long double __x) throw();
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double pow10l(long double __x) throw(); extern long double __pow10l(long double __x) throw();
# 128 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expm1l(long double __x) throw(); extern long double __expm1l(long double __x) throw();
# 131 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log1pl(long double __x) throw(); extern long double __log1pl(long double __x) throw();
# 134 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logbl(long double __x) throw(); extern long double __logbl(long double __x) throw();
# 141 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp2l(long double __x) throw(); extern long double __exp2l(long double __x) throw();
# 144 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log2l(long double __x) throw(); extern long double __log2l(long double __x) throw();
# 153 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) throw(); extern long double __powl(long double __x, long double __y) throw();
# 156 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) throw(); extern long double __sqrtl(long double __x) throw();
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) throw(); extern long double __hypotl(long double __x, long double __y) throw();
# 169 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) throw(); extern long double __cbrtl(long double __x) throw();
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ceill(long double __x) throw() __attribute((const)); extern long double __ceill(long double __x) throw() __attribute((const));
# 181 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fabsl(long double __x) throw() __attribute((const)); extern long double __fabsl(long double __x) throw() __attribute((const));
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double floorl(long double __x) throw() __attribute((const)); extern long double __floorl(long double __x) throw() __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) throw(); extern long double __fmodl(long double __x, long double __y) throw();
# 192 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isinfl(long double __value) throw() __attribute((const));
# 195 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __finitel(long double __value) throw() __attribute((const));
# 204 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinfl(long double __value) throw() __attribute((const));
# 208 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitel(long double __value) throw() __attribute((const));
# 211 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) throw(); extern long double __dreml(long double __x, long double __y) throw();
# 215 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double significandl(long double __x) throw(); extern long double __significandl(long double __x) throw();
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) throw() __attribute((const)); extern long double __copysignl(long double __x, long double __y) throw() __attribute((const));
# 228 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) throw() __attribute((const)); extern long double __nanl(const char * __tagb) throw() __attribute((const));
# 234 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __isnanl(long double __value) throw() __attribute((const));
# 241 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanl(long double __value) throw() __attribute((const));
# 247 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j0l(long double) throw(); extern long double __j0l(long double) throw();
# 248 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j1l(long double) throw(); extern long double __j1l(long double) throw();
# 249 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double jnl(int, long double) throw(); extern long double __jnl(int, long double) throw();
# 250 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y0l(long double) throw(); extern long double __y0l(long double) throw();
# 251 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y1l(long double) throw(); extern long double __y1l(long double) throw();
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ynl(int, long double) throw(); extern long double __ynl(int, long double) throw();
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfl(long double) throw(); extern long double __erfl(long double) throw();
# 260 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfcl(long double) throw(); extern long double __erfcl(long double) throw();
# 261 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal(long double) throw(); extern long double __lgammal(long double) throw();
# 268 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tgammal(long double) throw(); extern long double __tgammal(long double) throw();
# 274 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double gammal(long double) throw(); extern long double __gammal(long double) throw();
# 281 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) throw(); extern long double __lgammal_r(long double, int * __signgamp) throw();
# 289 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double rintl(long double __x) throw(); extern long double __rintl(long double __x) throw();
# 292 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) throw() __attribute((const)); extern long double __nextafterl(long double __x, long double __y) throw() __attribute((const));
# 294 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) throw() __attribute((const)); extern long double __nexttowardl(long double __x, long double __y) throw() __attribute((const));
# 298 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) throw(); extern long double __remainderl(long double __x, long double __y) throw();
# 302 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) throw(); extern long double __scalbnl(long double __x, int __n) throw();
# 306 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbl(long double __x) throw(); extern int __ilogbl(long double __x) throw();
# 311 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) throw(); extern long double __scalblnl(long double __x, long __n) throw();
# 315 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) throw(); extern long double __nearbyintl(long double __x) throw();
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundl(long double __x) throw() __attribute((const)); extern long double __roundl(long double __x) throw() __attribute((const));
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double truncl(long double __x) throw() __attribute((const)); extern long double __truncl(long double __x) throw() __attribute((const));
# 328 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) throw(); extern long double __remquol(long double __x, long double __y, int * __quo) throw();
# 335 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintl(long double __x) throw(); extern long __lrintl(long double __x) throw();
# 337 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintl(long double __x) throw(); extern long long __llrintl(long double __x) throw();
# 341 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundl(long double __x) throw(); extern long __lroundl(long double __x) throw();
# 343 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundl(long double __x) throw(); extern long long __llroundl(long double __x) throw();
# 347 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) throw(); extern long double __fdiml(long double __x, long double __y) throw();
# 350 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) throw() __attribute((const)); extern long double __fmaxl(long double __x, long double __y) throw() __attribute((const));
# 353 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) throw() __attribute((const)); extern long double __fminl(long double __x, long double __y) throw() __attribute((const));
# 357 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __fpclassifyl(long double __value) throw()
# 358 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 361 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __signbitl(long double __value) throw()
# 362 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) throw(); extern long double __fmal(long double __x, long double __y, long double __z) throw();
# 375 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int __issignalingl(long double __value) throw()
# 376 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 383 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) throw(); extern long double __scalbl(long double __x, long double __n) throw();
# 168 "/usr/include/math.h" 3
extern int signgam;
# 210 "/usr/include/math.h" 3
enum {
# 211 "/usr/include/math.h" 3
FP_NAN,
# 214 "/usr/include/math.h" 3
FP_INFINITE,
# 217 "/usr/include/math.h" 3
FP_ZERO,
# 220 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 223 "/usr/include/math.h" 3
FP_NORMAL
# 226 "/usr/include/math.h" 3
};
# 354 "/usr/include/math.h" 3
typedef
# 348 "/usr/include/math.h" 3
enum {
# 349 "/usr/include/math.h" 3
_IEEE_ = (-1),
# 350 "/usr/include/math.h" 3
_SVID_ = 0,
# 351 "/usr/include/math.h" 3
_XOPEN_,
# 352 "/usr/include/math.h" 3
_POSIX_,
# 353 "/usr/include/math.h" 3
_ISOC_
# 354 "/usr/include/math.h" 3
} _LIB_VERSION_TYPE;
# 359 "/usr/include/math.h" 3
extern _LIB_VERSION_TYPE _LIB_VERSION;
# 370 "/usr/include/math.h" 3
struct __exception {
# 375 "/usr/include/math.h" 3
int type;
# 376 "/usr/include/math.h" 3
char *name;
# 377 "/usr/include/math.h" 3
double arg1;
# 378 "/usr/include/math.h" 3
double arg2;
# 379 "/usr/include/math.h" 3
double retval;
# 380 "/usr/include/math.h" 3
};
# 383 "/usr/include/math.h" 3
extern int matherr(__exception * __exc) throw();
# 534 "/usr/include/math.h" 3
}
# 34 "/usr/include/stdlib.h" 3
extern "C" {
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
typedef
# 51 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
enum {
# 52 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_ALL,
# 53 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PID,
# 54 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
P_PGID
# 55 "/usr/include/x86_64-linux-gnu/bits/waitflags.h" 3
} idtype_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline unsigned __bswap_32(unsigned __bsx)
# 46 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 48 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 109 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 110 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 111 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 112 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 66 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
union wait {
# 68 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
int w_status;
# 70 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 72 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_termsig:7;
# 73 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_coredump:1;
# 74 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_retcode:8;
# 75 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 83 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_terminated;
# 85 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
struct {
# 87 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopval:8;
# 88 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned __w_stopsig:8;
# 89 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
unsigned:16;
# 96 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
} __wait_stopped;
# 97 "/usr/include/x86_64-linux-gnu/bits/waitstatus.h" 3
};
# 101 "/usr/include/stdlib.h" 3
typedef
# 98 "/usr/include/stdlib.h" 3
struct {
# 99 "/usr/include/stdlib.h" 3
int quot;
# 100 "/usr/include/stdlib.h" 3
int rem;
# 101 "/usr/include/stdlib.h" 3
} div_t;
# 109 "/usr/include/stdlib.h" 3
typedef
# 106 "/usr/include/stdlib.h" 3
struct {
# 107 "/usr/include/stdlib.h" 3
long quot;
# 108 "/usr/include/stdlib.h" 3
long rem;
# 109 "/usr/include/stdlib.h" 3
} ldiv_t;
# 121 "/usr/include/stdlib.h" 3
__extension__ typedef
# 118 "/usr/include/stdlib.h" 3
struct {
# 119 "/usr/include/stdlib.h" 3
long long quot;
# 120 "/usr/include/stdlib.h" 3
long long rem;
# 121 "/usr/include/stdlib.h" 3
} lldiv_t;
# 139 "/usr/include/stdlib.h" 3
extern ::size_t __ctype_get_mb_cur_max() throw();
# 144 "/usr/include/stdlib.h" 3
extern double atof(const char * __nptr) throw()
# 145 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 147 "/usr/include/stdlib.h" 3
extern int atoi(const char * __nptr) throw()
# 148 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 150 "/usr/include/stdlib.h" 3
extern long atol(const char * __nptr) throw()
# 151 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 157 "/usr/include/stdlib.h" 3
__extension__ extern long long atoll(const char * __nptr) throw()
# 158 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 164 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 166 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 172 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 173 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 175 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) throw()
# 177 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 183 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 185 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 187 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 189 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 195 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 197 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 200 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 202 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 209 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 211 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 214 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) throw()
# 216 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 239 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 243 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 246 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 249 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 252 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 255 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, __locale_t __loc) throw()
# 258 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 260 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 262 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 264 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 266 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 268 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, __locale_t __loc) throw()
# 271 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 305 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) throw();
# 308 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) throw()
# 309 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" {
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsid_t fsid_t;
# 44 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __loff_t loff_t;
# 48 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino_t ino_t;
# 55 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino64_t ino64_t;
# 60 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __dev_t dev_t;
# 65 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __gid_t gid_t;
# 70 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __mode_t mode_t;
# 75 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __nlink_t nlink_t;
# 80 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uid_t uid_t;
# 86 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off_t off_t;
# 93 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off64_t off64_t;
# 104 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __id_t id_t;
# 109 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ssize_t ssize_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __daddr_t daddr_t;
# 116 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __caddr_t caddr_t;
# 122 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __key_t key_t;
# 136 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __useconds_t useconds_t;
# 140 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long ulong;
# 151 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short ushort;
# 152 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned uint;
# 194 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef signed char int8_t __attribute((__mode__(__QI__)));
# 195 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef short int16_t __attribute((__mode__(__HI__)));
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef int int32_t __attribute((__mode__(__SI__)));
# 197 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long int64_t __attribute((__mode__(__DI__)));
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned char u_int8_t __attribute((__mode__(__QI__)));
# 201 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short u_int16_t __attribute((__mode__(__HI__)));
# 202 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned u_int32_t __attribute((__mode__(__SI__)));
# 203 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long u_int64_t __attribute((__mode__(__DI__)));
# 205 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 22 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef int __sig_atomic_t;
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
typedef
# 28 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
struct {
# 29 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 30 "/usr/include/x86_64-linux-gnu/bits/sigset.h" 3
} __sigset_t;
# 37 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __sigset_t sigset_t;
# 54 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef long __fd_mask;
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef
# 65 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 69 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 75 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set;
# 82 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __fd_mask fd_mask;
# 96 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" {
# 106 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 118 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 131 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
}
# 24 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
extern "C" {
# 27 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern unsigned gnu_dev_major(unsigned long long __dev) throw()
# 28 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 30 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern unsigned gnu_dev_minor(unsigned long long __dev) throw()
# 31 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
__extension__ extern unsigned long long gnu_dev_makedev(unsigned __major, unsigned __minor) throw()
# 35 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
 __attribute((const));
# 58 "/usr/include/x86_64-linux-gnu/sys/sysmacros.h" 3
}
# 228 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blksize_t blksize_t;
# 235 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 239 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 243 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 262 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 263 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 264 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 65 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 66 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 67 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
};
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 75 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_internal_list {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__prev;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_internal_list *__next;
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __pthread_list_t;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 92 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct __pthread_mutex_s {
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __count;
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __owner;
# 98 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nusers;
# 102 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __kind;
# 104 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __spins;
# 105 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
short __elision;
# 106 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_list_t __list;
# 125 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 126 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 127 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 128 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 131 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 132 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 133 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 134 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 140 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 142 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 143 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 144 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __futex;
# 145 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __total_seq;
# 146 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __wakeup_seq;
# 147 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ unsigned long long __woken_seq;
# 148 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
void *__mutex;
# 149 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nwaiters;
# 150 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __broadcast_seq;
# 151 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 152 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 153 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 154 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 157 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 158 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 159 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 160 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 164 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 168 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 175 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 178 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
struct {
# 179 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __lock;
# 180 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers;
# 181 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __readers_wakeup;
# 182 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __writer_wakeup;
# 183 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_readers_queued;
# 184 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __nr_writers_queued;
# 185 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __writer;
# 186 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __shared;
# 187 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
signed char __rwelision;
# 192 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned char __pad1[7];
# 195 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned long __pad2;
# 198 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
unsigned __flags;
# 200 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} __data;
# 220 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 221 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 222 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 225 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 226 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 227 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 228 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 234 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 240 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 241 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 242 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 243 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 246 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 247 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 248 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 249 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 273 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
}
# 321 "/usr/include/stdlib.h" 3
extern long random() throw();
# 324 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) throw();
# 330 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, ::size_t __statelen) throw()
# 331 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 335 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) throw() __attribute((__nonnull__(1)));
# 343 "/usr/include/stdlib.h" 3
struct random_data {
# 345 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 346 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 347 "/usr/include/stdlib.h" 3
int32_t *state;
# 348 "/usr/include/stdlib.h" 3
int rand_type;
# 349 "/usr/include/stdlib.h" 3
int rand_deg;
# 350 "/usr/include/stdlib.h" 3
int rand_sep;
# 351 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 352 "/usr/include/stdlib.h" 3
};
# 354 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) throw()
# 355 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 357 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) throw()
# 358 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 360 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, ::size_t __statelen, random_data *__restrict__ __buf) throw()
# 363 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 365 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) throw()
# 367 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 374 "/usr/include/stdlib.h" 3
extern int rand() throw();
# 376 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) throw();
# 381 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) throw();
# 389 "/usr/include/stdlib.h" 3
extern double drand48() throw();
# 390 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) throw() __attribute((__nonnull__(1)));
# 393 "/usr/include/stdlib.h" 3
extern long lrand48() throw();
# 394 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) throw()
# 395 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 398 "/usr/include/stdlib.h" 3
extern long mrand48() throw();
# 399 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) throw()
# 400 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 403 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) throw();
# 404 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) throw()
# 405 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 406 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) throw() __attribute((__nonnull__(1)));
# 412 "/usr/include/stdlib.h" 3
struct drand48_data {
# 414 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 415 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 416 "/usr/include/stdlib.h" 3
unsigned short __c;
# 417 "/usr/include/stdlib.h" 3
unsigned short __init;
# 418 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 420 "/usr/include/stdlib.h" 3
};
# 423 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 424 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 425 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) throw()
# 427 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 430 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 432 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 433 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 436 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 439 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 441 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 442 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) throw()
# 445 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 448 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) throw()
# 449 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) throw()
# 452 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 454 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) throw()
# 456 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 466 "/usr/include/stdlib.h" 3
extern void *malloc(::size_t __size) throw() __attribute((__malloc__));
# 468 "/usr/include/stdlib.h" 3
extern void *calloc(::size_t __nmemb, ::size_t __size) throw()
# 469 "/usr/include/stdlib.h" 3
 __attribute((__malloc__));
# 480 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, ::size_t __size) throw()
# 481 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__));
# 483 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) throw();
# 488 "/usr/include/stdlib.h" 3
extern void cfree(void * __ptr) throw();
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(::size_t __size) throw();
# 38 "/usr/include/alloca.h" 3
}
# 498 "/usr/include/stdlib.h" 3
extern void *valloc(::size_t __size) throw() __attribute((__malloc__));
# 503 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, ::size_t __alignment, ::size_t __size) throw()
# 504 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 509 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(::size_t __alignment, ::size_t __size) throw()
# 510 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(2)));
# 515 "/usr/include/stdlib.h" 3
extern void abort() throw() __attribute((__noreturn__));
# 519 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) throw() __attribute((__nonnull__(1)));
# 524 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) throw() __asm__("at_quick_exit")
# 525 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 535 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) throw()
# 536 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
extern void exit(int __status) throw() __attribute((__noreturn__));
# 549 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) throw() __attribute((__noreturn__));
# 557 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) throw() __attribute((__noreturn__));
# 564 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 570 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) throw()
# 571 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 578 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) throw() __attribute((__nonnull__(1)));
# 584 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) throw()
# 585 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 588 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) throw() __attribute((__nonnull__(1)));
# 595 "/usr/include/stdlib.h" 3
extern int clearenv() throw();
# 606 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) throw() __attribute((__nonnull__(1)));
# 619 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1)));
# 629 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1)));
# 641 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1)));
# 651 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 652 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 662 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) throw() __attribute((__nonnull__(1)));
# 673 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1)));
# 683 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1)));
# 693 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 694 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 705 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 706 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 716 "/usr/include/stdlib.h" 3
extern int system(const char * __command);
# 723 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) throw()
# 724 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 733 "/usr/include/stdlib.h" 3
extern char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) throw();
# 741 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 744 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 748 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 754 "/usr/include/stdlib.h" 3
extern void *bsearch(const void * __key, const void * __base, ::size_t __nmemb, ::size_t __size, __compar_fn_t __compar)
# 756 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 764 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, ::size_t __nmemb, ::size_t __size, __compar_fn_t __compar)
# 765 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 767 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, ::size_t __nmemb, ::size_t __size, __compar_d_fn_t __compar, void * __arg)
# 769 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 774 "/usr/include/stdlib.h" 3
extern int abs(int __x) throw() __attribute((const));
# 775 "/usr/include/stdlib.h" 3
extern long labs(long __x) throw() __attribute((const));
# 779 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) throw()
# 780 "/usr/include/stdlib.h" 3
 __attribute((const));
# 788 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) throw()
# 789 "/usr/include/stdlib.h" 3
 __attribute((const));
# 790 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) throw()
# 791 "/usr/include/stdlib.h" 3
 __attribute((const));
# 796 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) throw()
# 798 "/usr/include/stdlib.h" 3
 __attribute((const));
# 811 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 812 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 817 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 818 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 823 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) throw()
# 824 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 829 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 831 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 832 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) throw()
# 834 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 835 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) throw()
# 836 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 841 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 843 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 844 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 846 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 848 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 851 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 852 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, ::size_t __len) throw()
# 855 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 862 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, ::size_t __n) throw();
# 865 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, ::size_t __n) throw();
# 869 "/usr/include/stdlib.h" 3
extern int wctomb(char * __s, wchar_t __wchar) throw();
# 873 "/usr/include/stdlib.h" 3
extern ::size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, ::size_t __n) throw();
# 876 "/usr/include/stdlib.h" 3
extern ::size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, ::size_t __n) throw();
# 887 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) throw() __attribute((__nonnull__(1)));
# 898 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) throw()
# 901 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 907 "/usr/include/stdlib.h" 3
extern void setkey(const char * __key) throw() __attribute((__nonnull__(1)));
# 915 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag);
# 923 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) throw();
# 927 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) throw();
# 932 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) throw();
# 939 "/usr/include/stdlib.h" 3
extern int ptsname_r(int __fd, char * __buf, ::size_t __buflen) throw()
# 940 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 943 "/usr/include/stdlib.h" 3
extern int getpt();
# 950 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) throw()
# 951 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 967 "/usr/include/stdlib.h" 3
}
# 194 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 196 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef unsigned long size_t;
# 197 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef long ptrdiff_t;
# 200 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 202 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 216 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace std {
# 218 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 219 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 220 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
namespace __gnu_cxx {
# 222 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11" ))) { }
# 223 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++config.h" 3
}
# 68 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container> class __normal_iterator;
# 76 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 78 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 82 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __true_type { };
# 83 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __false_type { };
# 85 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< bool >
# 86 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __truth_type {
# 87 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 90 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 91 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 95 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 96 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __traitor {
# 98 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 99 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 100 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 103 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class , class >
# 104 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same {
# 106 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 107 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 108 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 113 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 114 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 115 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 118 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 119 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_void {
# 121 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 122 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 123 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 128 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 129 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 130 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 135 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 136 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_integer {
# 138 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 139 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 140 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 147 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 149 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 150 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 151 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 154 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 156 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 157 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 158 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 161 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 163 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 164 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 165 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 168 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 170 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 171 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 172 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 176 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 178 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 179 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 180 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 185 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char16_t> {
# 187 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 188 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 189 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 192 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char32_t> {
# 194 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 195 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 196 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 287 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 288 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_floating {
# 290 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 291 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 292 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 296 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 298 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 299 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 300 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 303 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 305 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 306 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 307 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 310 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 312 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 313 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 314 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 319 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 320 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 322 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 323 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 324 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 326 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 327 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 329 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 330 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 331 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 336 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 337 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator {
# 339 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 340 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 341 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 343 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator, class _Container>
# 344 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_normal_iterator< __gnu_cxx::__normal_iterator< _Iterator, _Container> > {
# 347 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 348 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 349 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 357 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 363 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 365 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 371 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_char {
# 373 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 374 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 375 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 378 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 380 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 381 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 382 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 386 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 388 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 389 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 390 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 393 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 394 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_byte {
# 396 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 397 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 398 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 401 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 403 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 404 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 405 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 408 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 410 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 411 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 412 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 417 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 418 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 419 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 424 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Tp>
# 425 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 427 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value};
# 428 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 429 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 432 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator> class move_iterator;
# 435 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
template< class _Iterator>
# 436 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
struct __is_move_iterator< move_iterator< _Iterator> > {
# 438 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 439 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 440 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/5/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/5/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool , class >
# 43 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if {
# 44 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 46 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 47 "/usr/include/c++/5/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 48 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Tp __type; };
# 52 "/usr/include/c++/5/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 53 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type {
# 54 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 56 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 57 "/usr/include/c++/5/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 58 "/usr/include/c++/5/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 62 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 63 "/usr/include/c++/5/ext/type_traits.h" 3
struct __add_unsigned {
# 66 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 69 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 70 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 73 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 74 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 77 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 78 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned char __type; };
# 81 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 82 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned short __type; };
# 85 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 86 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned __type; };
# 89 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 90 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long __type; };
# 93 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 94 "/usr/include/c++/5/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 98 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 101 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 105 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/ext/type_traits.h" 3
struct __remove_unsigned {
# 109 "/usr/include/c++/5/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 112 "/usr/include/c++/5/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 113 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 116 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 117 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 120 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 121 "/usr/include/c++/5/ext/type_traits.h" 3
typedef signed char __type; };
# 124 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 125 "/usr/include/c++/5/ext/type_traits.h" 3
typedef short __type; };
# 128 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 129 "/usr/include/c++/5/ext/type_traits.h" 3
typedef int __type; };
# 132 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 133 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long __type; };
# 136 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 137 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long long __type; };
# 141 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 144 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 148 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 150 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 151 "/usr/include/c++/5/ext/type_traits.h" 3
{ return __ptr == 0; }
# 153 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Type> inline bool
# 155 "/usr/include/c++/5/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 156 "/usr/include/c++/5/ext/type_traits.h" 3
{ return false; }
# 160 "/usr/include/c++/5/ext/type_traits.h" 3
inline bool __is_null_pointer(std::nullptr_t)
# 161 "/usr/include/c++/5/ext/type_traits.h" 3
{ return true; }
# 165 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, bool = std::__is_integer< _Tp> ::__value>
# 166 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote {
# 167 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 172 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp>
# 173 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 174 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 177 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 178 "/usr/include/c++/5/ext/type_traits.h" 3
typedef long double __type; };
# 181 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< double> {
# 182 "/usr/include/c++/5/ext/type_traits.h" 3
typedef double __type; };
# 185 "/usr/include/c++/5/ext/type_traits.h" 3
template<> struct __promote< float> {
# 186 "/usr/include/c++/5/ext/type_traits.h" 3
typedef float __type; };
# 188 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class
# 189 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 190 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type>
# 191 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_2 {
# 193 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(_Tp2() + _Up2()) __type;
# 194 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 196 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class
# 197 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 198 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 199 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type>
# 200 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_3 {
# 202 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__((_Tp2() + _Up2()) + _Vp2()) __type;
# 203 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 205 "/usr/include/c++/5/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp, class
# 206 "/usr/include/c++/5/ext/type_traits.h" 3
_Tp2 = typename __promote< _Tp> ::__type, class
# 207 "/usr/include/c++/5/ext/type_traits.h" 3
_Up2 = typename __promote< _Up> ::__type, class
# 208 "/usr/include/c++/5/ext/type_traits.h" 3
_Vp2 = typename __promote< _Vp> ::__type, class
# 209 "/usr/include/c++/5/ext/type_traits.h" 3
_Wp2 = typename __promote< _Wp> ::__type>
# 210 "/usr/include/c++/5/ext/type_traits.h" 3
struct __promote_4 {
# 212 "/usr/include/c++/5/ext/type_traits.h" 3
typedef __typeof__(((_Tp2() + _Up2()) + _Vp2()) + _Wp2()) __type;
# 213 "/usr/include/c++/5/ext/type_traits.h" 3
};
# 216 "/usr/include/c++/5/ext/type_traits.h" 3
}
# 75 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 81 "/usr/include/c++/5/cmath" 3
constexpr double abs(double __x)
# 82 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 87 "/usr/include/c++/5/cmath" 3
constexpr float abs(float __x)
# 88 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 91 "/usr/include/c++/5/cmath" 3
constexpr long double abs(long double __x)
# 92 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 95 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/5/cmath" 3
abs(_Tp __x)
# 100 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 102 "/usr/include/c++/5/cmath" 3
using ::acos;
# 106 "/usr/include/c++/5/cmath" 3
constexpr float acos(float __x)
# 107 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosf(__x); }
# 110 "/usr/include/c++/5/cmath" 3
constexpr long double acos(long double __x)
# 111 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosl(__x); }
# 114 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/5/cmath" 3
acos(_Tp __x)
# 119 "/usr/include/c++/5/cmath" 3
{ return __builtin_acos(__x); }
# 121 "/usr/include/c++/5/cmath" 3
using ::asin;
# 125 "/usr/include/c++/5/cmath" 3
constexpr float asin(float __x)
# 126 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinf(__x); }
# 129 "/usr/include/c++/5/cmath" 3
constexpr long double asin(long double __x)
# 130 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinl(__x); }
# 133 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/5/cmath" 3
asin(_Tp __x)
# 138 "/usr/include/c++/5/cmath" 3
{ return __builtin_asin(__x); }
# 140 "/usr/include/c++/5/cmath" 3
using ::atan;
# 144 "/usr/include/c++/5/cmath" 3
constexpr float atan(float __x)
# 145 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanf(__x); }
# 148 "/usr/include/c++/5/cmath" 3
constexpr long double atan(long double __x)
# 149 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanl(__x); }
# 152 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 156 "/usr/include/c++/5/cmath" 3
atan(_Tp __x)
# 157 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan(__x); }
# 159 "/usr/include/c++/5/cmath" 3
using ::atan2;
# 163 "/usr/include/c++/5/cmath" 3
constexpr float atan2(float __y, float __x)
# 164 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 167 "/usr/include/c++/5/cmath" 3
constexpr long double atan2(long double __y, long double __x)
# 168 "/usr/include/c++/5/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 171 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 174 "/usr/include/c++/5/cmath" 3
atan2(_Tp __y, _Up __x)
# 175 "/usr/include/c++/5/cmath" 3
{
# 176 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 177 "/usr/include/c++/5/cmath" 3
return atan2((__type)__y, (__type)__x);
# 178 "/usr/include/c++/5/cmath" 3
}
# 180 "/usr/include/c++/5/cmath" 3
using ::ceil;
# 184 "/usr/include/c++/5/cmath" 3
constexpr float ceil(float __x)
# 185 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceilf(__x); }
# 188 "/usr/include/c++/5/cmath" 3
constexpr long double ceil(long double __x)
# 189 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceill(__x); }
# 192 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/5/cmath" 3
ceil(_Tp __x)
# 197 "/usr/include/c++/5/cmath" 3
{ return __builtin_ceil(__x); }
# 199 "/usr/include/c++/5/cmath" 3
using ::cos;
# 203 "/usr/include/c++/5/cmath" 3
constexpr float cos(float __x)
# 204 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosf(__x); }
# 207 "/usr/include/c++/5/cmath" 3
constexpr long double cos(long double __x)
# 208 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosl(__x); }
# 211 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/5/cmath" 3
cos(_Tp __x)
# 216 "/usr/include/c++/5/cmath" 3
{ return __builtin_cos(__x); }
# 218 "/usr/include/c++/5/cmath" 3
using ::cosh;
# 222 "/usr/include/c++/5/cmath" 3
constexpr float cosh(float __x)
# 223 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshf(__x); }
# 226 "/usr/include/c++/5/cmath" 3
constexpr long double cosh(long double __x)
# 227 "/usr/include/c++/5/cmath" 3
{ return __builtin_coshl(__x); }
# 230 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/5/cmath" 3
cosh(_Tp __x)
# 235 "/usr/include/c++/5/cmath" 3
{ return __builtin_cosh(__x); }
# 237 "/usr/include/c++/5/cmath" 3
using ::exp;
# 241 "/usr/include/c++/5/cmath" 3
constexpr float exp(float __x)
# 242 "/usr/include/c++/5/cmath" 3
{ return __builtin_expf(__x); }
# 245 "/usr/include/c++/5/cmath" 3
constexpr long double exp(long double __x)
# 246 "/usr/include/c++/5/cmath" 3
{ return __builtin_expl(__x); }
# 249 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/5/cmath" 3
exp(_Tp __x)
# 254 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp(__x); }
# 256 "/usr/include/c++/5/cmath" 3
using ::fabs;
# 260 "/usr/include/c++/5/cmath" 3
constexpr float fabs(float __x)
# 261 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsf(__x); }
# 264 "/usr/include/c++/5/cmath" 3
constexpr long double fabs(long double __x)
# 265 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabsl(__x); }
# 268 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/5/cmath" 3
fabs(_Tp __x)
# 273 "/usr/include/c++/5/cmath" 3
{ return __builtin_fabs(__x); }
# 275 "/usr/include/c++/5/cmath" 3
using ::floor;
# 279 "/usr/include/c++/5/cmath" 3
constexpr float floor(float __x)
# 280 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorf(__x); }
# 283 "/usr/include/c++/5/cmath" 3
constexpr long double floor(long double __x)
# 284 "/usr/include/c++/5/cmath" 3
{ return __builtin_floorl(__x); }
# 287 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 291 "/usr/include/c++/5/cmath" 3
floor(_Tp __x)
# 292 "/usr/include/c++/5/cmath" 3
{ return __builtin_floor(__x); }
# 294 "/usr/include/c++/5/cmath" 3
using ::fmod;
# 298 "/usr/include/c++/5/cmath" 3
constexpr float fmod(float __x, float __y)
# 299 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 302 "/usr/include/c++/5/cmath" 3
constexpr long double fmod(long double __x, long double __y)
# 303 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 306 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 309 "/usr/include/c++/5/cmath" 3
fmod(_Tp __x, _Up __y)
# 310 "/usr/include/c++/5/cmath" 3
{
# 311 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 312 "/usr/include/c++/5/cmath" 3
return fmod((__type)__x, (__type)__y);
# 313 "/usr/include/c++/5/cmath" 3
}
# 315 "/usr/include/c++/5/cmath" 3
using ::frexp;
# 319 "/usr/include/c++/5/cmath" 3
inline float frexp(float __x, int *__exp)
# 320 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 323 "/usr/include/c++/5/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 324 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 327 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/5/cmath" 3
frexp(_Tp __x, int *__exp)
# 332 "/usr/include/c++/5/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 334 "/usr/include/c++/5/cmath" 3
using ::ldexp;
# 338 "/usr/include/c++/5/cmath" 3
constexpr float ldexp(float __x, int __exp)
# 339 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 342 "/usr/include/c++/5/cmath" 3
constexpr long double ldexp(long double __x, int __exp)
# 343 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 346 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/5/cmath" 3
ldexp(_Tp __x, int __exp)
# 351 "/usr/include/c++/5/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 353 "/usr/include/c++/5/cmath" 3
using ::log;
# 357 "/usr/include/c++/5/cmath" 3
constexpr float log(float __x)
# 358 "/usr/include/c++/5/cmath" 3
{ return __builtin_logf(__x); }
# 361 "/usr/include/c++/5/cmath" 3
constexpr long double log(long double __x)
# 362 "/usr/include/c++/5/cmath" 3
{ return __builtin_logl(__x); }
# 365 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/5/cmath" 3
log(_Tp __x)
# 370 "/usr/include/c++/5/cmath" 3
{ return __builtin_log(__x); }
# 372 "/usr/include/c++/5/cmath" 3
using ::log10;
# 376 "/usr/include/c++/5/cmath" 3
constexpr float log10(float __x)
# 377 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10f(__x); }
# 380 "/usr/include/c++/5/cmath" 3
constexpr long double log10(long double __x)
# 381 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10l(__x); }
# 384 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 388 "/usr/include/c++/5/cmath" 3
log10(_Tp __x)
# 389 "/usr/include/c++/5/cmath" 3
{ return __builtin_log10(__x); }
# 391 "/usr/include/c++/5/cmath" 3
using ::modf;
# 395 "/usr/include/c++/5/cmath" 3
inline float modf(float __x, float *__iptr)
# 396 "/usr/include/c++/5/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 399 "/usr/include/c++/5/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 400 "/usr/include/c++/5/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 403 "/usr/include/c++/5/cmath" 3
using ::pow;
# 407 "/usr/include/c++/5/cmath" 3
constexpr float pow(float __x, float __y)
# 408 "/usr/include/c++/5/cmath" 3
{ return __builtin_powf(__x, __y); }
# 411 "/usr/include/c++/5/cmath" 3
constexpr long double pow(long double __x, long double __y)
# 412 "/usr/include/c++/5/cmath" 3
{ return __builtin_powl(__x, __y); }
# 431 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 434 "/usr/include/c++/5/cmath" 3
pow(_Tp __x, _Up __y)
# 435 "/usr/include/c++/5/cmath" 3
{
# 436 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 437 "/usr/include/c++/5/cmath" 3
return pow((__type)__x, (__type)__y);
# 438 "/usr/include/c++/5/cmath" 3
}
# 440 "/usr/include/c++/5/cmath" 3
using ::sin;
# 444 "/usr/include/c++/5/cmath" 3
constexpr float sin(float __x)
# 445 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinf(__x); }
# 448 "/usr/include/c++/5/cmath" 3
constexpr long double sin(long double __x)
# 449 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinl(__x); }
# 452 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/5/cmath" 3
sin(_Tp __x)
# 457 "/usr/include/c++/5/cmath" 3
{ return __builtin_sin(__x); }
# 459 "/usr/include/c++/5/cmath" 3
using ::sinh;
# 463 "/usr/include/c++/5/cmath" 3
constexpr float sinh(float __x)
# 464 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhf(__x); }
# 467 "/usr/include/c++/5/cmath" 3
constexpr long double sinh(long double __x)
# 468 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinhl(__x); }
# 471 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/5/cmath" 3
sinh(_Tp __x)
# 476 "/usr/include/c++/5/cmath" 3
{ return __builtin_sinh(__x); }
# 478 "/usr/include/c++/5/cmath" 3
using ::sqrt;
# 482 "/usr/include/c++/5/cmath" 3
constexpr float sqrt(float __x)
# 483 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtf(__x); }
# 486 "/usr/include/c++/5/cmath" 3
constexpr long double sqrt(long double __x)
# 487 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrtl(__x); }
# 490 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/5/cmath" 3
sqrt(_Tp __x)
# 495 "/usr/include/c++/5/cmath" 3
{ return __builtin_sqrt(__x); }
# 497 "/usr/include/c++/5/cmath" 3
using ::tan;
# 501 "/usr/include/c++/5/cmath" 3
constexpr float tan(float __x)
# 502 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanf(__x); }
# 505 "/usr/include/c++/5/cmath" 3
constexpr long double tan(long double __x)
# 506 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanl(__x); }
# 509 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/5/cmath" 3
tan(_Tp __x)
# 514 "/usr/include/c++/5/cmath" 3
{ return __builtin_tan(__x); }
# 516 "/usr/include/c++/5/cmath" 3
using ::tanh;
# 520 "/usr/include/c++/5/cmath" 3
constexpr float tanh(float __x)
# 521 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhf(__x); }
# 524 "/usr/include/c++/5/cmath" 3
constexpr long double tanh(long double __x)
# 525 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanhl(__x); }
# 528 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 532 "/usr/include/c++/5/cmath" 3
tanh(_Tp __x)
# 533 "/usr/include/c++/5/cmath" 3
{ return __builtin_tanh(__x); }
# 536 "/usr/include/c++/5/cmath" 3
}
# 555 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 563 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(float __x)
# 564 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 565 "/usr/include/c++/5/cmath" 3
}
# 568 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(double __x)
# 569 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 570 "/usr/include/c++/5/cmath" 3
}
# 573 "/usr/include/c++/5/cmath" 3
constexpr int fpclassify(long double __x)
# 574 "/usr/include/c++/5/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 575 "/usr/include/c++/5/cmath" 3
}
# 578 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 581 "/usr/include/c++/5/cmath" 3
fpclassify(_Tp __x)
# 582 "/usr/include/c++/5/cmath" 3
{ return (__x != 0) ? 4 : 2; }
# 586 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(float __x)
# 587 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 590 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(double __x)
# 591 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 594 "/usr/include/c++/5/cmath" 3
constexpr bool isfinite(long double __x)
# 595 "/usr/include/c++/5/cmath" 3
{ return __builtin_isfinite(__x); }
# 598 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 601 "/usr/include/c++/5/cmath" 3
isfinite(_Tp __x)
# 602 "/usr/include/c++/5/cmath" 3
{ return true; }
# 606 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(float __x)
# 607 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 610 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(double __x)
# 611 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 614 "/usr/include/c++/5/cmath" 3
constexpr bool isinf(long double __x)
# 615 "/usr/include/c++/5/cmath" 3
{ return __builtin_isinf(__x); }
# 618 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 621 "/usr/include/c++/5/cmath" 3
isinf(_Tp __x)
# 622 "/usr/include/c++/5/cmath" 3
{ return false; }
# 626 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(float __x)
# 627 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 630 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(double __x)
# 631 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 634 "/usr/include/c++/5/cmath" 3
constexpr bool isnan(long double __x)
# 635 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnan(__x); }
# 638 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 641 "/usr/include/c++/5/cmath" 3
isnan(_Tp __x)
# 642 "/usr/include/c++/5/cmath" 3
{ return false; }
# 646 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(float __x)
# 647 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 650 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(double __x)
# 651 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 654 "/usr/include/c++/5/cmath" 3
constexpr bool isnormal(long double __x)
# 655 "/usr/include/c++/5/cmath" 3
{ return __builtin_isnormal(__x); }
# 658 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 661 "/usr/include/c++/5/cmath" 3
isnormal(_Tp __x)
# 662 "/usr/include/c++/5/cmath" 3
{ return (__x != 0) ? true : false; }
# 667 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(float __x)
# 668 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbitf(__x); }
# 671 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(double __x)
# 672 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbit(__x); }
# 675 "/usr/include/c++/5/cmath" 3
constexpr bool signbit(long double __x)
# 676 "/usr/include/c++/5/cmath" 3
{ return __builtin_signbitl(__x); }
# 679 "/usr/include/c++/5/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 682 "/usr/include/c++/5/cmath" 3
signbit(_Tp __x)
# 683 "/usr/include/c++/5/cmath" 3
{ return (__x < 0) ? true : false; }
# 687 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(float __x, float __y)
# 688 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 691 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(double __x, double __y)
# 692 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 695 "/usr/include/c++/5/cmath" 3
constexpr bool isgreater(long double __x, long double __y)
# 696 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 699 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 703 "/usr/include/c++/5/cmath" 3
isgreater(_Tp __x, _Up __y)
# 704 "/usr/include/c++/5/cmath" 3
{
# 705 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 706 "/usr/include/c++/5/cmath" 3
return __builtin_isgreater((__type)__x, (__type)__y);
# 707 "/usr/include/c++/5/cmath" 3
}
# 711 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(float __x, float __y)
# 712 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 715 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(double __x, double __y)
# 716 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 719 "/usr/include/c++/5/cmath" 3
constexpr bool isgreaterequal(long double __x, long double __y)
# 720 "/usr/include/c++/5/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 723 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 727 "/usr/include/c++/5/cmath" 3
isgreaterequal(_Tp __x, _Up __y)
# 728 "/usr/include/c++/5/cmath" 3
{
# 729 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 730 "/usr/include/c++/5/cmath" 3
return __builtin_isgreaterequal((__type)__x, (__type)__y);
# 731 "/usr/include/c++/5/cmath" 3
}
# 735 "/usr/include/c++/5/cmath" 3
constexpr bool isless(float __x, float __y)
# 736 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 739 "/usr/include/c++/5/cmath" 3
constexpr bool isless(double __x, double __y)
# 740 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 743 "/usr/include/c++/5/cmath" 3
constexpr bool isless(long double __x, long double __y)
# 744 "/usr/include/c++/5/cmath" 3
{ return __builtin_isless(__x, __y); }
# 747 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 751 "/usr/include/c++/5/cmath" 3
isless(_Tp __x, _Up __y)
# 752 "/usr/include/c++/5/cmath" 3
{
# 753 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 754 "/usr/include/c++/5/cmath" 3
return __builtin_isless((__type)__x, (__type)__y);
# 755 "/usr/include/c++/5/cmath" 3
}
# 759 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(float __x, float __y)
# 760 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 763 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(double __x, double __y)
# 764 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 767 "/usr/include/c++/5/cmath" 3
constexpr bool islessequal(long double __x, long double __y)
# 768 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 771 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 775 "/usr/include/c++/5/cmath" 3
islessequal(_Tp __x, _Up __y)
# 776 "/usr/include/c++/5/cmath" 3
{
# 777 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 778 "/usr/include/c++/5/cmath" 3
return __builtin_islessequal((__type)__x, (__type)__y);
# 779 "/usr/include/c++/5/cmath" 3
}
# 783 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(float __x, float __y)
# 784 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 787 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(double __x, double __y)
# 788 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 791 "/usr/include/c++/5/cmath" 3
constexpr bool islessgreater(long double __x, long double __y)
# 792 "/usr/include/c++/5/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 795 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 799 "/usr/include/c++/5/cmath" 3
islessgreater(_Tp __x, _Up __y)
# 800 "/usr/include/c++/5/cmath" 3
{
# 801 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 802 "/usr/include/c++/5/cmath" 3
return __builtin_islessgreater((__type)__x, (__type)__y);
# 803 "/usr/include/c++/5/cmath" 3
}
# 807 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(float __x, float __y)
# 808 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 811 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(double __x, double __y)
# 812 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 815 "/usr/include/c++/5/cmath" 3
constexpr bool isunordered(long double __x, long double __y)
# 816 "/usr/include/c++/5/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 819 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 823 "/usr/include/c++/5/cmath" 3
isunordered(_Tp __x, _Up __y)
# 824 "/usr/include/c++/5/cmath" 3
{
# 825 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 826 "/usr/include/c++/5/cmath" 3
return __builtin_isunordered((__type)__x, (__type)__y);
# 827 "/usr/include/c++/5/cmath" 3
}
# 947 "/usr/include/c++/5/cmath" 3
}
# 1062 "/usr/include/c++/5/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 1067 "/usr/include/c++/5/cmath" 3
using ::double_t;
# 1068 "/usr/include/c++/5/cmath" 3
using ::float_t;
# 1071 "/usr/include/c++/5/cmath" 3
using ::acosh;
# 1072 "/usr/include/c++/5/cmath" 3
using ::acoshf;
# 1073 "/usr/include/c++/5/cmath" 3
using ::acoshl;
# 1075 "/usr/include/c++/5/cmath" 3
using ::asinh;
# 1076 "/usr/include/c++/5/cmath" 3
using ::asinhf;
# 1077 "/usr/include/c++/5/cmath" 3
using ::asinhl;
# 1079 "/usr/include/c++/5/cmath" 3
using ::atanh;
# 1080 "/usr/include/c++/5/cmath" 3
using ::atanhf;
# 1081 "/usr/include/c++/5/cmath" 3
using ::atanhl;
# 1083 "/usr/include/c++/5/cmath" 3
using ::cbrt;
# 1084 "/usr/include/c++/5/cmath" 3
using ::cbrtf;
# 1085 "/usr/include/c++/5/cmath" 3
using ::cbrtl;
# 1087 "/usr/include/c++/5/cmath" 3
using ::copysign;
# 1088 "/usr/include/c++/5/cmath" 3
using ::copysignf;
# 1089 "/usr/include/c++/5/cmath" 3
using ::copysignl;
# 1091 "/usr/include/c++/5/cmath" 3
using ::erf;
# 1092 "/usr/include/c++/5/cmath" 3
using ::erff;
# 1093 "/usr/include/c++/5/cmath" 3
using ::erfl;
# 1095 "/usr/include/c++/5/cmath" 3
using ::erfc;
# 1096 "/usr/include/c++/5/cmath" 3
using ::erfcf;
# 1097 "/usr/include/c++/5/cmath" 3
using ::erfcl;
# 1099 "/usr/include/c++/5/cmath" 3
using ::exp2;
# 1100 "/usr/include/c++/5/cmath" 3
using ::exp2f;
# 1101 "/usr/include/c++/5/cmath" 3
using ::exp2l;
# 1103 "/usr/include/c++/5/cmath" 3
using ::expm1;
# 1104 "/usr/include/c++/5/cmath" 3
using ::expm1f;
# 1105 "/usr/include/c++/5/cmath" 3
using ::expm1l;
# 1107 "/usr/include/c++/5/cmath" 3
using ::fdim;
# 1108 "/usr/include/c++/5/cmath" 3
using ::fdimf;
# 1109 "/usr/include/c++/5/cmath" 3
using ::fdiml;
# 1111 "/usr/include/c++/5/cmath" 3
using ::fma;
# 1112 "/usr/include/c++/5/cmath" 3
using ::fmaf;
# 1113 "/usr/include/c++/5/cmath" 3
using ::fmal;
# 1115 "/usr/include/c++/5/cmath" 3
using ::fmax;
# 1116 "/usr/include/c++/5/cmath" 3
using ::fmaxf;
# 1117 "/usr/include/c++/5/cmath" 3
using ::fmaxl;
# 1119 "/usr/include/c++/5/cmath" 3
using ::fmin;
# 1120 "/usr/include/c++/5/cmath" 3
using ::fminf;
# 1121 "/usr/include/c++/5/cmath" 3
using ::fminl;
# 1123 "/usr/include/c++/5/cmath" 3
using ::hypot;
# 1124 "/usr/include/c++/5/cmath" 3
using ::hypotf;
# 1125 "/usr/include/c++/5/cmath" 3
using ::hypotl;
# 1127 "/usr/include/c++/5/cmath" 3
using ::ilogb;
# 1128 "/usr/include/c++/5/cmath" 3
using ::ilogbf;
# 1129 "/usr/include/c++/5/cmath" 3
using ::ilogbl;
# 1131 "/usr/include/c++/5/cmath" 3
using ::lgamma;
# 1132 "/usr/include/c++/5/cmath" 3
using ::lgammaf;
# 1133 "/usr/include/c++/5/cmath" 3
using ::lgammal;
# 1135 "/usr/include/c++/5/cmath" 3
using ::llrint;
# 1136 "/usr/include/c++/5/cmath" 3
using ::llrintf;
# 1137 "/usr/include/c++/5/cmath" 3
using ::llrintl;
# 1139 "/usr/include/c++/5/cmath" 3
using ::llround;
# 1140 "/usr/include/c++/5/cmath" 3
using ::llroundf;
# 1141 "/usr/include/c++/5/cmath" 3
using ::llroundl;
# 1143 "/usr/include/c++/5/cmath" 3
using ::log1p;
# 1144 "/usr/include/c++/5/cmath" 3
using ::log1pf;
# 1145 "/usr/include/c++/5/cmath" 3
using ::log1pl;
# 1147 "/usr/include/c++/5/cmath" 3
using ::log2;
# 1148 "/usr/include/c++/5/cmath" 3
using ::log2f;
# 1149 "/usr/include/c++/5/cmath" 3
using ::log2l;
# 1151 "/usr/include/c++/5/cmath" 3
using ::logb;
# 1152 "/usr/include/c++/5/cmath" 3
using ::logbf;
# 1153 "/usr/include/c++/5/cmath" 3
using ::logbl;
# 1155 "/usr/include/c++/5/cmath" 3
using ::lrint;
# 1156 "/usr/include/c++/5/cmath" 3
using ::lrintf;
# 1157 "/usr/include/c++/5/cmath" 3
using ::lrintl;
# 1159 "/usr/include/c++/5/cmath" 3
using ::lround;
# 1160 "/usr/include/c++/5/cmath" 3
using ::lroundf;
# 1161 "/usr/include/c++/5/cmath" 3
using ::lroundl;
# 1163 "/usr/include/c++/5/cmath" 3
using ::nan;
# 1164 "/usr/include/c++/5/cmath" 3
using ::nanf;
# 1165 "/usr/include/c++/5/cmath" 3
using ::nanl;
# 1167 "/usr/include/c++/5/cmath" 3
using ::nearbyint;
# 1168 "/usr/include/c++/5/cmath" 3
using ::nearbyintf;
# 1169 "/usr/include/c++/5/cmath" 3
using ::nearbyintl;
# 1171 "/usr/include/c++/5/cmath" 3
using ::nextafter;
# 1172 "/usr/include/c++/5/cmath" 3
using ::nextafterf;
# 1173 "/usr/include/c++/5/cmath" 3
using ::nextafterl;
# 1175 "/usr/include/c++/5/cmath" 3
using ::nexttoward;
# 1176 "/usr/include/c++/5/cmath" 3
using ::nexttowardf;
# 1177 "/usr/include/c++/5/cmath" 3
using ::nexttowardl;
# 1179 "/usr/include/c++/5/cmath" 3
using ::remainder;
# 1180 "/usr/include/c++/5/cmath" 3
using ::remainderf;
# 1181 "/usr/include/c++/5/cmath" 3
using ::remainderl;
# 1183 "/usr/include/c++/5/cmath" 3
using ::remquo;
# 1184 "/usr/include/c++/5/cmath" 3
using ::remquof;
# 1185 "/usr/include/c++/5/cmath" 3
using ::remquol;
# 1187 "/usr/include/c++/5/cmath" 3
using ::rint;
# 1188 "/usr/include/c++/5/cmath" 3
using ::rintf;
# 1189 "/usr/include/c++/5/cmath" 3
using ::rintl;
# 1191 "/usr/include/c++/5/cmath" 3
using ::round;
# 1192 "/usr/include/c++/5/cmath" 3
using ::roundf;
# 1193 "/usr/include/c++/5/cmath" 3
using ::roundl;
# 1195 "/usr/include/c++/5/cmath" 3
using ::scalbln;
# 1196 "/usr/include/c++/5/cmath" 3
using ::scalblnf;
# 1197 "/usr/include/c++/5/cmath" 3
using ::scalblnl;
# 1199 "/usr/include/c++/5/cmath" 3
using ::scalbn;
# 1200 "/usr/include/c++/5/cmath" 3
using ::scalbnf;
# 1201 "/usr/include/c++/5/cmath" 3
using ::scalbnl;
# 1203 "/usr/include/c++/5/cmath" 3
using ::tgamma;
# 1204 "/usr/include/c++/5/cmath" 3
using ::tgammaf;
# 1205 "/usr/include/c++/5/cmath" 3
using ::tgammal;
# 1207 "/usr/include/c++/5/cmath" 3
using ::trunc;
# 1208 "/usr/include/c++/5/cmath" 3
using ::truncf;
# 1209 "/usr/include/c++/5/cmath" 3
using ::truncl;
# 1214 "/usr/include/c++/5/cmath" 3
constexpr float acosh(float __x)
# 1215 "/usr/include/c++/5/cmath" 3
{ return __builtin_acoshf(__x); }
# 1218 "/usr/include/c++/5/cmath" 3
constexpr long double acosh(long double __x)
# 1219 "/usr/include/c++/5/cmath" 3
{ return __builtin_acoshl(__x); }
# 1222 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1225 "/usr/include/c++/5/cmath" 3
acosh(_Tp __x)
# 1226 "/usr/include/c++/5/cmath" 3
{ return __builtin_acosh(__x); }
# 1230 "/usr/include/c++/5/cmath" 3
constexpr float asinh(float __x)
# 1231 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinhf(__x); }
# 1234 "/usr/include/c++/5/cmath" 3
constexpr long double asinh(long double __x)
# 1235 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinhl(__x); }
# 1238 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1241 "/usr/include/c++/5/cmath" 3
asinh(_Tp __x)
# 1242 "/usr/include/c++/5/cmath" 3
{ return __builtin_asinh(__x); }
# 1246 "/usr/include/c++/5/cmath" 3
constexpr float atanh(float __x)
# 1247 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanhf(__x); }
# 1250 "/usr/include/c++/5/cmath" 3
constexpr long double atanh(long double __x)
# 1251 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanhl(__x); }
# 1254 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1257 "/usr/include/c++/5/cmath" 3
atanh(_Tp __x)
# 1258 "/usr/include/c++/5/cmath" 3
{ return __builtin_atanh(__x); }
# 1262 "/usr/include/c++/5/cmath" 3
constexpr float cbrt(float __x)
# 1263 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrtf(__x); }
# 1266 "/usr/include/c++/5/cmath" 3
constexpr long double cbrt(long double __x)
# 1267 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrtl(__x); }
# 1270 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1273 "/usr/include/c++/5/cmath" 3
cbrt(_Tp __x)
# 1274 "/usr/include/c++/5/cmath" 3
{ return __builtin_cbrt(__x); }
# 1278 "/usr/include/c++/5/cmath" 3
constexpr float copysign(float __x, float __y)
# 1279 "/usr/include/c++/5/cmath" 3
{ return __builtin_copysignf(__x, __y); }
# 1282 "/usr/include/c++/5/cmath" 3
constexpr long double copysign(long double __x, long double __y)
# 1283 "/usr/include/c++/5/cmath" 3
{ return __builtin_copysignl(__x, __y); }
# 1286 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1288 "/usr/include/c++/5/cmath" 3
copysign(_Tp __x, _Up __y)
# 1289 "/usr/include/c++/5/cmath" 3
{
# 1290 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1291 "/usr/include/c++/5/cmath" 3
return copysign((__type)__x, (__type)__y);
# 1292 "/usr/include/c++/5/cmath" 3
}
# 1296 "/usr/include/c++/5/cmath" 3
constexpr float erf(float __x)
# 1297 "/usr/include/c++/5/cmath" 3
{ return __builtin_erff(__x); }
# 1300 "/usr/include/c++/5/cmath" 3
constexpr long double erf(long double __x)
# 1301 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfl(__x); }
# 1304 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1307 "/usr/include/c++/5/cmath" 3
erf(_Tp __x)
# 1308 "/usr/include/c++/5/cmath" 3
{ return __builtin_erf(__x); }
# 1312 "/usr/include/c++/5/cmath" 3
constexpr float erfc(float __x)
# 1313 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfcf(__x); }
# 1316 "/usr/include/c++/5/cmath" 3
constexpr long double erfc(long double __x)
# 1317 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfcl(__x); }
# 1320 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1323 "/usr/include/c++/5/cmath" 3
erfc(_Tp __x)
# 1324 "/usr/include/c++/5/cmath" 3
{ return __builtin_erfc(__x); }
# 1328 "/usr/include/c++/5/cmath" 3
constexpr float exp2(float __x)
# 1329 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2f(__x); }
# 1332 "/usr/include/c++/5/cmath" 3
constexpr long double exp2(long double __x)
# 1333 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2l(__x); }
# 1336 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1339 "/usr/include/c++/5/cmath" 3
exp2(_Tp __x)
# 1340 "/usr/include/c++/5/cmath" 3
{ return __builtin_exp2(__x); }
# 1344 "/usr/include/c++/5/cmath" 3
constexpr float expm1(float __x)
# 1345 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1f(__x); }
# 1348 "/usr/include/c++/5/cmath" 3
constexpr long double expm1(long double __x)
# 1349 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1l(__x); }
# 1352 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1355 "/usr/include/c++/5/cmath" 3
expm1(_Tp __x)
# 1356 "/usr/include/c++/5/cmath" 3
{ return __builtin_expm1(__x); }
# 1360 "/usr/include/c++/5/cmath" 3
constexpr float fdim(float __x, float __y)
# 1361 "/usr/include/c++/5/cmath" 3
{ return __builtin_fdimf(__x, __y); }
# 1364 "/usr/include/c++/5/cmath" 3
constexpr long double fdim(long double __x, long double __y)
# 1365 "/usr/include/c++/5/cmath" 3
{ return __builtin_fdiml(__x, __y); }
# 1368 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1370 "/usr/include/c++/5/cmath" 3
fdim(_Tp __x, _Up __y)
# 1371 "/usr/include/c++/5/cmath" 3
{
# 1372 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1373 "/usr/include/c++/5/cmath" 3
return fdim((__type)__x, (__type)__y);
# 1374 "/usr/include/c++/5/cmath" 3
}
# 1378 "/usr/include/c++/5/cmath" 3
constexpr float fma(float __x, float __y, float __z)
# 1379 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaf(__x, __y, __z); }
# 1382 "/usr/include/c++/5/cmath" 3
constexpr long double fma(long double __x, long double __y, long double __z)
# 1383 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmal(__x, __y, __z); }
# 1386 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up, class _Vp> constexpr typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type
# 1388 "/usr/include/c++/5/cmath" 3
fma(_Tp __x, _Up __y, _Vp __z)
# 1389 "/usr/include/c++/5/cmath" 3
{
# 1390 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type __type;
# 1391 "/usr/include/c++/5/cmath" 3
return fma((__type)__x, (__type)__y, (__type)__z);
# 1392 "/usr/include/c++/5/cmath" 3
}
# 1396 "/usr/include/c++/5/cmath" 3
constexpr float fmax(float __x, float __y)
# 1397 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaxf(__x, __y); }
# 1400 "/usr/include/c++/5/cmath" 3
constexpr long double fmax(long double __x, long double __y)
# 1401 "/usr/include/c++/5/cmath" 3
{ return __builtin_fmaxl(__x, __y); }
# 1404 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1406 "/usr/include/c++/5/cmath" 3
fmax(_Tp __x, _Up __y)
# 1407 "/usr/include/c++/5/cmath" 3
{
# 1408 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1409 "/usr/include/c++/5/cmath" 3
return fmax((__type)__x, (__type)__y);
# 1410 "/usr/include/c++/5/cmath" 3
}
# 1414 "/usr/include/c++/5/cmath" 3
constexpr float fmin(float __x, float __y)
# 1415 "/usr/include/c++/5/cmath" 3
{ return __builtin_fminf(__x, __y); }
# 1418 "/usr/include/c++/5/cmath" 3
constexpr long double fmin(long double __x, long double __y)
# 1419 "/usr/include/c++/5/cmath" 3
{ return __builtin_fminl(__x, __y); }
# 1422 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1424 "/usr/include/c++/5/cmath" 3
fmin(_Tp __x, _Up __y)
# 1425 "/usr/include/c++/5/cmath" 3
{
# 1426 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1427 "/usr/include/c++/5/cmath" 3
return fmin((__type)__x, (__type)__y);
# 1428 "/usr/include/c++/5/cmath" 3
}
# 1432 "/usr/include/c++/5/cmath" 3
constexpr float hypot(float __x, float __y)
# 1433 "/usr/include/c++/5/cmath" 3
{ return __builtin_hypotf(__x, __y); }
# 1436 "/usr/include/c++/5/cmath" 3
constexpr long double hypot(long double __x, long double __y)
# 1437 "/usr/include/c++/5/cmath" 3
{ return __builtin_hypotl(__x, __y); }
# 1440 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1442 "/usr/include/c++/5/cmath" 3
hypot(_Tp __x, _Up __y)
# 1443 "/usr/include/c++/5/cmath" 3
{
# 1444 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1445 "/usr/include/c++/5/cmath" 3
return hypot((__type)__x, (__type)__y);
# 1446 "/usr/include/c++/5/cmath" 3
}
# 1450 "/usr/include/c++/5/cmath" 3
constexpr int ilogb(float __x)
# 1451 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogbf(__x); }
# 1454 "/usr/include/c++/5/cmath" 3
constexpr int ilogb(long double __x)
# 1455 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogbl(__x); }
# 1458 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 1462 "/usr/include/c++/5/cmath" 3
ilogb(_Tp __x)
# 1463 "/usr/include/c++/5/cmath" 3
{ return __builtin_ilogb(__x); }
# 1467 "/usr/include/c++/5/cmath" 3
constexpr float lgamma(float __x)
# 1468 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgammaf(__x); }
# 1471 "/usr/include/c++/5/cmath" 3
constexpr long double lgamma(long double __x)
# 1472 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgammal(__x); }
# 1475 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1478 "/usr/include/c++/5/cmath" 3
lgamma(_Tp __x)
# 1479 "/usr/include/c++/5/cmath" 3
{ return __builtin_lgamma(__x); }
# 1483 "/usr/include/c++/5/cmath" 3
constexpr long long llrint(float __x)
# 1484 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrintf(__x); }
# 1487 "/usr/include/c++/5/cmath" 3
constexpr long long llrint(long double __x)
# 1488 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrintl(__x); }
# 1491 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1494 "/usr/include/c++/5/cmath" 3
llrint(_Tp __x)
# 1495 "/usr/include/c++/5/cmath" 3
{ return __builtin_llrint(__x); }
# 1499 "/usr/include/c++/5/cmath" 3
constexpr long long llround(float __x)
# 1500 "/usr/include/c++/5/cmath" 3
{ return __builtin_llroundf(__x); }
# 1503 "/usr/include/c++/5/cmath" 3
constexpr long long llround(long double __x)
# 1504 "/usr/include/c++/5/cmath" 3
{ return __builtin_llroundl(__x); }
# 1507 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1510 "/usr/include/c++/5/cmath" 3
llround(_Tp __x)
# 1511 "/usr/include/c++/5/cmath" 3
{ return __builtin_llround(__x); }
# 1515 "/usr/include/c++/5/cmath" 3
constexpr float log1p(float __x)
# 1516 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1pf(__x); }
# 1519 "/usr/include/c++/5/cmath" 3
constexpr long double log1p(long double __x)
# 1520 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1pl(__x); }
# 1523 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1526 "/usr/include/c++/5/cmath" 3
log1p(_Tp __x)
# 1527 "/usr/include/c++/5/cmath" 3
{ return __builtin_log1p(__x); }
# 1532 "/usr/include/c++/5/cmath" 3
constexpr float log2(float __x)
# 1533 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2f(__x); }
# 1536 "/usr/include/c++/5/cmath" 3
constexpr long double log2(long double __x)
# 1537 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2l(__x); }
# 1540 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1543 "/usr/include/c++/5/cmath" 3
log2(_Tp __x)
# 1544 "/usr/include/c++/5/cmath" 3
{ return __builtin_log2(__x); }
# 1548 "/usr/include/c++/5/cmath" 3
constexpr float logb(float __x)
# 1549 "/usr/include/c++/5/cmath" 3
{ return __builtin_logbf(__x); }
# 1552 "/usr/include/c++/5/cmath" 3
constexpr long double logb(long double __x)
# 1553 "/usr/include/c++/5/cmath" 3
{ return __builtin_logbl(__x); }
# 1556 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1559 "/usr/include/c++/5/cmath" 3
logb(_Tp __x)
# 1560 "/usr/include/c++/5/cmath" 3
{ return __builtin_logb(__x); }
# 1564 "/usr/include/c++/5/cmath" 3
constexpr long lrint(float __x)
# 1565 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrintf(__x); }
# 1568 "/usr/include/c++/5/cmath" 3
constexpr long lrint(long double __x)
# 1569 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrintl(__x); }
# 1572 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1575 "/usr/include/c++/5/cmath" 3
lrint(_Tp __x)
# 1576 "/usr/include/c++/5/cmath" 3
{ return __builtin_lrint(__x); }
# 1580 "/usr/include/c++/5/cmath" 3
constexpr long lround(float __x)
# 1581 "/usr/include/c++/5/cmath" 3
{ return __builtin_lroundf(__x); }
# 1584 "/usr/include/c++/5/cmath" 3
constexpr long lround(long double __x)
# 1585 "/usr/include/c++/5/cmath" 3
{ return __builtin_lroundl(__x); }
# 1588 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1591 "/usr/include/c++/5/cmath" 3
lround(_Tp __x)
# 1592 "/usr/include/c++/5/cmath" 3
{ return __builtin_lround(__x); }
# 1596 "/usr/include/c++/5/cmath" 3
constexpr float nearbyint(float __x)
# 1597 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyintf(__x); }
# 1600 "/usr/include/c++/5/cmath" 3
constexpr long double nearbyint(long double __x)
# 1601 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyintl(__x); }
# 1604 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1607 "/usr/include/c++/5/cmath" 3
nearbyint(_Tp __x)
# 1608 "/usr/include/c++/5/cmath" 3
{ return __builtin_nearbyint(__x); }
# 1612 "/usr/include/c++/5/cmath" 3
constexpr float nextafter(float __x, float __y)
# 1613 "/usr/include/c++/5/cmath" 3
{ return __builtin_nextafterf(__x, __y); }
# 1616 "/usr/include/c++/5/cmath" 3
constexpr long double nextafter(long double __x, long double __y)
# 1617 "/usr/include/c++/5/cmath" 3
{ return __builtin_nextafterl(__x, __y); }
# 1620 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1622 "/usr/include/c++/5/cmath" 3
nextafter(_Tp __x, _Up __y)
# 1623 "/usr/include/c++/5/cmath" 3
{
# 1624 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1625 "/usr/include/c++/5/cmath" 3
return nextafter((__type)__x, (__type)__y);
# 1626 "/usr/include/c++/5/cmath" 3
}
# 1630 "/usr/include/c++/5/cmath" 3
constexpr float nexttoward(float __x, long double __y)
# 1631 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttowardf(__x, __y); }
# 1634 "/usr/include/c++/5/cmath" 3
constexpr long double nexttoward(long double __x, long double __y)
# 1635 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttowardl(__x, __y); }
# 1638 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1641 "/usr/include/c++/5/cmath" 3
nexttoward(_Tp __x, long double __y)
# 1642 "/usr/include/c++/5/cmath" 3
{ return __builtin_nexttoward(__x, __y); }
# 1646 "/usr/include/c++/5/cmath" 3
constexpr float remainder(float __x, float __y)
# 1647 "/usr/include/c++/5/cmath" 3
{ return __builtin_remainderf(__x, __y); }
# 1650 "/usr/include/c++/5/cmath" 3
constexpr long double remainder(long double __x, long double __y)
# 1651 "/usr/include/c++/5/cmath" 3
{ return __builtin_remainderl(__x, __y); }
# 1654 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1656 "/usr/include/c++/5/cmath" 3
remainder(_Tp __x, _Up __y)
# 1657 "/usr/include/c++/5/cmath" 3
{
# 1658 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1659 "/usr/include/c++/5/cmath" 3
return remainder((__type)__x, (__type)__y);
# 1660 "/usr/include/c++/5/cmath" 3
}
# 1664 "/usr/include/c++/5/cmath" 3
inline float remquo(float __x, float __y, int *__pquo)
# 1665 "/usr/include/c++/5/cmath" 3
{ return __builtin_remquof(__x, __y, __pquo); }
# 1668 "/usr/include/c++/5/cmath" 3
inline long double remquo(long double __x, long double __y, int *__pquo)
# 1669 "/usr/include/c++/5/cmath" 3
{ return __builtin_remquol(__x, __y, __pquo); }
# 1672 "/usr/include/c++/5/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1674 "/usr/include/c++/5/cmath" 3
remquo(_Tp __x, _Up __y, int *__pquo)
# 1675 "/usr/include/c++/5/cmath" 3
{
# 1676 "/usr/include/c++/5/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1677 "/usr/include/c++/5/cmath" 3
return remquo((__type)__x, (__type)__y, __pquo);
# 1678 "/usr/include/c++/5/cmath" 3
}
# 1682 "/usr/include/c++/5/cmath" 3
constexpr float rint(float __x)
# 1683 "/usr/include/c++/5/cmath" 3
{ return __builtin_rintf(__x); }
# 1686 "/usr/include/c++/5/cmath" 3
constexpr long double rint(long double __x)
# 1687 "/usr/include/c++/5/cmath" 3
{ return __builtin_rintl(__x); }
# 1690 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1693 "/usr/include/c++/5/cmath" 3
rint(_Tp __x)
# 1694 "/usr/include/c++/5/cmath" 3
{ return __builtin_rint(__x); }
# 1698 "/usr/include/c++/5/cmath" 3
constexpr float round(float __x)
# 1699 "/usr/include/c++/5/cmath" 3
{ return __builtin_roundf(__x); }
# 1702 "/usr/include/c++/5/cmath" 3
constexpr long double round(long double __x)
# 1703 "/usr/include/c++/5/cmath" 3
{ return __builtin_roundl(__x); }
# 1706 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1709 "/usr/include/c++/5/cmath" 3
round(_Tp __x)
# 1710 "/usr/include/c++/5/cmath" 3
{ return __builtin_round(__x); }
# 1714 "/usr/include/c++/5/cmath" 3
constexpr float scalbln(float __x, long __ex)
# 1715 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalblnf(__x, __ex); }
# 1718 "/usr/include/c++/5/cmath" 3
constexpr long double scalbln(long double __x, long __ex)
# 1719 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalblnl(__x, __ex); }
# 1722 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1725 "/usr/include/c++/5/cmath" 3
scalbln(_Tp __x, long __ex)
# 1726 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbln(__x, __ex); }
# 1730 "/usr/include/c++/5/cmath" 3
constexpr float scalbn(float __x, int __ex)
# 1731 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbnf(__x, __ex); }
# 1734 "/usr/include/c++/5/cmath" 3
constexpr long double scalbn(long double __x, int __ex)
# 1735 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbnl(__x, __ex); }
# 1738 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1741 "/usr/include/c++/5/cmath" 3
scalbn(_Tp __x, int __ex)
# 1742 "/usr/include/c++/5/cmath" 3
{ return __builtin_scalbn(__x, __ex); }
# 1746 "/usr/include/c++/5/cmath" 3
constexpr float tgamma(float __x)
# 1747 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgammaf(__x); }
# 1750 "/usr/include/c++/5/cmath" 3
constexpr long double tgamma(long double __x)
# 1751 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgammal(__x); }
# 1754 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1757 "/usr/include/c++/5/cmath" 3
tgamma(_Tp __x)
# 1758 "/usr/include/c++/5/cmath" 3
{ return __builtin_tgamma(__x); }
# 1762 "/usr/include/c++/5/cmath" 3
constexpr float trunc(float __x)
# 1763 "/usr/include/c++/5/cmath" 3
{ return __builtin_truncf(__x); }
# 1766 "/usr/include/c++/5/cmath" 3
constexpr long double trunc(long double __x)
# 1767 "/usr/include/c++/5/cmath" 3
{ return __builtin_truncl(__x); }
# 1770 "/usr/include/c++/5/cmath" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1773 "/usr/include/c++/5/cmath" 3
trunc(_Tp __x)
# 1774 "/usr/include/c++/5/cmath" 3
{ return __builtin_trunc(__x); }
# 1777 "/usr/include/c++/5/cmath" 3
}
# 114 "/usr/include/c++/5/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/cstdlib" 3
using ::div_t;
# 119 "/usr/include/c++/5/cstdlib" 3
using ::ldiv_t;
# 121 "/usr/include/c++/5/cstdlib" 3
using ::abort;
# 122 "/usr/include/c++/5/cstdlib" 3
using ::abs;
# 123 "/usr/include/c++/5/cstdlib" 3
using ::atexit;
# 126 "/usr/include/c++/5/cstdlib" 3
using ::at_quick_exit;
# 129 "/usr/include/c++/5/cstdlib" 3
using ::atof;
# 130 "/usr/include/c++/5/cstdlib" 3
using ::atoi;
# 131 "/usr/include/c++/5/cstdlib" 3
using ::atol;
# 132 "/usr/include/c++/5/cstdlib" 3
using ::bsearch;
# 133 "/usr/include/c++/5/cstdlib" 3
using ::calloc;
# 134 "/usr/include/c++/5/cstdlib" 3
using ::div;
# 135 "/usr/include/c++/5/cstdlib" 3
using ::exit;
# 136 "/usr/include/c++/5/cstdlib" 3
using ::free;
# 137 "/usr/include/c++/5/cstdlib" 3
using ::getenv;
# 138 "/usr/include/c++/5/cstdlib" 3
using ::labs;
# 139 "/usr/include/c++/5/cstdlib" 3
using ::ldiv;
# 140 "/usr/include/c++/5/cstdlib" 3
using ::malloc;
# 142 "/usr/include/c++/5/cstdlib" 3
using ::mblen;
# 143 "/usr/include/c++/5/cstdlib" 3
using ::mbstowcs;
# 144 "/usr/include/c++/5/cstdlib" 3
using ::mbtowc;
# 146 "/usr/include/c++/5/cstdlib" 3
using ::qsort;
# 149 "/usr/include/c++/5/cstdlib" 3
using ::quick_exit;
# 152 "/usr/include/c++/5/cstdlib" 3
using ::rand;
# 153 "/usr/include/c++/5/cstdlib" 3
using ::realloc;
# 154 "/usr/include/c++/5/cstdlib" 3
using ::srand;
# 155 "/usr/include/c++/5/cstdlib" 3
using ::strtod;
# 156 "/usr/include/c++/5/cstdlib" 3
using ::strtol;
# 157 "/usr/include/c++/5/cstdlib" 3
using ::strtoul;
# 158 "/usr/include/c++/5/cstdlib" 3
using ::system;
# 160 "/usr/include/c++/5/cstdlib" 3
using ::wcstombs;
# 161 "/usr/include/c++/5/cstdlib" 3
using ::wctomb;
# 166 "/usr/include/c++/5/cstdlib" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 169 "/usr/include/c++/5/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 174 "/usr/include/c++/5/cstdlib" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 196 "/usr/include/c++/5/cstdlib" 3
}
# 209 "/usr/include/c++/5/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 214 "/usr/include/c++/5/cstdlib" 3
using ::lldiv_t;
# 220 "/usr/include/c++/5/cstdlib" 3
using ::_Exit;
# 224 "/usr/include/c++/5/cstdlib" 3
using ::llabs;
# 227 "/usr/include/c++/5/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 228 "/usr/include/c++/5/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 230 "/usr/include/c++/5/cstdlib" 3
using ::lldiv;
# 241 "/usr/include/c++/5/cstdlib" 3
using ::atoll;
# 242 "/usr/include/c++/5/cstdlib" 3
using ::strtoll;
# 243 "/usr/include/c++/5/cstdlib" 3
using ::strtoull;
# 245 "/usr/include/c++/5/cstdlib" 3
using ::strtof;
# 246 "/usr/include/c++/5/cstdlib" 3
using ::strtold;
# 249 "/usr/include/c++/5/cstdlib" 3
}
# 251 "/usr/include/c++/5/cstdlib" 3
namespace std {
# 254 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 256 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::_Exit;
# 258 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::llabs;
# 259 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::div;
# 260 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::lldiv;
# 262 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::atoll;
# 263 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtof;
# 264 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoll;
# 265 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtoull;
# 266 "/usr/include/c++/5/cstdlib" 3
using __gnu_cxx::strtold;
# 267 "/usr/include/c++/5/cstdlib" 3
}
# 8925 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"

# 8925 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int signbit(float x);
# 8929 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int signbit(double x);
# 8931 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int signbit(long double x);
# 8933 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isfinite(float x);
# 8937 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isfinite(double x);
# 8939 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isfinite(long double x);
# 8941 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isnan(float x);
# 8945 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isnan(double x) throw();
# 8947 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isnan(long double x);
# 8949 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isinf(float x);
# 8953 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isinf(double x) throw();
# 8955 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
__attribute((always_inline)) inline int isinf(long double x);
# 9002 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
namespace std {
# 9004 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
template< class T> extern T __pow_helper(T, int);
# 9005 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
template< class T> extern T __cmath_power(T, unsigned);
# 9006 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
}
# 9008 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::abs;
# 9009 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::fabs;
# 9010 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::ceil;
# 9011 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::floor;
# 9012 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::sqrt;
# 9013 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::pow;
# 9014 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::log;
# 9015 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::log10;
# 9016 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::fmod;
# 9017 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::modf;
# 9018 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::exp;
# 9019 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::frexp;
# 9020 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::ldexp;
# 9021 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::asin;
# 9022 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::sin;
# 9023 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::sinh;
# 9024 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::acos;
# 9025 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::cos;
# 9026 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::cosh;
# 9027 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::atan;
# 9028 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::atan2;
# 9029 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::tan;
# 9030 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
using std::tanh;
# 9393 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
namespace std {
# 9406 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline long long abs(long long);
# 9412 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline long abs(long);
# 9413 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float abs(float);
# 9414 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr double abs(double);
# 9415 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float fabs(float);
# 9416 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float ceil(float);
# 9417 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float floor(float);
# 9418 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float sqrt(float);
# 9419 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float pow(float, float);
# 9424 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
template< class _Tp, class _Up> extern constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type pow(_Tp, _Up);
# 9434 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float log(float);
# 9435 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float log10(float);
# 9436 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float fmod(float, float);
# 9437 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline float modf(float, float *);
# 9438 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float exp(float);
# 9439 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern inline float frexp(float, int *);
# 9440 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float ldexp(float, int);
# 9441 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float asin(float);
# 9442 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float sin(float);
# 9443 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float sinh(float);
# 9444 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float acos(float);
# 9445 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float cos(float);
# 9446 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float cosh(float);
# 9447 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float atan(float);
# 9448 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float atan2(float, float);
# 9449 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float tan(float);
# 9450 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
extern constexpr float tanh(float);
# 9518 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
}
# 9609 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float logb(float a);
# 9611 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline int ilogb(float a);
# 9613 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float scalbn(float a, int b);
# 9615 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float scalbln(float a, long b);
# 9617 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float exp2(float a);
# 9619 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float expm1(float a);
# 9621 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float log2(float a);
# 9623 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float log1p(float a);
# 9625 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float acosh(float a);
# 9627 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float asinh(float a);
# 9629 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float atanh(float a);
# 9631 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float hypot(float a, float b);
# 9633 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float norm3d(float a, float b, float c);
# 9635 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float norm4d(float a, float b, float c, float d);
# 9637 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float cbrt(float a);
# 9639 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float erf(float a);
# 9641 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float erfc(float a);
# 9643 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float lgamma(float a);
# 9645 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float tgamma(float a);
# 9647 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float copysign(float a, float b);
# 9649 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float nextafter(float a, float b);
# 9651 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float remainder(float a, float b);
# 9653 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float remquo(float a, float b, int * quo);
# 9655 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float round(float a);
# 9657 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long lround(float a);
# 9659 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long long llround(float a);
# 9661 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float trunc(float a);
# 9663 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float rint(float a);
# 9665 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long lrint(float a);
# 9667 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long long llrint(float a);
# 9669 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float nearbyint(float a);
# 9671 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float fdim(float a, float b);
# 9673 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float fma(float a, float b, float c);
# 9675 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float fmax(float a, float b);
# 9677 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float fmin(float a, float b);
# 9718 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float exp10(float a);
# 9720 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float rsqrt(float a);
# 9722 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float rcbrt(float a);
# 9724 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float sinpi(float a);
# 9726 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float cospi(float a);
# 9728 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline void sincospi(float a, float * sptr, float * cptr);
# 9730 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline void sincos(float a, float * sptr, float * cptr);
# 9732 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float j0(float a);
# 9734 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float j1(float a);
# 9736 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float jn(int n, float a);
# 9738 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float y0(float a);
# 9740 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float y1(float a);
# 9742 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float yn(int n, float a);
# 9744 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float cyl_bessel_i0(float a);
# 9746 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float cyl_bessel_i1(float a);
# 9748 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float erfinv(float a);
# 9750 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float erfcinv(float a);
# 9752 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float normcdfinv(float a);
# 9754 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float normcdf(float a);
# 9756 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float erfcx(float a);
# 9758 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double copysign(double a, float b);
# 9760 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float copysign(float a, double b);
# 9762 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned min(unsigned a, unsigned b);
# 9764 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned min(int a, unsigned b);
# 9766 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned min(unsigned a, int b);
# 9768 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long min(long a, long b);
# 9770 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long min(unsigned long a, unsigned long b);
# 9772 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long min(long a, unsigned long b);
# 9774 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long min(unsigned long a, long b);
# 9776 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long long min(long long a, long long b);
# 9778 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, unsigned long long b);
# 9780 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long min(long long a, unsigned long long b);
# 9782 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long min(unsigned long long a, long long b);
# 9784 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float min(float a, float b);
# 9786 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double min(double a, double b);
# 9788 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double min(float a, double b);
# 9790 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double min(double a, float b);
# 9792 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned max(unsigned a, unsigned b);
# 9794 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned max(int a, unsigned b);
# 9796 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned max(unsigned a, int b);
# 9798 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long max(long a, long b);
# 9800 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long max(unsigned long a, unsigned long b);
# 9802 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long max(long a, unsigned long b);
# 9804 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long max(unsigned long a, long b);
# 9806 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline long long max(long long a, long long b);
# 9808 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, unsigned long long b);
# 9810 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long max(long long a, unsigned long long b);
# 9812 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline unsigned long long max(unsigned long long a, long long b);
# 9814 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline float max(float a, float b);
# 9816 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double max(double a, double b);
# 9818 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double max(float a, double b);
# 9820 "/usr/local/cuda-8.0/bin/..//include/math_functions.h"
static inline double max(double a, float b);
# 248 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(float x) { return __signbitf(x); }
# 252 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(double x) { return __signbit(x); }
# 254 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int signbit(long double x) { return __signbitl(x); }
# 265 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(float x) { return __finitef(x); }
# 280 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(double x) { return __finite(x); }
# 293 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isfinite(long double x) { return __finitel(x); }
# 296 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isnan(float x) { return __isnanf(x); }
# 300 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isnan(double x) throw() { return __isnan(x); }
# 302 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isnan(long double x) { return __isnanl(x); }
# 304 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isinf(float x) { return __isinff(x); }
# 308 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isinf(double x) throw() { return __isinf(x); }
# 310 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
__attribute((always_inline)) inline int isinf(long double x) { return __isinfl(x); }
# 503 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float logb(float a)
# 504 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 505 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return logbf(a);
# 506 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 508 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline int ilogb(float a)
# 509 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 510 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ilogbf(a);
# 511 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 513 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float scalbn(float a, int b)
# 514 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 515 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return scalbnf(a, b);
# 516 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 518 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float scalbln(float a, long b)
# 519 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 520 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return scalblnf(a, b);
# 521 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 523 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float exp2(float a)
# 524 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 525 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return exp2f(a);
# 526 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 528 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float expm1(float a)
# 529 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 530 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return expm1f(a);
# 531 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 533 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float log2(float a)
# 534 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 535 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return log2f(a);
# 536 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 538 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float log1p(float a)
# 539 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 540 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return log1pf(a);
# 541 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 543 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float acosh(float a)
# 544 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 545 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return acoshf(a);
# 546 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 548 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float asinh(float a)
# 549 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 550 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return asinhf(a);
# 551 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 553 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float atanh(float a)
# 554 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 555 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return atanhf(a);
# 556 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 558 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float hypot(float a, float b)
# 559 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 560 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return hypotf(a, b);
# 561 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 563 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float norm3d(float a, float b, float c)
# 564 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 565 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return norm3df(a, b, c);
# 566 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 568 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float norm4d(float a, float b, float c, float d)
# 569 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 570 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return norm4df(a, b, c, d);
# 571 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 573 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float cbrt(float a)
# 574 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 575 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return cbrtf(a);
# 576 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 578 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float erf(float a)
# 579 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 580 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return erff(a);
# 581 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 583 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float erfc(float a)
# 584 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 585 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return erfcf(a);
# 586 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 588 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float lgamma(float a)
# 589 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 590 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return lgammaf(a);
# 591 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 593 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float tgamma(float a)
# 594 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 595 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return tgammaf(a);
# 596 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 598 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float copysign(float a, float b)
# 599 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 600 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return copysignf(a, b);
# 601 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 603 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float nextafter(float a, float b)
# 604 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 605 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return nextafterf(a, b);
# 606 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 608 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float remainder(float a, float b)
# 609 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 610 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return remainderf(a, b);
# 611 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 613 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float remquo(float a, float b, int *quo)
# 614 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 615 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return remquof(a, b, quo);
# 616 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 618 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float round(float a)
# 619 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 620 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return roundf(a);
# 621 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 623 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long lround(float a)
# 624 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 625 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return lroundf(a);
# 626 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 628 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long long llround(float a)
# 629 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 630 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return llroundf(a);
# 631 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 633 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float trunc(float a)
# 634 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 635 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return truncf(a);
# 636 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 638 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float rint(float a)
# 639 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 640 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return rintf(a);
# 641 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 643 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long lrint(float a)
# 644 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 645 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return lrintf(a);
# 646 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 648 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long long llrint(float a)
# 649 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 650 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return llrintf(a);
# 651 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 653 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float nearbyint(float a)
# 654 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 655 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return nearbyintf(a);
# 656 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 658 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float fdim(float a, float b)
# 659 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 660 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fdimf(a, b);
# 661 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 663 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float fma(float a, float b, float c)
# 664 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 665 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmaf(a, b, c);
# 666 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 668 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float fmax(float a, float b)
# 669 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 670 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmaxf(a, b);
# 671 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 673 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float fmin(float a, float b)
# 674 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 675 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fminf(a, b);
# 676 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 681 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float exp10(float a)
# 682 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 683 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return exp10f(a);
# 684 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 686 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float rsqrt(float a)
# 687 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 688 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return rsqrtf(a);
# 689 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 691 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float rcbrt(float a)
# 692 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 693 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return rcbrtf(a);
# 694 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 696 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float sinpi(float a)
# 697 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 698 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return sinpif(a);
# 699 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 701 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float cospi(float a)
# 702 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 703 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return cospif(a);
# 704 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 706 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline void sincospi(float a, float *sptr, float *cptr)
# 707 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 708 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
sincospif(a, sptr, cptr);
# 709 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 711 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline void sincos(float a, float *sptr, float *cptr)
# 712 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 713 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
sincosf(a, sptr, cptr);
# 714 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 716 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float j0(float a)
# 717 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 718 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return j0f(a);
# 719 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 721 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float j1(float a)
# 722 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 723 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return j1f(a);
# 724 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 726 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float jn(int n, float a)
# 727 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 728 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return jnf(n, a);
# 729 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 731 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float y0(float a)
# 732 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 733 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return y0f(a);
# 734 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 736 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float y1(float a)
# 737 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 738 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return y1f(a);
# 739 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 741 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float yn(int n, float a)
# 742 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 743 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ynf(n, a);
# 744 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 746 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float cyl_bessel_i0(float a)
# 747 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 748 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return cyl_bessel_i0f(a);
# 749 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 751 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float cyl_bessel_i1(float a)
# 752 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 753 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return cyl_bessel_i1f(a);
# 754 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 756 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float erfinv(float a)
# 757 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 758 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return erfinvf(a);
# 759 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 761 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float erfcinv(float a)
# 762 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 763 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return erfcinvf(a);
# 764 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 766 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float normcdfinv(float a)
# 767 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 768 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return normcdfinvf(a);
# 769 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 771 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float normcdf(float a)
# 772 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 773 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return normcdff(a);
# 774 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 776 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float erfcx(float a)
# 777 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 778 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return erfcxf(a);
# 779 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 781 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double copysign(double a, float b)
# 782 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 783 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return copysign(a, (double)b);
# 784 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 786 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float copysign(float a, double b)
# 787 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 788 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return copysignf(a, (float)b);
# 789 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 791 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned min(unsigned a, unsigned b)
# 792 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 793 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umin(a, b);
# 794 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 796 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned min(int a, unsigned b)
# 797 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 798 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umin((unsigned)a, b);
# 799 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 801 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned min(unsigned a, int b)
# 802 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 803 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umin(a, (unsigned)b);
# 804 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 806 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long min(long a, long b)
# 807 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 813 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 817 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (long)min((int)a, (int)b);
# 818 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 819 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (long)llmin((long long)a, (long long)b);
# 820 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 821 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 823 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long min(unsigned long a, unsigned long b)
# 824 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 828 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 832 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 833 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 834 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 835 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 836 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 838 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long min(long a, unsigned long b)
# 839 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 843 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 847 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 848 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 849 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 850 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 851 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 853 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long min(unsigned long a, long b)
# 854 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 858 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 862 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umin((unsigned)a, (unsigned)b);
# 863 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 864 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmin((unsigned long long)a, (unsigned long long)b);
# 865 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 866 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 868 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long long min(long long a, long long b)
# 869 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 870 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return llmin(a, b);
# 871 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 873 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, unsigned long long b)
# 874 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 875 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmin(a, b);
# 876 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 878 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long min(long long a, unsigned long long b)
# 879 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 880 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmin((unsigned long long)a, b);
# 881 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 883 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long min(unsigned long long a, long long b)
# 884 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 885 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmin(a, (unsigned long long)b);
# 886 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 888 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float min(float a, float b)
# 889 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 890 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fminf(a, b);
# 891 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 893 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double min(double a, double b)
# 894 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 895 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmin(a, b);
# 896 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 898 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double min(float a, double b)
# 899 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 900 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmin((double)a, b);
# 901 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 903 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double min(double a, float b)
# 904 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 905 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmin(a, (double)b);
# 906 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 908 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned max(unsigned a, unsigned b)
# 909 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 910 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umax(a, b);
# 911 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 913 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned max(int a, unsigned b)
# 914 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 915 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umax((unsigned)a, b);
# 916 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 918 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned max(unsigned a, int b)
# 919 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 920 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return umax(a, (unsigned)b);
# 921 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 923 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long max(long a, long b)
# 924 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 929 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(long) == sizeof(int)) {
# 933 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (long)max((int)a, (int)b);
# 934 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 935 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (long)llmax((long long)a, (long long)b);
# 936 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 937 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 939 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long max(unsigned long a, unsigned long b)
# 940 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 944 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 948 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 949 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 950 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 951 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 952 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 954 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long max(long a, unsigned long b)
# 955 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 959 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 963 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 964 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 965 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 966 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 967 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 969 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long max(unsigned long a, long b)
# 970 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 974 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 978 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)umax((unsigned)a, (unsigned)b);
# 979 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
} else {
# 980 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (unsigned long)ullmax((unsigned long long)a, (unsigned long long)b);
# 981 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 982 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 984 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline long long max(long long a, long long b)
# 985 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 986 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return llmax(a, b);
# 987 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 989 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, unsigned long long b)
# 990 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 991 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmax(a, b);
# 992 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 994 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long max(long long a, unsigned long long b)
# 995 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 996 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmax((unsigned long long)a, b);
# 997 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 999 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline unsigned long long max(unsigned long long a, long long b)
# 1000 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1001 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return ullmax(a, (unsigned long long)b);
# 1002 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1004 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline float max(float a, float b)
# 1005 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1006 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmaxf(a, b);
# 1007 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1009 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double max(double a, double b)
# 1010 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1011 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmax(a, b);
# 1012 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1014 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double max(float a, double b)
# 1015 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1016 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmax((double)a, b);
# 1017 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1019 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
static inline double max(double a, float b)
# 1020 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1021 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return fmax(a, (double)b);
# 1022 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1033 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline int min(int a, int b)
# 1034 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1035 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a < b) ? a : b;
# 1036 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1038 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline unsigned umin(unsigned a, unsigned b)
# 1039 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1040 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a < b) ? a : b;
# 1041 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1043 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline long long llmin(long long a, long long b)
# 1044 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1045 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a < b) ? a : b;
# 1046 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1048 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline unsigned long long ullmin(unsigned long long a, unsigned long long
# 1049 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
b)
# 1050 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1051 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a < b) ? a : b;
# 1052 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1054 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline int max(int a, int b)
# 1055 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1056 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a > b) ? a : b;
# 1057 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1059 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline unsigned umax(unsigned a, unsigned b)
# 1060 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1061 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a > b) ? a : b;
# 1062 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1064 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline long long llmax(long long a, long long b)
# 1065 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1066 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a > b) ? a : b;
# 1067 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 1069 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
extern "C" inline unsigned long long ullmax(unsigned long long a, unsigned long long
# 1070 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
b)
# 1071 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
{
# 1072 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
return (a > b) ? a : b;
# 1073 "/usr/local/cuda-8.0/bin/..//include/math_functions.hpp"
}
# 77 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
template< class T, int dim = 1>
# 78 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
struct surface : public surfaceReference {
# 81 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
surface()
# 82 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
{
# 83 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
(surfaceReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 84 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
}
# 86 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
surface(cudaChannelFormatDesc desc)
# 87 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
{
# 88 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
(surfaceReference::channelDesc) = desc;
# 89 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
}
# 91 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
};
# 93 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
template< int dim>
# 94 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
struct surface< void, dim> : public surfaceReference {
# 97 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
surface()
# 98 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
{
# 99 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
(surfaceReference::channelDesc) = cudaCreateChannelDesc< void> ();
# 100 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
}
# 102 "/usr/local/cuda-8.0/bin/..//include/cuda_surface_types.h"
};
# 77 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
template< class T, int texType = 1, cudaTextureReadMode mode = cudaReadModeElementType>
# 78 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
struct texture : public textureReference {
# 81 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
texture(int norm = 0, cudaTextureFilterMode
# 82 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
fMode = cudaFilterModePoint, cudaTextureAddressMode
# 83 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
aMode = cudaAddressModeClamp)
# 84 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
{
# 85 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::normalized) = norm;
# 86 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::filterMode) = fMode;
# 87 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[0]) = aMode;
# 88 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[1]) = aMode;
# 89 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[2]) = aMode;
# 90 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::channelDesc) = cudaCreateChannelDesc< T> ();
# 91 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::sRGB) = 0;
# 92 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
}
# 94 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
texture(int norm, cudaTextureFilterMode
# 95 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
fMode, cudaTextureAddressMode
# 96 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
aMode, cudaChannelFormatDesc
# 97 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
desc)
# 98 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
{
# 99 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::normalized) = norm;
# 100 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::filterMode) = fMode;
# 101 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[0]) = aMode;
# 102 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[1]) = aMode;
# 103 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
((textureReference::addressMode)[2]) = aMode;
# 104 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::channelDesc) = desc;
# 105 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
(textureReference::sRGB) = 0;
# 106 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
}
# 108 "/usr/local/cuda-8.0/bin/..//include/cuda_texture_types.h"
};
# 90 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
extern "C" {
# 3230 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
}
# 3238 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline int mulhi(int a, int b);
# 3240 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b);
# 3242 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b);
# 3244 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b);
# 3246 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b);
# 3248 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b);
# 3250 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b);
# 3252 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b);
# 3254 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline int float_as_int(float a);
# 3256 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline float int_as_float(int a);
# 3258 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned float_as_uint(float a);
# 3260 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline float uint_as_float(unsigned a);
# 3262 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline float saturate(float a);
# 3264 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline int mul24(int a, int b);
# 3266 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b);
# 3268 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute((deprecated("Please use __trap() instead."))) __attribute__((unused)) static inline void trap();
# 3271 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute((deprecated("Please use __brkpt() instead."))) __attribute__((unused)) static inline void brkpt(int c = 0);
# 3273 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute((deprecated("Please use __syncthreads() instead."))) __attribute__((unused)) static inline void syncthreads();
# 3275 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute((deprecated("Please use __prof_trigger() instead."))) __attribute__((unused)) static inline void prof_trigger(int e);
# 3277 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute((deprecated("Please use __threadfence() instead."))) __attribute__((unused)) static inline void threadfence(bool global = true);
# 3279 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode = cudaRoundZero);
# 3281 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode = cudaRoundZero);
# 3283 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode = cudaRoundNearest);
# 3285 "/usr/local/cuda-8.0/bin/..//include/device_functions.h"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 83 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline int mulhi(int a, int b)
# 84 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 86 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 88 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, unsigned b)
# 89 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 91 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 93 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(int a, unsigned b)
# 94 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 96 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 98 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned mulhi(unsigned a, int b)
# 99 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 101 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 103 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline long long mul64hi(long long a, long long b)
# 104 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 106 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 108 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, unsigned long long b)
# 109 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 111 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 113 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(long long a, unsigned long long b)
# 114 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 116 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 118 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned long long mul64hi(unsigned long long a, long long b)
# 119 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 121 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 123 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline int float_as_int(float a)
# 124 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 126 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 128 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline float int_as_float(int a)
# 129 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 131 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 133 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned float_as_uint(float a)
# 134 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 136 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 138 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline float uint_as_float(unsigned a)
# 139 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 141 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 142 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline float saturate(float a)
# 143 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;
# 145 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 147 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline int mul24(int a, int b)
# 148 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 150 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 152 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned umul24(unsigned a, unsigned b)
# 153 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;
# 155 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 157 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline void trap()
# 158 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;
# 160 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 163 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline void brkpt(int c)
# 164 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)c;
# 166 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 168 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline void syncthreads()
# 169 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;
# 171 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 173 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline void prof_trigger(int e)
# 174 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)e;
# 191 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 193 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline void threadfence(bool global)
# 194 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)global;
# 196 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 198 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline int float2int(float a, cudaRoundMode mode)
# 199 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 204 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 206 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline unsigned float2uint(float a, cudaRoundMode mode)
# 207 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 212 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 214 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline float int2float(int a, cudaRoundMode mode)
# 215 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 220 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 222 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
__attribute__((unused)) static inline float uint2float(unsigned a, cudaRoundMode mode)
# 223 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 228 "/usr/local/cuda-8.0/bin/..//include/device_functions.hpp"
::exit(___);}
# 111 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 113 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 115 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 117 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 119 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 121 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 123 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 125 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 127 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 129 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 131 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 133 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 135 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 137 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 139 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 141 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 143 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 145 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 147 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 149 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 151 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 164 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
extern "C" {
# 175 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
}
# 185 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 187 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 189 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 191 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 193 "/usr/local/cuda-8.0/bin/..//include/device_atomic_functions.h"
__attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 80 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
extern "C" {
# 1134 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
}
# 1143 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1145 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1147 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1149 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1153 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1155 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1161 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1163 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.h"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 85 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 86 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 91 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 93 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 94 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 99 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 101 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 102 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 109 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 110 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 117 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 118 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 123 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 125 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 126 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 133 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 134 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 141 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 142 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 149 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 150 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 157 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 158 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 165 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 166 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 168 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 170 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 171 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 173 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 175 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 176 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
{int volatile ___ = 1;(void)a;(void)mode;
# 178 "/usr/local/cuda-8.0/bin/..//include/device_double_functions.hpp"
::exit(___);}
# 94 "/usr/local/cuda-8.0/bin/..//include/sm_20_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 102 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 104 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 106 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 108 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/local/cuda-8.0/bin/..//include/sm_32_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 308 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 311 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 314 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 317 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 320 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 323 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 326 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 329 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 332 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 335 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 338 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 341 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 344 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 347 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 350 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 353 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 356 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 359 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 362 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 365 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 368 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 371 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 374 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 377 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 380 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 383 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 386 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 389 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 392 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 395 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 398 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 401 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 404 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 407 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 410 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 413 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 416 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 419 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 422 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 425 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 428 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 431 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 432 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 435 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 436 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 439 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 440 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
compare, unsigned long long
# 441 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 444 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 445 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
compare, unsigned long long
# 446 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 449 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 452 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 455 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 458 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 461 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 464 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 467 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 470 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 473 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 476 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 479 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 482 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 485 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 488 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 491 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 494 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 497 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 500 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 503 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 506 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 509 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 512 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 515 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 518 "/usr/local/cuda-8.0/bin/..//include/sm_60_atomic_functions.h"
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 79 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
extern "C" {
# 1466 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
}
# 1475 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1477 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1479 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1481 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1486 "/usr/local/cuda-8.0/bin/..//include/sm_20_intrinsics.h"
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 100 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 102 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 103 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 105 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 107 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 109 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 111 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 113 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 115 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 117 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 119 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 122 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 124 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 126 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 132 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 134 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 136 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 138 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 140 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 142 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 144 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 148 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 150 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 152 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 154 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 156 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 158 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 160 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 162 "/usr/local/cuda-8.0/bin/..//include/sm_30_intrinsics.h"
__attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 89 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 102 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 114 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 120 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 121 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 125 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 138 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 150 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 156 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 157 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 161 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 174 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 186 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 192 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 193 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 197 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 210 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 222 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 228 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 229 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 236 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 237 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 240 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 241 "/usr/local/cuda-8.0/bin/..//include/sm_32_intrinsics.h"
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 91 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 94 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 97 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 101 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 108 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 111 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 112 "/usr/local/cuda-8.0/bin/..//include/sm_61_intrinsics.h"
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 100 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 101 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 102 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)s;(void)mode;
# 111 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 113 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 114 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf1Dread(surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 115 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)mode;
# 123 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 125 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 126 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dread(T *res, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 127 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)mode;
# 131 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 260 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 261 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 262 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 271 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 273 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 274 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf2Dread(surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 275 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)mode;
# 283 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 285 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 286 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dread(T *res, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 287 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)mode;
# 291 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 422 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 423 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 424 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 433 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 435 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 436 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf3Dread(surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 437 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 445 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 447 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 448 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dread(T *res, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 449 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 453 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 582 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 583 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 584 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 593 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 595 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 596 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf1DLayeredread(surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 597 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)layer;(void)mode;
# 605 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 607 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 608 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1DLayeredread(T *res, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 609 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)layer;(void)mode;
# 613 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 768 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 769 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 770 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 779 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 781 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 782 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surf2DLayeredread(surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 783 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 791 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 793 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 794 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredread(T *res, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 795 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 799 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 919 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 920 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 921 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 930 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 932 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 933 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapread(surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 934 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 942 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 944 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 945 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapread(T *res, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 946 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 950 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1070 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1071 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1072 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 1081 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1083 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1084 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline T surfCubemapLayeredread(surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1085 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1093 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1095 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1096 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapLayeredread(T *res, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1097 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)res;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 1101 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1232 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1233 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1234 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)s;(void)mode;
# 1254 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1256 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1257 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf1Dwrite(T val, surface< void, 1> surf, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1258 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)mode;
# 1262 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1377 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1378 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1379 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)s;(void)mode;
# 1399 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1401 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1402 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2Dwrite(T val, surface< void, 2> surf, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1403 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)mode;
# 1407 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1520 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1521 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1522 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)s;(void)mode;
# 1542 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1544 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1545 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf3Dwrite(T val, surface< void, 3> surf, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1546 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)z;(void)mode;
# 1550 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1666 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1667 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1668 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)s;(void)mode;
# 1688 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1690 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1691 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surf1DLayeredwrite(T val, surface< void, 241> surf, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1692 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)layer;(void)mode;
# 1696 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1822 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1823 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1824 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)s;(void)mode;
# 1844 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1846 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1847 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surf2DLayeredwrite(T val, surface< void, 242> surf, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1848 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layer;(void)mode;
# 1852 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1958 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1959 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1960 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)s;(void)mode;
# 1980 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 1982 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 1983 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) inline void surfCubemapwrite(T val, surface< void, 12> surf, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 1984 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)face;(void)mode;
# 1988 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 2093 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 2094 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, int s, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2095 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)s;(void)mode;
# 2115 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 2117 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
template< class T>
# 2118 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
__attribute((always_inline)) __attribute__((unused)) static inline void surfCubemapLayeredwrite(T val, surface< void, 252> surf, int x, int y, int layerFace, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 2119 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
{int volatile ___ = 1;(void)val;(void)surf;(void)x;(void)y;(void)layerFace;(void)mode;
# 2123 "/usr/local/cuda-8.0/bin/..//include/surface_functions.h"
::exit(___);}
# 70 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 71 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1Dfetch(texture< T, 1, cudaReadModeElementType> , int) {int volatile ___ = 1;::exit(___);}
# 73 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T>
# 74 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
struct __nv_tex_rmnf_ret { };
# 76 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char> { typedef float type; };
# 77 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< signed char> { typedef float type; };
# 78 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned char> { typedef float type; };
# 79 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short> { typedef float type; };
# 80 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< unsigned short> { typedef float type; };
# 81 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char1> { typedef float1 type; };
# 82 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar1> { typedef float1 type; };
# 83 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short1> { typedef float1 type; };
# 84 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort1> { typedef float1 type; };
# 85 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char2> { typedef float2 type; };
# 86 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar2> { typedef float2 type; };
# 87 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short2> { typedef float2 type; };
# 88 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort2> { typedef float2 type; };
# 89 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< char4> { typedef float4 type; };
# 90 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< uchar4> { typedef float4 type; };
# 91 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< short4> { typedef float4 type; };
# 92 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex_rmnf_ret< ushort4> { typedef float4 type; };
# 94 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 95 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1Dfetch(texture< T, 1, cudaReadModeNormalizedFloat> , int) {int volatile ___ = 1;::exit(___);}
# 215 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 216 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1D(texture< T, 1, cudaReadModeElementType> , float) {int volatile ___ = 1;::exit(___);}
# 218 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 219 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1D(texture< T, 1, cudaReadModeNormalizedFloat> , float) {int volatile ___ = 1;::exit(___);}
# 345 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 346 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2D(texture< T, 2, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 349 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2D(texture< T, 2, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 475 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 476 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayered(texture< T, 241, cudaReadModeElementType> , float, int) {int volatile ___ = 1;::exit(___);}
# 478 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 479 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayered(texture< T, 241, cudaReadModeNormalizedFloat> , float, int) {int volatile ___ = 1;::exit(___);}
# 603 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 604 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayered(texture< T, 242, cudaReadModeElementType> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 606 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 607 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayered(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int) {int volatile ___ = 1;::exit(___);}
# 735 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 736 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3D(texture< T, 3, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 738 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 739 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3D(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 864 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 865 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemap(texture< T, 12, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 867 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 868 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemap(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 992 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 993 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLayered(texture< T, 252, cudaReadModeElementType> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 995 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 996 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLayered(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 1121 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T>
# 1122 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
struct __nv_tex2dgather_ret { };
# 1123 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char> { typedef char4 type; };
# 1124 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< signed char> { typedef char4 type; };
# 1125 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char1> { typedef char4 type; };
# 1126 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char2> { typedef char4 type; };
# 1127 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char3> { typedef char4 type; };
# 1128 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< char4> { typedef char4 type; };
# 1129 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned char> { typedef uchar4 type; };
# 1130 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar1> { typedef uchar4 type; };
# 1131 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar2> { typedef uchar4 type; };
# 1132 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar3> { typedef uchar4 type; };
# 1133 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uchar4> { typedef uchar4 type; };
# 1135 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short> { typedef short4 type; };
# 1136 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short1> { typedef short4 type; };
# 1137 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short2> { typedef short4 type; };
# 1138 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short3> { typedef short4 type; };
# 1139 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< short4> { typedef short4 type; };
# 1140 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned short> { typedef ushort4 type; };
# 1141 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort1> { typedef ushort4 type; };
# 1142 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort2> { typedef ushort4 type; };
# 1143 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort3> { typedef ushort4 type; };
# 1144 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< ushort4> { typedef ushort4 type; };
# 1146 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int> { typedef int4 type; };
# 1147 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int1> { typedef int4 type; };
# 1148 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int2> { typedef int4 type; };
# 1149 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int3> { typedef int4 type; };
# 1150 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< int4> { typedef int4 type; };
# 1151 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< unsigned> { typedef uint4 type; };
# 1152 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint1> { typedef uint4 type; };
# 1153 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint2> { typedef uint4 type; };
# 1154 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint3> { typedef uint4 type; };
# 1155 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< uint4> { typedef uint4 type; };
# 1157 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float> { typedef float4 type; };
# 1158 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float1> { typedef float4 type; };
# 1159 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float2> { typedef float4 type; };
# 1160 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float3> { typedef float4 type; };
# 1161 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template<> struct __nv_tex2dgather_ret< float4> { typedef float4 type; };
# 1163 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex2dgather_ret< T> ::type
# 1164 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2Dgather(texture< T, 2, cudaReadModeElementType> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1166 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static float4
# 1167 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2Dgather(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 1232 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1233 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLod(texture< T, 1, cudaReadModeElementType> , float, float) {int volatile ___ = 1;::exit(___);}
# 1235 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1236 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLod(texture< T, 1, cudaReadModeNormalizedFloat> , float, float) {int volatile ___ = 1;::exit(___);}
# 1360 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1361 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLod(texture< T, 2, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1363 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1364 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLod(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 1484 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1485 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayeredLod(texture< T, 241, cudaReadModeElementType> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1487 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1488 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayeredLod(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float) {int volatile ___ = 1;::exit(___);}
# 1612 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1613 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayeredLod(texture< T, 242, cudaReadModeElementType> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1615 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1616 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayeredLod(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1740 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1741 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3DLod(texture< T, 3, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1743 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1744 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3DLod(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1868 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1869 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLod(texture< T, 12, cudaReadModeElementType> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1871 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 1872 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLod(texture< T, 12, cudaReadModeNormalizedFloat> , float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1996 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 1997 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLayeredLod(texture< T, 252, cudaReadModeElementType> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1999 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2000 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
texCubemapLayeredLod(texture< T, 252, cudaReadModeNormalizedFloat> , float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 2124 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2125 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DGrad(texture< T, 1, cudaReadModeElementType> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2127 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2128 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DGrad(texture< T, 1, cudaReadModeNormalizedFloat> , float, float, float) {int volatile ___ = 1;::exit(___);}
# 2252 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2253 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DGrad(texture< T, 2, cudaReadModeElementType> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2255 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2256 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DGrad(texture< T, 2, cudaReadModeNormalizedFloat> , float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2380 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2381 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayeredGrad(texture< T, 241, cudaReadModeElementType> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2383 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2384 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex1DLayeredGrad(texture< T, 241, cudaReadModeNormalizedFloat> , float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 2509 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2510 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayeredGrad(texture< T, 242, cudaReadModeElementType> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2512 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2513 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex2DLayeredGrad(texture< T, 242, cudaReadModeNormalizedFloat> , float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 2637 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static T
# 2638 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3DGrad(texture< T, 3, cudaReadModeElementType> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 2640 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
template< class T> __attribute__((unused)) static typename __nv_tex_rmnf_ret< T> ::type
# 2641 "/usr/local/cuda-8.0/bin/..//include/texture_fetch_functions.h"
tex3DGrad(texture< T, 3, cudaReadModeNormalizedFloat> , float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 67 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 68 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1Dfetch(T *, cudaTextureObject_t, int) {int volatile ___ = 1;::exit(___);}
# 121 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 122 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 123 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 127 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 135 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 136 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1D(T *, cudaTextureObject_t, float) {int volatile ___ = 1;::exit(___);}
# 190 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 191 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1D(cudaTextureObject_t texObject, float x)
# 192 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;
# 196 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 205 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 206 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2D(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 258 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 259 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2D(cudaTextureObject_t texObject, float x, float y)
# 260 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 264 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 272 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 273 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3D(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 325 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 326 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 327 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 331 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 340 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 341 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayered(T *, cudaTextureObject_t, float, int) {int volatile ___ = 1;::exit(___);}
# 393 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 394 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 395 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 399 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 408 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 409 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayered(T *, cudaTextureObject_t, float, float, int) {int volatile ___ = 1;::exit(___);}
# 461 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 462 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 463 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 467 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 476 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 477 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemap(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 529 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 530 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 531 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 535 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 544 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 545 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLayered(T *, cudaTextureObject_t, float, float, float, int) {int volatile ___ = 1;::exit(___);}
# 598 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 599 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 600 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 604 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 613 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 614 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2Dgather(T *, cudaTextureObject_t, float, float, int = 0) {int volatile ___ = 1;::exit(___);}
# 660 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 661 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 662 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 666 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 675 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLod(T *, cudaTextureObject_t, float, float) {int volatile ___ = 1;::exit(___);}
# 728 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 729 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 730 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 734 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 743 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 744 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLod(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 797 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 798 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 799 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 803 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 812 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 813 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3DLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 865 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 866 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 867 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 871 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 879 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 880 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayeredLod(T *, cudaTextureObject_t, float, int, float) {int volatile ___ = 1;::exit(___);}
# 932 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 933 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 934 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 938 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 947 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 948 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayeredLod(T *, cudaTextureObject_t, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1000 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1001 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 1002 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 1006 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1014 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1015 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLod(T *, cudaTextureObject_t, float, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1067 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1068 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 1069 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 1073 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1081 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1082 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredLod(T *, cudaTextureObject_t, float, float, float, int, float) {int volatile ___ = 1;::exit(___);}
# 1134 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1135 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 1136 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 1140 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1148 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1149 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DGrad(T *, cudaTextureObject_t, float, float, float) {int volatile ___ = 1;::exit(___);}
# 1202 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1203 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 1204 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 1208 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1216 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1217 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DGrad(T *, cudaTextureObject_t, float, float, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1269 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1270 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 1271 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 1275 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1283 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1284 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3DGrad(T *, cudaTextureObject_t, float, float, float, float4, float4) {int volatile ___ = 1;::exit(___);}
# 1336 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1337 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 1338 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 1342 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1350 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1351 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayeredGrad(T *, cudaTextureObject_t, float, int, float, float) {int volatile ___ = 1;::exit(___);}
# 1404 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1405 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 1406 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 1410 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 1418 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 1419 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayeredGrad(T *, cudaTextureObject_t, float, float, int, float2, float2) {int volatile ___ = 1;::exit(___);}
# 1471 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 1472 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 1473 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 1477 "/usr/local/cuda-8.0/bin/..//include/texture_indirect_functions.h"
::exit(___);}
# 68 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 69 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1Dread(T *, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 111 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 112 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 113 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 119 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 128 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 129 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2Dread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 172 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 173 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 174 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 180 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 189 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 190 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf3Dread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 231 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 232 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 233 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 239 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 247 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 248 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1DLayeredread(T *, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 290 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 291 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 292 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 298 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 306 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 307 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2DLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 348 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 349 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 350 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 356 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 364 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 365 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 406 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 407 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 408 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 414 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 422 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 423 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredread(T *, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 464 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static T
# 465 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 466 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 472 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
::exit(___);}
# 480 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 481 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1Dwrite(T, cudaSurfaceObject_t, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 528 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 529 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2Dwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 576 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 577 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf3Dwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 626 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 627 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf1DLayeredwrite(T, cudaSurfaceObject_t, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 675 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 676 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surf2DLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 723 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 724 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 771 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
template< class T> __attribute__((unused)) static void
# 772 "/usr/local/cuda-8.0/bin/..//include/surface_indirect_functions.h"
surfCubemapLayeredwrite(T, cudaSurfaceObject_t, int, int, int, cudaSurfaceBoundaryMode = cudaBoundaryModeTrap) {int volatile ___ = 1;::exit(___);}
# 68 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern "C" {
# 71 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/local/cuda-8.0/bin/..//include/device_launch_parameters.h"
}
# 183 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 184 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaLaunchKernel(const T *
# 185 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, dim3
# 186 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
gridDim, dim3
# 187 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockDim, void **
# 188 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
args, ::size_t
# 189 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
sharedMem = 0, cudaStream_t
# 190 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
stream = 0)
# 192 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 193 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 194 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 221 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 222 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaSetupArgument(T
# 223 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
arg, ::size_t
# 224 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset)
# 226 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 227 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaSetupArgument((const void *)(&arg), sizeof(T), offset);
# 228 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 260 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 261 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
event, unsigned
# 262 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags)
# 264 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 265 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaEventCreateWithFlags(event, flags);
# 266 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 323 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
static inline cudaError_t cudaMallocHost(void **
# 324 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
ptr, ::size_t
# 325 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size, unsigned
# 326 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags)
# 328 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 329 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaHostAlloc(ptr, size, flags);
# 330 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 332 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 333 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaHostAlloc(T **
# 334 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
ptr, ::size_t
# 335 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size, unsigned
# 336 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags)
# 338 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 339 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 340 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 342 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 343 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaHostGetDevicePointer(T **
# 344 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
pDevice, void *
# 345 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
pHost, unsigned
# 346 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags)
# 348 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 349 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 350 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 449 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 450 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMallocManaged(T **
# 451 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t
# 452 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size, unsigned
# 453 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags = 1)
# 455 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 456 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 457 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 528 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 529 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaStreamAttachMemAsync(cudaStream_t
# 530 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
stream, T *
# 531 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t
# 532 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
length = 0, unsigned
# 533 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags = 4)
# 535 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 536 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 537 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 539 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 540 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMalloc(T **
# 541 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t
# 542 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size)
# 544 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 545 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMalloc((void **)((void *)devPtr), size);
# 546 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 548 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 549 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMallocHost(T **
# 550 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
ptr, ::size_t
# 551 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size, unsigned
# 552 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags = 0)
# 554 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 555 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 556 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 558 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 559 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMallocPitch(T **
# 560 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t *
# 561 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
pitch, ::size_t
# 562 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
width, ::size_t
# 563 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
height)
# 565 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 566 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 567 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 604 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 605 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMemcpyToSymbol(const T &
# 606 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol, const void *
# 607 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
src, ::size_t
# 608 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
count, ::size_t
# 609 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 610 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice)
# 612 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 613 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 614 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 656 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 657 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMemcpyToSymbolAsync(const T &
# 658 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol, const void *
# 659 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
src, ::size_t
# 660 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
count, ::size_t
# 661 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 662 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyHostToDevice, cudaStream_t
# 663 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
stream = 0)
# 665 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 666 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 667 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 702 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 703 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMemcpyFromSymbol(void *
# 704 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dst, const T &
# 705 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol, ::size_t
# 706 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
count, ::size_t
# 707 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 708 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost)
# 710 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 711 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 712 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 754 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 755 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaMemcpyFromSymbolAsync(void *
# 756 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dst, const T &
# 757 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol, ::size_t
# 758 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
count, ::size_t
# 759 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset = 0, cudaMemcpyKind
# 760 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 761 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
stream = 0)
# 763 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 764 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 765 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 787 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 788 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaGetSymbolAddress(void **
# 789 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, const T &
# 790 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol)
# 792 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 793 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 794 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 816 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 817 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaGetSymbolSize(::size_t *
# 818 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size, const T &
# 819 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
symbol)
# 821 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 822 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 823 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 859 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 860 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTexture(::size_t *
# 861 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 862 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, const void *
# 863 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 864 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
desc, ::size_t
# 865 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 867 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 868 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture(offset, &tex, devPtr, &desc, size);
# 869 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 904 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 905 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTexture(::size_t *
# 906 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 907 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, const void *
# 908 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t
# 909 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
size = ((2147483647) * 2U) + 1U)
# 911 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 912 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaBindTexture(offset, tex, devPtr, (tex.channelDesc), size);
# 913 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 960 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 961 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTexture2D(::size_t *
# 962 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 963 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, const void *
# 964 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, const cudaChannelFormatDesc &
# 965 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
desc, ::size_t
# 966 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
width, ::size_t
# 967 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
height, ::size_t
# 968 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
pitch)
# 970 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 971 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &desc, width, height, pitch);
# 972 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1018 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1019 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTexture2D(::size_t *
# 1020 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1021 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, const void *
# 1022 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
devPtr, ::size_t
# 1023 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
width, ::size_t
# 1024 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
height, ::size_t
# 1025 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
pitch)
# 1027 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1028 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindTexture2D(offset, &tex, devPtr, &(tex.channelDesc), width, height, pitch);
# 1029 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1060 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1061 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1062 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, cudaArray_const_t
# 1063 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1064 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
desc)
# 1066 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1067 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindTextureToArray(&tex, array, &desc);
# 1068 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1098 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1099 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTextureToArray(const texture< T, dim, readMode> &
# 1100 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, cudaArray_const_t
# 1101 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
array)
# 1103 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1104 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1105 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1107 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToArray(tex, array, desc) : err;
# 1108 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1139 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1140 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1141 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1142 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
mipmappedArray, const cudaChannelFormatDesc &
# 1143 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
desc)
# 1145 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1146 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindTextureToMipmappedArray(&tex, mipmappedArray, &desc);
# 1147 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1177 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1178 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindTextureToMipmappedArray(const texture< T, dim, readMode> &
# 1179 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex, cudaMipmappedArray_const_t
# 1180 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
mipmappedArray)
# 1182 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1183 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1184 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaArray_t levelArray;
# 1185 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetMipmappedArrayLevel(&levelArray, mipmappedArray, 0);
# 1187 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (err != (cudaSuccess)) {
# 1188 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return err;
# 1189 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1190 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
err = ::cudaGetChannelDesc(&desc, levelArray);
# 1192 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindTextureToMipmappedArray(tex, mipmappedArray, desc) : err;
# 1193 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1216 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1217 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaUnbindTexture(const texture< T, dim, readMode> &
# 1218 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex)
# 1220 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1221 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaUnbindTexture(&tex);
# 1222 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1250 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim, cudaTextureReadMode readMode> static inline cudaError_t
# 1251 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaGetTextureAlignmentOffset(::size_t *
# 1252 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
offset, const texture< T, dim, readMode> &
# 1253 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
tex)
# 1255 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1256 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaGetTextureAlignmentOffset(offset, &tex);
# 1257 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1302 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1303 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaFuncSetCacheConfig(T *
# 1304 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, cudaFuncCache
# 1305 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cacheConfig)
# 1307 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1308 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1309 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1311 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1312 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaFuncSetSharedMemConfig(T *
# 1313 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, cudaSharedMemConfig
# 1314 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
config)
# 1316 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1317 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1318 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1347 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1348 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1349 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
numBlocks, T
# 1350 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, int
# 1351 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, ::size_t
# 1352 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dynamicSMemSize)
# 1353 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1354 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1355 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1398 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1399 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1400 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
numBlocks, T
# 1401 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, int
# 1402 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, ::size_t
# 1403 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dynamicSMemSize, unsigned
# 1404 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags)
# 1405 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1406 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1407 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1412 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
class __cudaOccupancyB2DHelper {
# 1413 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
::size_t n;
# 1415 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
public: __cudaOccupancyB2DHelper(::size_t n_) : n(n_) { }
# 1416 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
::size_t operator()(int)
# 1417 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1418 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return n;
# 1419 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1420 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
};
# 1467 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1468 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1469 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1470 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, T
# 1471 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, UnaryFunction
# 1472 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1473 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1474 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags = 0)
# 1475 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1476 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaError_t status;
# 1479 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int device;
# 1480 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaFuncAttributes attr;
# 1483 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int maxThreadsPerMultiProcessor;
# 1484 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int warpSize;
# 1485 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int devMaxThreadsPerBlock;
# 1486 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int multiProcessorCount;
# 1487 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int funcMaxThreadsPerBlock;
# 1488 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int occupancyLimit;
# 1489 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int granularity;
# 1492 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int maxBlockSize = 0;
# 1493 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int numBlocks = 0;
# 1494 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int maxOccupancy = 0;
# 1497 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int blockSizeToTryAligned;
# 1498 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int blockSizeToTry;
# 1499 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int blockSizeLimitAligned;
# 1500 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int occupancyInBlocks;
# 1501 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
int occupancyInThreads;
# 1502 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
::size_t dynamicSMemSize;
# 1508 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1509 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaErrorInvalidValue;
# 1510 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1516 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = ::cudaGetDevice(&device);
# 1517 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1518 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1519 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1521 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1525 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1526 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1527 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1529 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1533 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1534 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1535 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1537 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1541 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1542 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1543 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1545 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1549 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1550 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1551 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1553 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaFuncGetAttributes(&attr, func);
# 1554 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1555 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1556 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1558 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1564 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
occupancyLimit = maxThreadsPerMultiProcessor;
# 1565 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
granularity = warpSize;
# 1567 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (blockSizeLimit == 0) {
# 1568 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1569 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1571 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1572 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = devMaxThreadsPerBlock;
# 1573 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1575 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1576 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = funcMaxThreadsPerBlock;
# 1577 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1579 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1581 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1585 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (blockSizeLimit < blockSizeToTryAligned) {
# 1586 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeToTry = blockSizeLimit;
# 1587 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
} else {
# 1588 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeToTry = blockSizeToTryAligned;
# 1589 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1591 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1593 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1600 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (status != (cudaSuccess)) {
# 1601 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1602 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1604 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1606 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (occupancyInThreads > maxOccupancy) {
# 1607 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
maxBlockSize = blockSizeToTry;
# 1608 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
numBlocks = occupancyInBlocks;
# 1609 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
maxOccupancy = occupancyInThreads;
# 1610 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1614 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
if (occupancyLimit == maxOccupancy) {
# 1615 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
break;
# 1616 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1617 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1625 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1626 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
(*blockSize) = maxBlockSize;
# 1628 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return status;
# 1629 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1662 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class UnaryFunction, class T> static inline cudaError_t
# 1663 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1664 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1665 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, T
# 1666 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, UnaryFunction
# 1667 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeToDynamicSMemSize, int
# 1668 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0)
# 1669 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1670 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1671 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1707 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1708 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSize(int *
# 1709 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1710 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, T
# 1711 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, ::size_t
# 1712 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1713 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0)
# 1714 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1715 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1716 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1766 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1767 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 1768 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
minGridSize, int *
# 1769 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSize, T
# 1770 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func, ::size_t
# 1771 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
dynamicSMemSize = 0, int
# 1772 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
blockSizeLimit = 0, unsigned
# 1773 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
flags = 0)
# 1774 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1775 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 1776 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1814 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> static inline cudaError_t
# 1815 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaLaunch(T *
# 1816 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
func)
# 1818 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1819 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaLaunch((const void *)func);
# 1820 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1851 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T> inline cudaError_t
# 1852 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaFuncGetAttributes(cudaFuncAttributes *
# 1853 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
attr, T *
# 1854 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
entry)
# 1856 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1857 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 1858 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1880 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 1881 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1882 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1883 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
array, const cudaChannelFormatDesc &
# 1884 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
desc)
# 1886 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1887 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return ::cudaBindSurfaceToArray(&surf, array, &desc);
# 1888 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1909 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
template< class T, int dim> static inline cudaError_t
# 1910 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaBindSurfaceToArray(const surface< T, dim> &
# 1911 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
surf, cudaArray_const_t
# 1912 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
array)
# 1914 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
{
# 1915 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaChannelFormatDesc desc;
# 1916 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
cudaError_t err = ::cudaGetChannelDesc(&desc, array);
# 1918 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
return (err == (cudaSuccess)) ? cudaBindSurfaceToArray(surf, array, desc) : err;
# 1919 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
}
# 1930 "/usr/local/cuda-8.0/bin/..//include/cuda_runtime.h"
#pragma GCC diagnostic pop
# 48 "/usr/include/stdint.h" 3

# 48 "/usr/include/stdint.h" 3
typedef unsigned char uint8_t;
# 49 "/usr/include/stdint.h" 3
typedef unsigned short uint16_t;
# 51 "/usr/include/stdint.h" 3
typedef unsigned uint32_t;
# 55 "/usr/include/stdint.h" 3
typedef unsigned long uint64_t;
# 65 "/usr/include/stdint.h" 3
typedef signed char int_least8_t;
# 66 "/usr/include/stdint.h" 3
typedef short int_least16_t;
# 67 "/usr/include/stdint.h" 3
typedef int int_least32_t;
# 69 "/usr/include/stdint.h" 3
typedef long int_least64_t;
# 76 "/usr/include/stdint.h" 3
typedef unsigned char uint_least8_t;
# 77 "/usr/include/stdint.h" 3
typedef unsigned short uint_least16_t;
# 78 "/usr/include/stdint.h" 3
typedef unsigned uint_least32_t;
# 80 "/usr/include/stdint.h" 3
typedef unsigned long uint_least64_t;
# 90 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 92 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 93 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 94 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 103 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 105 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 106 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 107 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 119 "/usr/include/stdint.h" 3
typedef long intptr_t;
# 122 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 134 "/usr/include/stdint.h" 3
typedef long intmax_t;
# 135 "/usr/include/stdint.h" 3
typedef unsigned long uintmax_t;
# 59 "/usr/local/cuda-8.0/bin/..//include/cuda.h"

# 59 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef uint32_t cuuint32_t;
# 60 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef uint64_t cuuint64_t;
# 211 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
extern "C" {
# 221 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef unsigned long long CUdeviceptr;
# 228 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef int CUdevice;
# 229 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUctx_st *CUcontext;
# 230 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUmod_st *CUmodule;
# 231 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUfunc_st *CUfunction;
# 232 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUarray_st *CUarray;
# 233 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUmipmappedArray_st *CUmipmappedArray;
# 234 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUtexref_st *CUtexref;
# 235 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUsurfref_st *CUsurfref;
# 236 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef CUevent_st *CUevent;
# 237 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef CUstream_st *CUstream;
# 238 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUgraphicsResource_st *CUgraphicsResource;
# 239 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef unsigned long long CUtexObject;
# 240 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef unsigned long long CUsurfObject;
# 244 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 242 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUuuid_st {
# 243 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
char bytes[16];
# 244 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUuuid;
# 259 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 257 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUipcEventHandle_st {
# 258 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
char reserved[64];
# 259 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUipcEventHandle;
# 266 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 264 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUipcMemHandle_st {
# 265 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
char reserved[64];
# 266 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUipcMemHandle;
# 273 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 271 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUipcMem_flags_enum {
# 272 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 273 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUipcMem_flags;
# 284 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 280 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUmemAttach_flags_enum {
# 281 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ATTACH_GLOBAL = 1,
# 282 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ATTACH_HOST,
# 283 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ATTACH_SINGLE = 4
# 284 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUmemAttach_flags;
# 301 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 289 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUctx_flags_enum {
# 290 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_SCHED_AUTO,
# 291 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_SCHED_SPIN,
# 292 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_SCHED_YIELD,
# 293 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 294 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_BLOCKING_SYNC = 4,
# 297 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_SCHED_MASK = 7,
# 298 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_MAP_HOST,
# 299 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 300 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CTX_FLAGS_MASK = 31
# 301 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUctx_flags;
# 309 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 306 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUstream_flags_enum {
# 307 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_DEFAULT,
# 308 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_NON_BLOCKING
# 309 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUstream_flags;
# 339 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 334 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUevent_flags_enum {
# 335 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_EVENT_DEFAULT,
# 336 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_EVENT_BLOCKING_SYNC,
# 337 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_EVENT_DISABLE_TIMING,
# 338 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_EVENT_INTERPROCESS = 4
# 339 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUevent_flags;
# 357 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 345 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUstreamWaitValue_flags_enum {
# 346 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_GEQ,
# 348 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_EQ,
# 349 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_AND,
# 350 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WAIT_VALUE_FLUSH = 1073741824
# 357 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUstreamWaitValue_flags;
# 370 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 362 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUstreamWriteValue_flags_enum {
# 363 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WRITE_VALUE_DEFAULT,
# 364 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER
# 370 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUstreamWriteValue_flags;
# 380 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 375 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUstreamBatchMemOpType_enum {
# 376 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1,
# 377 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_WRITE_VALUE_32,
# 378 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES
# 380 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUstreamBatchMemOpType;
# 412 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 385 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
union CUstreamBatchMemOpParams_union {
# 386 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 387 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUstreamMemOpWaitValueParams_st {
# 388 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 389 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr address;
# 390 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
union {
# 391 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
cuuint32_t value;
# 392 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
cuuint64_t pad;
# 393 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
};
# 394 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned flags;
# 395 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr alias;
# 396 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} waitValue;
# 397 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUstreamMemOpWriteValueParams_st {
# 398 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 399 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr address;
# 400 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
union {
# 401 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
cuuint32_t value;
# 402 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
cuuint64_t pad;
# 403 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
};
# 404 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned flags;
# 405 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr alias;
# 406 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} writeValue;
# 407 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUstreamMemOpFlushRemoteWritesParams_st {
# 408 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUstreamBatchMemOpType operation;
# 409 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned flags;
# 410 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} flushRemoteWrites;
# 411 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
cuuint64_t pad[6];
# 412 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUstreamBatchMemOpParams;
# 421 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 418 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUoccupancy_flags_enum {
# 419 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_OCCUPANCY_DEFAULT,
# 420 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE
# 421 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUoccupancy_flags;
# 435 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 426 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUarray_format_enum {
# 427 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 428 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT16,
# 429 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_UNSIGNED_INT32,
# 430 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 431 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT16,
# 432 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_SIGNED_INT32,
# 433 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_HALF = 16,
# 434 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_AD_FORMAT_FLOAT = 32
# 435 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUarray_format;
# 445 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 440 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUaddress_mode_enum {
# 441 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_WRAP,
# 442 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_CLAMP,
# 443 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_MIRROR,
# 444 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_ADDRESS_MODE_BORDER
# 445 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUaddress_mode;
# 453 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 450 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUfilter_mode_enum {
# 451 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_FILTER_MODE_POINT,
# 452 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TR_FILTER_MODE_LINEAR
# 453 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUfilter_mode;
# 556 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 458 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUdevice_attribute_enum {
# 459 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 460 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 461 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 462 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 463 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 464 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 465 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 466 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 467 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 468 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 469 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 470 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 471 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 472 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 473 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 474 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 475 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 476 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 477 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 478 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 479 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 480 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 481 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 482 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 483 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 484 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 485 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 486 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 487 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 488 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 489 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 490 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 491 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 492 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 493 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 494 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 495 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 496 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 497 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 498 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 499 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 500 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 501 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 502 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 503 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 504 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 505 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 506 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 507 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 508 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 509 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 510 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 511 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 512 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 513 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 514 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 515 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 516 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 517 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 518 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 519 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 520 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 521 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 522 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 523 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 524 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 525 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 526 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 527 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 528 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 529 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 530 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 531 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 532 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 533 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 534 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 535 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH,
# 536 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH,
# 537 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT,
# 538 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR,
# 539 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR,
# 540 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH,
# 541 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED,
# 542 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED,
# 543 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED,
# 544 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR,
# 545 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR,
# 546 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY,
# 547 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD,
# 548 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID,
# 549 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED,
# 550 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO,
# 551 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS,
# 552 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS,
# 553 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED,
# 554 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM,
# 555 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_ATTRIBUTE_MAX
# 556 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUdevice_attribute;
# 572 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 561 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUdevprop_st {
# 562 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int maxThreadsPerBlock;
# 563 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int maxThreadsDim[3];
# 564 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int maxGridSize[3];
# 565 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int sharedMemPerBlock;
# 566 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int totalConstantMemory;
# 567 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int SIMDWidth;
# 568 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int memPitch;
# 569 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int regsPerBlock;
# 570 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int clockRate;
# 571 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int textureAlign;
# 572 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUdevprop;
# 586 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 577 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUpointer_attribute_enum {
# 578 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 579 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 580 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 581 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_HOST_POINTER,
# 582 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_P2P_TOKENS,
# 583 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_SYNC_MEMOPS,
# 584 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_BUFFER_ID,
# 585 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_POINTER_ATTRIBUTE_IS_MANAGED
# 586 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUpointer_attribute;
# 647 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 591 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUfunction_attribute_enum {
# 597 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 604 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 610 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 615 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 620 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 629 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 638 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 644 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 646 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_ATTRIBUTE_MAX
# 647 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUfunction_attribute;
# 657 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 652 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUfunc_cache_enum {
# 653 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_NONE,
# 654 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_SHARED,
# 655 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_L1,
# 656 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_FUNC_CACHE_PREFER_EQUAL
# 657 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUfunc_cache;
# 666 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 662 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUsharedconfig_enum {
# 663 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 664 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 665 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 666 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUsharedconfig;
# 676 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 671 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUmemorytype_enum {
# 672 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEMORYTYPE_HOST = 1,
# 673 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEMORYTYPE_DEVICE,
# 674 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEMORYTYPE_ARRAY,
# 675 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEMORYTYPE_UNIFIED
# 676 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUmemorytype;
# 685 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 681 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUcomputemode_enum {
# 682 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_COMPUTEMODE_DEFAULT,
# 683 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_COMPUTEMODE_PROHIBITED = 2,
# 684 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 685 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUcomputemode;
# 697 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 690 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUmem_advise_enum {
# 691 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_READ_MOSTLY = 1,
# 692 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_READ_MOSTLY,
# 693 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_PREFERRED_LOCATION,
# 694 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_PREFERRED_LOCATION,
# 695 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_SET_ACCESSED_BY,
# 696 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_ADVISE_UNSET_ACCESSED_BY
# 697 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUmem_advise;
# 704 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 699 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUmem_range_attribute_enum {
# 700 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1,
# 701 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION,
# 702 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_ACCESSED_BY,
# 703 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION
# 704 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUmem_range_attribute;
# 848 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 709 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUjit_option_enum {
# 716 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_MAX_REGISTERS,
# 731 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_THREADS_PER_BLOCK,
# 739 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_WALL_TIME,
# 748 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER,
# 757 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 766 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER,
# 775 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 783 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_OPTIMIZATION_LEVEL,
# 791 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_TARGET_FROM_CUCONTEXT,
# 799 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_TARGET,
# 808 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_FALLBACK_STRATEGY,
# 816 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_GENERATE_DEBUG_INFO,
# 823 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_LOG_VERBOSE,
# 830 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_GENERATE_LINE_INFO,
# 838 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_CACHE_MODE,
# 843 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_NEW_SM3X_OPT,
# 844 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_FAST_COMPILE,
# 846 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_NUM_OPTIONS
# 848 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUjit_option;
# 871 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 853 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUjit_target_enum {
# 855 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_10 = 10,
# 856 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_11,
# 857 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_12,
# 858 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_13,
# 859 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_20 = 20,
# 860 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_21,
# 861 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_30 = 30,
# 862 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_32 = 32,
# 863 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_35 = 35,
# 864 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_37 = 37,
# 865 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_50 = 50,
# 866 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_52 = 52,
# 867 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_53,
# 868 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_60 = 60,
# 869 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_61,
# 870 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_TARGET_COMPUTE_62
# 871 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUjit_target;
# 882 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 876 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUjit_fallback_enum {
# 878 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_PREFER_PTX,
# 880 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_PREFER_BINARY
# 882 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUjit_fallback;
# 892 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 887 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUjit_cacheMode_enum {
# 889 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_NONE,
# 890 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_CG,
# 891 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_CACHE_OPTION_CA
# 892 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUjit_cacheMode;
# 930 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 897 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUjitInputType_enum {
# 903 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INPUT_CUBIN,
# 909 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INPUT_PTX,
# 915 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INPUT_FATBINARY,
# 921 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INPUT_OBJECT,
# 927 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_INPUT_LIBRARY,
# 929 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_JIT_NUM_INPUT_TYPES
# 930 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUjitInputType;
# 933 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef struct CUlinkState_st *CUlinkState;
# 945 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 939 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUgraphicsRegisterFlags_enum {
# 940 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 941 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 942 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 943 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 944 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 945 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUgraphicsRegisterFlags;
# 954 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 950 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUgraphicsMapResourceFlags_enum {
# 951 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 952 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 953 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 954 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUgraphicsMapResourceFlags;
# 966 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 959 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUarray_cubemap_face_enum {
# 960 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_X,
# 961 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_X,
# 962 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Y,
# 963 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 964 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_POSITIVE_Z,
# 965 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_CUBEMAP_FACE_NEGATIVE_Z
# 966 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUarray_cubemap_face;
# 978 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 971 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUlimit_enum {
# 972 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_STACK_SIZE,
# 973 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_PRINTF_FIFO_SIZE,
# 974 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_MALLOC_HEAP_SIZE,
# 975 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH,
# 976 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT,
# 977 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_LIMIT_MAX
# 978 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUlimit;
# 988 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 983 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUresourcetype_enum {
# 984 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_ARRAY,
# 985 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY,
# 986 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_LINEAR,
# 987 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RESOURCE_TYPE_PITCH2D
# 988 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUresourcetype;
# 1390 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 993 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum cudaError_enum {
# 999 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_SUCCESS,
# 1005 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_VALUE,
# 1011 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_OUT_OF_MEMORY,
# 1017 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_INITIALIZED,
# 1022 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_DEINITIALIZED,
# 1029 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_DISABLED,
# 1037 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1044 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1051 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1057 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NO_DEVICE = 100,
# 1063 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_DEVICE,
# 1070 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_IMAGE = 200,
# 1080 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_CONTEXT,
# 1089 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 1094 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_MAP_FAILED = 205,
# 1099 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_UNMAP_FAILED,
# 1105 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ARRAY_IS_MAPPED,
# 1110 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ALREADY_MAPPED,
# 1118 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 1123 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ALREADY_ACQUIRED,
# 1128 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED,
# 1134 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 1140 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 1146 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ECC_UNCORRECTABLE,
# 1152 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 1159 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 1165 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 1170 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_PTX,
# 1175 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 1181 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 1186 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_SOURCE = 300,
# 1191 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_FILE_NOT_FOUND,
# 1196 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 1201 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 1206 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_OPERATING_SYSTEM,
# 1212 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_HANDLE = 400,
# 1218 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_FOUND = 500,
# 1226 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_READY = 600,
# 1235 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 1246 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 1257 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_TIMEOUT,
# 1263 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 1270 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 1277 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 1283 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 1290 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 1298 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ASSERT,
# 1305 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_TOO_MANY_PEERS,
# 1311 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 1317 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 1326 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 1334 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 1343 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_MISALIGNED_ADDRESS,
# 1354 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 1362 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_INVALID_PC,
# 1372 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_LAUNCH_FAILED,
# 1378 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_PERMITTED = 800,
# 1384 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_NOT_SUPPORTED,
# 1389 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUDA_ERROR_UNKNOWN = 999
# 1390 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUresult;
# 1399 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1395 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUdevice_P2PAttribute_enum {
# 1396 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 1,
# 1397 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED,
# 1398 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_DEVICE_P2P_ATTRIBUTE_NATIVE_ATOMIC_SUPPORTED
# 1399 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUdevice_P2PAttribute;
# 1413 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void * userData);
# 1421 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef ::size_t (*CUoccupancyB2DSize)(int blockSize);
# 1497 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1476 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_MEMCPY2D_st {
# 1477 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcXInBytes;
# 1478 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcY;
# 1480 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1481 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
const void *srcHost;
# 1482 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1483 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray srcArray;
# 1484 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcPitch;
# 1486 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstXInBytes;
# 1487 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstY;
# 1489 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1490 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
void *dstHost;
# 1491 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1492 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray dstArray;
# 1493 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstPitch;
# 1495 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t WidthInBytes;
# 1496 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Height;
# 1497 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_MEMCPY2D;
# 1530 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1502 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_MEMCPY3D_st {
# 1503 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcXInBytes;
# 1504 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcY;
# 1505 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcZ;
# 1506 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcLOD;
# 1507 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1508 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
const void *srcHost;
# 1509 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1510 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray srcArray;
# 1511 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
void *reserved0;
# 1512 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcPitch;
# 1513 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcHeight;
# 1515 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstXInBytes;
# 1516 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstY;
# 1517 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstZ;
# 1518 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstLOD;
# 1519 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1520 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
void *dstHost;
# 1521 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1522 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray dstArray;
# 1523 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
void *reserved1;
# 1524 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstPitch;
# 1525 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstHeight;
# 1527 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t WidthInBytes;
# 1528 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Height;
# 1529 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Depth;
# 1530 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_MEMCPY3D;
# 1563 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1535 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_MEMCPY3D_PEER_st {
# 1536 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcXInBytes;
# 1537 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcY;
# 1538 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcZ;
# 1539 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcLOD;
# 1540 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype srcMemoryType;
# 1541 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
const void *srcHost;
# 1542 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr srcDevice;
# 1543 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray srcArray;
# 1544 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUcontext srcContext;
# 1545 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcPitch;
# 1546 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t srcHeight;
# 1548 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstXInBytes;
# 1549 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstY;
# 1550 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstZ;
# 1551 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstLOD;
# 1552 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmemorytype dstMemoryType;
# 1553 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
void *dstHost;
# 1554 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr dstDevice;
# 1555 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray dstArray;
# 1556 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUcontext dstContext;
# 1557 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstPitch;
# 1558 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t dstHeight;
# 1560 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t WidthInBytes;
# 1561 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Height;
# 1562 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Depth;
# 1563 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_MEMCPY3D_PEER;
# 1575 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1568 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_ARRAY_DESCRIPTOR_st {
# 1570 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Width;
# 1571 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Height;
# 1573 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray_format Format;
# 1574 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned NumChannels;
# 1575 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_ARRAY_DESCRIPTOR;
# 1589 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1580 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 1582 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Width;
# 1583 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Height;
# 1584 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t Depth;
# 1586 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray_format Format;
# 1587 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned NumChannels;
# 1588 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned Flags;
# 1589 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_ARRAY3D_DESCRIPTOR;
# 1629 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1598 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_RESOURCE_DESC_st {
# 1600 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresourcetype resType;
# 1602 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
union {
# 1603 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct {
# 1604 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray hArray;
# 1605 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} array;
# 1606 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct {
# 1607 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUmipmappedArray hMipmappedArray;
# 1608 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} mipmap;
# 1609 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct {
# 1610 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr devPtr;
# 1611 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray_format format;
# 1612 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned numChannels;
# 1613 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t sizeInBytes;
# 1614 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} linear;
# 1615 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct {
# 1616 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUdeviceptr devPtr;
# 1617 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUarray_format format;
# 1618 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned numChannels;
# 1619 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t width;
# 1620 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t height;
# 1621 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t pitchInBytes;
# 1622 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} pitch2D;
# 1623 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct {
# 1624 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int reserved[32];
# 1625 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} reserved;
# 1626 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} res;
# 1628 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned flags;
# 1629 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_RESOURCE_DESC;
# 1645 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1634 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_TEXTURE_DESC_st {
# 1635 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUaddress_mode addressMode[3];
# 1636 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUfilter_mode filterMode;
# 1637 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned flags;
# 1638 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned maxAnisotropy;
# 1639 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUfilter_mode mipmapFilterMode;
# 1640 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
float mipmapLevelBias;
# 1641 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
float minMipmapLevelClamp;
# 1642 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
float maxMipmapLevelClamp;
# 1643 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
float borderColor[4];
# 1644 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
int reserved[12];
# 1645 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_TEXTURE_DESC;
# 1687 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1650 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
enum CUresourceViewFormat_enum {
# 1652 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_NONE,
# 1653 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X8,
# 1654 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X8,
# 1655 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X8,
# 1656 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X8,
# 1657 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X8,
# 1658 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X8,
# 1659 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X16,
# 1660 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X16,
# 1661 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X16,
# 1662 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X16,
# 1663 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X16,
# 1664 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X16,
# 1665 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_1X32,
# 1666 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_2X32,
# 1667 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UINT_4X32,
# 1668 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_1X32,
# 1669 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_2X32,
# 1670 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SINT_4X32,
# 1671 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X16,
# 1672 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X16,
# 1673 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X16,
# 1674 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_1X32,
# 1675 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_2X32,
# 1676 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_FLOAT_4X32,
# 1677 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC1,
# 1678 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC2,
# 1679 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC3,
# 1680 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC4,
# 1681 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC4,
# 1682 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC5,
# 1683 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC5,
# 1684 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H,
# 1685 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_SIGNED_BC6H,
# 1686 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
# 1687 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUresourceViewFormat;
# 1703 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1692 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_RESOURCE_VIEW_DESC_st {
# 1694 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresourceViewFormat format;
# 1695 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t width;
# 1696 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t height;
# 1697 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
::size_t depth;
# 1698 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned firstMipmapLevel;
# 1699 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned lastMipmapLevel;
# 1700 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned firstLayer;
# 1701 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned lastLayer;
# 1702 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned reserved[16];
# 1703 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_RESOURCE_VIEW_DESC;
# 1711 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
typedef
# 1708 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
# 1709 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned long long p2pToken;
# 1710 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
unsigned vaSpaceToken;
# 1711 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS;
# 1858 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGetErrorString(CUresult error, const char ** pStr);
# 1877 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGetErrorName(CUresult error, const char ** pStr);
# 1909 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuInit(unsigned Flags);
# 1939 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDriverGetVersion(int * driverVersion);
# 1979 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGet(CUdevice * device, int ordinal);
# 2004 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetCount(int * count);
# 2032 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetName(char * name, int len, CUdevice dev);
# 2059 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceTotalMem_v2(::size_t * bytes, CUdevice dev);
# 2254 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev);
# 2331 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetProperties(CUdevprop * prop, CUdevice dev);
# 2364 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceComputeCapability(int * major, int * minor, CUdevice dev);
# 2432 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxRetain(CUcontext * pctx, CUdevice dev);
# 2466 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxRelease(CUdevice dev);
# 2529 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxSetFlags(CUdevice dev, unsigned flags);
# 2553 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned * flags, int * active);
# 2591 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDevicePrimaryCtxReset(CUdevice dev);
# 2697 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxCreate_v2(CUcontext * pctx, unsigned flags, CUdevice dev);
# 2737 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxDestroy_v2(CUcontext ctx);
# 2773 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxPushCurrent_v2(CUcontext ctx);
# 2807 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxPopCurrent_v2(CUcontext * pctx);
# 2833 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxSetCurrent(CUcontext ctx);
# 2852 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetCurrent(CUcontext * pctx);
# 2882 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetDevice(CUdevice * device);
# 2910 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetFlags(unsigned * flags);
# 2940 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxSynchronize();
# 3035 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxSetLimit(CUlimit limit, ::size_t value);
# 3074 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetLimit(::size_t * pvalue, CUlimit limit);
# 3117 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetCacheConfig(CUfunc_cache * pconfig);
# 3167 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxSetCacheConfig(CUfunc_cache config);
# 3209 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetSharedMemConfig(CUsharedconfig * pConfig);
# 3261 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxSetSharedMemConfig(CUsharedconfig config);
# 3299 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned * version);
# 3338 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 3393 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxAttach(CUcontext * pctx, unsigned flags);
# 3429 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxDetach(CUcontext ctx);
# 3483 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleLoad(CUmodule * module, const char * fname);
# 3519 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleLoadData(CUmodule * module, const void * image);
# 3561 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleLoadDataEx(CUmodule * module, const void * image, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3602 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleLoadFatBinary(CUmodule * module, const void * fatCubin);
# 3627 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleUnload(CUmodule hmod);
# 3657 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, const char * name);
# 3691 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleGetGlobal_v2(CUdeviceptr * dptr, ::size_t * bytes, CUmodule hmod, const char * name);
# 3725 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, const char * name);
# 3756 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuModuleGetSurfRef(CUsurfref * pSurfRef, CUmodule hmod, const char * name);
# 3798 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLinkCreate_v2(unsigned numOptions, CUjit_option * options, void ** optionValues, CUlinkState * stateOut);
# 3835 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLinkAddData_v2(CUlinkState state, CUjitInputType type, void * data, ::size_t size, const char * name, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3874 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLinkAddFile_v2(CUlinkState state, CUjitInputType type, const char * path, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 3901 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLinkComplete(CUlinkState state, void ** cubinOut, ::size_t * sizeOut);
# 3915 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLinkDestroy(CUlinkState state);
# 3963 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemGetInfo_v2(::size_t * free, ::size_t * total);
# 3996 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemAlloc_v2(CUdeviceptr * dptr, ::size_t bytesize);
# 4057 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemAllocPitch_v2(CUdeviceptr * dptr, ::size_t * pPitch, ::size_t WidthInBytes, ::size_t Height, unsigned ElementSizeBytes);
# 4086 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemFree_v2(CUdeviceptr dptr);
# 4119 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemGetAddressRange_v2(CUdeviceptr * pbase, ::size_t * psize, CUdeviceptr dptr);
# 4165 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemAllocHost_v2(void ** pp, ::size_t bytesize);
# 4195 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemFreeHost(void * p);
# 4277 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemHostAlloc(void ** pp, ::size_t bytesize, unsigned Flags);
# 4330 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * pdptr, void * p, unsigned Flags);
# 4355 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemHostGetFlags(unsigned * pFlags, void * p);
# 4465 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemAllocManaged(CUdeviceptr * dptr, ::size_t bytesize, unsigned flags);
# 4494 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetByPCIBusId(CUdevice * dev, const char * pciBusId);
# 4522 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetPCIBusId(char * pciBusId, int len, CUdevice dev);
# 4564 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuIpcGetEventHandle(CUipcEventHandle * pHandle, CUevent event);
# 4601 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuIpcOpenEventHandle(CUevent * phEvent, CUipcEventHandle handle);
# 4638 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuIpcGetMemHandle(CUipcMemHandle * pHandle, CUdeviceptr dptr);
# 4689 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuIpcOpenMemHandle(CUdeviceptr * pdptr, CUipcMemHandle handle, unsigned Flags);
# 4720 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuIpcCloseMemHandle(CUdeviceptr dptr);
# 4803 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemHostRegister_v2(void * p, ::size_t bytesize, unsigned Flags);
# 4827 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemHostUnregister(void * p);
# 4863 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, ::size_t ByteCount);
# 4892 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, ::size_t ByteCount);
# 4928 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyHtoD_v2(CUdeviceptr dstDevice, const void * srcHost, ::size_t ByteCount);
# 4961 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyDtoH_v2(void * dstHost, CUdeviceptr srcDevice, ::size_t ByteCount);
# 4994 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyDtoD_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, ::size_t ByteCount);
# 5029 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyDtoA_v2(CUarray dstArray, ::size_t dstOffset, CUdeviceptr srcDevice, ::size_t ByteCount);
# 5066 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyAtoD_v2(CUdeviceptr dstDevice, CUarray srcArray, ::size_t srcOffset, ::size_t ByteCount);
# 5101 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyHtoA_v2(CUarray dstArray, ::size_t dstOffset, const void * srcHost, ::size_t ByteCount);
# 5136 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyAtoH_v2(void * dstHost, CUarray srcArray, ::size_t srcOffset, ::size_t ByteCount);
# 5175 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyAtoA_v2(CUarray dstArray, ::size_t dstOffset, CUarray srcArray, ::size_t srcOffset, ::size_t ByteCount);
# 5336 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * pCopy);
# 5495 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * pCopy);
# 5663 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * pCopy);
# 5688 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * pCopy);
# 5728 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, ::size_t ByteCount, CUstream hStream);
# 5759 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, ::size_t ByteCount, CUstream hStream);
# 5798 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr dstDevice, const void * srcHost, ::size_t ByteCount, CUstream hStream);
# 5835 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyDtoHAsync_v2(void * dstHost, CUdeviceptr srcDevice, ::size_t ByteCount, CUstream hStream);
# 5872 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, ::size_t ByteCount, CUstream hStream);
# 5911 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyHtoAAsync_v2(CUarray dstArray, ::size_t dstOffset, const void * srcHost, ::size_t ByteCount, CUstream hStream);
# 5950 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpyAtoHAsync_v2(void * dstHost, CUarray srcArray, ::size_t srcOffset, ::size_t ByteCount, CUstream hStream);
# 6115 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * pCopy, CUstream hStream);
# 6287 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * pCopy, CUstream hStream);
# 6314 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * pCopy, CUstream hStream);
# 6350 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD8_v2(CUdeviceptr dstDevice, unsigned char uc, ::size_t N);
# 6384 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD16_v2(CUdeviceptr dstDevice, unsigned short us, ::size_t N);
# 6418 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD32_v2(CUdeviceptr dstDevice, unsigned ui, ::size_t N);
# 6457 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D8_v2(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned char uc, ::size_t Width, ::size_t Height);
# 6497 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D16_v2(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned short us, ::size_t Width, ::size_t Height);
# 6537 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D32_v2(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned ui, ::size_t Width, ::size_t Height);
# 6573 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, ::size_t N, CUstream hStream);
# 6609 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, ::size_t N, CUstream hStream);
# 6644 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned ui, ::size_t N, CUstream hStream);
# 6685 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned char uc, ::size_t Width, ::size_t Height, CUstream hStream);
# 6727 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned short us, ::size_t Width, ::size_t Height, CUstream hStream);
# 6769 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, ::size_t dstPitch, unsigned ui, ::size_t Width, ::size_t Height, CUstream hStream);
# 6872 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuArrayCreate_v2(CUarray * pHandle, const CUDA_ARRAY_DESCRIPTOR * pAllocateArray);
# 6905 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 6936 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuArrayDestroy(CUarray hArray);
# 7116 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuArray3DCreate_v2(CUarray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pAllocateArray);
# 7152 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 7279 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMipmappedArrayCreate(CUmipmappedArray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned numMipmapLevels);
# 7305 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMipmappedArrayGetLevel(CUarray * pLevelArray, CUmipmappedArray hMipmappedArray, unsigned level);
# 7325 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray);
# 7571 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuPointerGetAttribute(void * data, CUpointer_attribute attribute, CUdeviceptr ptr);
# 7640 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, ::size_t count, CUdevice dstDevice, CUstream hStream);
# 7726 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemAdvise(CUdeviceptr devPtr, ::size_t count, CUmem_advise advice, CUdevice device);
# 7783 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemRangeGetAttribute(void * data, ::size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, ::size_t count);
# 7822 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuMemRangeGetAttributes(void ** data, ::size_t * dataSizes, CUmem_range_attribute * attributes, ::size_t numAttributes, CUdeviceptr devPtr, ::size_t count);
# 7866 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuPointerSetAttribute(const void * value, CUpointer_attribute attribute, CUdeviceptr ptr);
# 7908 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuPointerGetAttributes(unsigned numAttributes, CUpointer_attribute * attributes, void ** data, CUdeviceptr ptr);
# 7956 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamCreate(CUstream * phStream, unsigned Flags);
# 8004 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamCreateWithPriority(CUstream * phStream, unsigned flags, int priority);
# 8034 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamGetPriority(CUstream hStream, int * priority);
# 8061 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamGetFlags(CUstream hStream, unsigned * flags);
# 8102 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned Flags);
# 8173 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void * userData, unsigned flags);
# 8252 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, ::size_t length, unsigned flags);
# 8283 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamQuery(CUstream hStream);
# 8310 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamSynchronize(CUstream hStream);
# 8339 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamDestroy_v2(CUstream hStream);
# 8394 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventCreate(CUevent * phEvent, unsigned Flags);
# 8430 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventRecord(CUevent hEvent, CUstream hStream);
# 8464 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventQuery(CUevent hEvent);
# 8498 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventSynchronize(CUevent hEvent);
# 8527 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventDestroy_v2(CUevent hEvent);
# 8571 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd);
# 8606 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamWaitValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 8639 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamWriteValue32(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 8671 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuStreamBatchMemOp(CUstream stream, unsigned count, CUstreamBatchMemOpParams * paramArray, unsigned flags);
# 8739 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuFuncGetAttribute(int * pi, CUfunction_attribute attrib, CUfunction hfunc);
# 8782 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config);
# 8834 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config);
# 8948 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLaunchKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams, void ** extra);
# 9009 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z);
# 9043 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned bytes);
# 9075 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuParamSetSize(CUfunction hfunc, unsigned numbytes);
# 9108 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned value);
# 9141 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuParamSetf(CUfunction hfunc, int offset, float value);
# 9176 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned numbytes);
# 9213 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLaunch(CUfunction f);
# 9252 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height);
# 9299 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream);
# 9324 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef);
# 9362 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, CUfunction func, int blockSize, ::size_t dynamicSMemSize);
# 9402 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, CUfunction func, int blockSize, ::size_t dynamicSMemSize, unsigned flags);
# 9452 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSize(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, ::size_t dynamicSMemSize, int blockSizeLimit);
# 9496 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, ::size_t dynamicSMemSize, int blockSizeLimit, unsigned flags);
# 9539 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned Flags);
# 9566 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned Flags);
# 9610 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetAddress_v2(::size_t * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, ::size_t bytes);
# 9662 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetAddress2D_v3(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR * desc, CUdeviceptr dptr, ::size_t Pitch);
# 9691 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents);
# 9731 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am);
# 9764 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 9797 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 9823 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias);
# 9851 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp);
# 9877 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned maxAniso);
# 9907 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float * pBorderColor);
# 9942 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned Flags);
# 9968 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetAddress_v2(CUdeviceptr * pdptr, CUtexref hTexRef);
# 9994 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef);
# 10019 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmappedArray(CUmipmappedArray * phMipmappedArray, CUtexref hTexRef);
# 10045 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim);
# 10069 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 10095 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef);
# 10119 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 10143 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapLevelBias(float * pbias, CUtexref hTexRef);
# 10168 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, CUtexref hTexRef);
# 10192 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetMaxAnisotropy(int * pmaxAniso, CUtexref hTexRef);
# 10219 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetBorderColor(float * pBorderColor, CUtexref hTexRef);
# 10242 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefGetFlags(unsigned * pFlags, CUtexref hTexRef);
# 10281 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefCreate(CUtexref * pTexRef);
# 10301 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexRefDestroy(CUtexref hTexRef);
# 10340 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned Flags);
# 10361 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuSurfRefGetArray(CUarray * phArray, CUsurfref hSurfRef);
# 10583 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexObjectCreate(CUtexObject * pTexObject, const CUDA_RESOURCE_DESC * pResDesc, const CUDA_TEXTURE_DESC * pTexDesc, const CUDA_RESOURCE_VIEW_DESC * pResViewDesc);
# 10601 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexObjectDestroy(CUtexObject texObject);
# 10620 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUtexObject texObject);
# 10639 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * pTexDesc, CUtexObject texObject);
# 10659 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * pResViewDesc, CUtexObject texObject);
# 10700 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuSurfObjectCreate(CUsurfObject * pSurfObject, const CUDA_RESOURCE_DESC * pResDesc);
# 10718 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuSurfObjectDestroy(CUsurfObject surfObject);
# 10737 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUsurfObject surfObject);
# 10779 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceCanAccessPeer(int * canAccessPeer, CUdevice dev, CUdevice peerDev);
# 10816 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuDeviceGetP2PAttribute(int * value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice);
# 10865 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned Flags);
# 10890 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuCtxDisablePeerAccess(CUcontext peerContext);
# 10934 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource);
# 10972 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsSubResourceGetMappedArray(CUarray * pArray, CUgraphicsResource resource, unsigned arrayIndex, unsigned mipLevel);
# 11003 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * pMipmappedArray, CUgraphicsResource resource);
# 11039 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * pDevPtr, ::size_t * pSize, CUgraphicsResource resource);
# 11080 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsResourceSetMapFlags_v2(CUgraphicsResource resource, unsigned flags);
# 11119 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsMapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 11155 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGraphicsUnmapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 11159 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
CUresult cuGetExportTable(const void ** ppExportTable, const CUuuid * pExportTableId);
# 11478 "/usr/local/cuda-8.0/bin/..//include/cuda.h"
}
# 29 "/usr/include/stdio.h" 3

# 29 "/usr/include/stdio.h" 3
extern "C" {
# 44 "/usr/include/stdio.h" 3
struct _IO_FILE;
# 48 "/usr/include/stdio.h" 3
typedef _IO_FILE FILE;
# 64 "/usr/include/stdio.h" 3
typedef _IO_FILE __FILE;
# 94 "/usr/include/wchar.h" 3
typedef
# 83 "/usr/include/wchar.h" 3
struct {
# 84 "/usr/include/wchar.h" 3
int __count;
# 86 "/usr/include/wchar.h" 3
union {
# 88 "/usr/include/wchar.h" 3
unsigned __wch;
# 92 "/usr/include/wchar.h" 3
char __wchb[4];
# 93 "/usr/include/wchar.h" 3
} __value;
# 94 "/usr/include/wchar.h" 3
} __mbstate_t;
# 25 "/usr/include/_G_config.h" 3
typedef
# 22 "/usr/include/_G_config.h" 3
struct {
# 23 "/usr/include/_G_config.h" 3
__off_t __pos;
# 24 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 25 "/usr/include/_G_config.h" 3
} _G_fpos_t;
# 30 "/usr/include/_G_config.h" 3
typedef
# 27 "/usr/include/_G_config.h" 3
struct {
# 28 "/usr/include/_G_config.h" 3
__off64_t __pos;
# 29 "/usr/include/_G_config.h" 3
__mbstate_t __state;
# 30 "/usr/include/_G_config.h" 3
} _G_fpos64_t;
# 40 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 144 "/usr/include/libio.h" 3
struct _IO_jump_t; struct _IO_FILE;
# 150 "/usr/include/libio.h" 3
typedef void _IO_lock_t;
# 156 "/usr/include/libio.h" 3
struct _IO_marker {
# 157 "/usr/include/libio.h" 3
_IO_marker *_next;
# 158 "/usr/include/libio.h" 3
_IO_FILE *_sbuf;
# 162 "/usr/include/libio.h" 3
int _pos;
# 173 "/usr/include/libio.h" 3
};
# 176 "/usr/include/libio.h" 3
enum __codecvt_result {
# 178 "/usr/include/libio.h" 3
__codecvt_ok,
# 179 "/usr/include/libio.h" 3
__codecvt_partial,
# 180 "/usr/include/libio.h" 3
__codecvt_error,
# 181 "/usr/include/libio.h" 3
__codecvt_noconv
# 182 "/usr/include/libio.h" 3
};
# 241 "/usr/include/libio.h" 3
struct _IO_FILE {
# 242 "/usr/include/libio.h" 3
int _flags;
# 247 "/usr/include/libio.h" 3
char *_IO_read_ptr;
# 248 "/usr/include/libio.h" 3
char *_IO_read_end;
# 249 "/usr/include/libio.h" 3
char *_IO_read_base;
# 250 "/usr/include/libio.h" 3
char *_IO_write_base;
# 251 "/usr/include/libio.h" 3
char *_IO_write_ptr;
# 252 "/usr/include/libio.h" 3
char *_IO_write_end;
# 253 "/usr/include/libio.h" 3
char *_IO_buf_base;
# 254 "/usr/include/libio.h" 3
char *_IO_buf_end;
# 256 "/usr/include/libio.h" 3
char *_IO_save_base;
# 257 "/usr/include/libio.h" 3
char *_IO_backup_base;
# 258 "/usr/include/libio.h" 3
char *_IO_save_end;
# 260 "/usr/include/libio.h" 3
_IO_marker *_markers;
# 262 "/usr/include/libio.h" 3
_IO_FILE *_chain;
# 264 "/usr/include/libio.h" 3
int _fileno;
# 268 "/usr/include/libio.h" 3
int _flags2;
# 270 "/usr/include/libio.h" 3
__off_t _old_offset;
# 274 "/usr/include/libio.h" 3
unsigned short _cur_column;
# 275 "/usr/include/libio.h" 3
signed char _vtable_offset;
# 276 "/usr/include/libio.h" 3
char _shortbuf[1];
# 280 "/usr/include/libio.h" 3
_IO_lock_t *_lock;
# 289 "/usr/include/libio.h" 3
__off64_t _offset;
# 297 "/usr/include/libio.h" 3
void *__pad1;
# 298 "/usr/include/libio.h" 3
void *__pad2;
# 299 "/usr/include/libio.h" 3
void *__pad3;
# 300 "/usr/include/libio.h" 3
void *__pad4;
# 302 "/usr/include/libio.h" 3
::size_t __pad5;
# 303 "/usr/include/libio.h" 3
int _mode;
# 305 "/usr/include/libio.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(::size_t)];
# 307 "/usr/include/libio.h" 3
};
# 313 "/usr/include/libio.h" 3
struct _IO_FILE_plus;
# 315 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdin_;
# 316 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stdout_;
# 317 "/usr/include/libio.h" 3
extern _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/usr/include/libio.h" 3
typedef __ssize_t __io_read_fn(void * __cookie, char * __buf, ::size_t __nbytes);
# 341 "/usr/include/libio.h" 3
typedef __ssize_t __io_write_fn(void * __cookie, const char * __buf, ::size_t __n);
# 350 "/usr/include/libio.h" 3
typedef int __io_seek_fn(void * __cookie, __off64_t * __pos, int __w);
# 353 "/usr/include/libio.h" 3
typedef int __io_close_fn(void * __cookie);
# 358 "/usr/include/libio.h" 3
typedef __io_read_fn cookie_read_function_t;
# 359 "/usr/include/libio.h" 3
typedef __io_write_fn cookie_write_function_t;
# 360 "/usr/include/libio.h" 3
typedef __io_seek_fn cookie_seek_function_t;
# 361 "/usr/include/libio.h" 3
typedef __io_close_fn cookie_close_function_t;
# 370 "/usr/include/libio.h" 3
typedef
# 365 "/usr/include/libio.h" 3
struct {
# 366 "/usr/include/libio.h" 3
__io_read_fn *read;
# 367 "/usr/include/libio.h" 3
__io_write_fn *write;
# 368 "/usr/include/libio.h" 3
__io_seek_fn *seek;
# 369 "/usr/include/libio.h" 3
__io_close_fn *close;
# 370 "/usr/include/libio.h" 3
} _IO_cookie_io_functions_t;
# 371 "/usr/include/libio.h" 3
typedef _IO_cookie_io_functions_t cookie_io_functions_t;
# 373 "/usr/include/libio.h" 3
struct _IO_cookie_file;
# 376 "/usr/include/libio.h" 3
extern void _IO_cookie_init(_IO_cookie_file * __cfile, int __read_write, void * __cookie, _IO_cookie_io_functions_t __fns);
# 382 "/usr/include/libio.h" 3
extern "C" {
# 385 "/usr/include/libio.h" 3
extern int __underflow(_IO_FILE *);
# 386 "/usr/include/libio.h" 3
extern int __uflow(_IO_FILE *);
# 387 "/usr/include/libio.h" 3
extern int __overflow(_IO_FILE *, int);
# 429 "/usr/include/libio.h" 3
extern int _IO_getc(_IO_FILE * __fp);
# 430 "/usr/include/libio.h" 3
extern int _IO_putc(int __c, _IO_FILE * __fp);
# 431 "/usr/include/libio.h" 3
extern int _IO_feof(_IO_FILE * __fp) throw();
# 432 "/usr/include/libio.h" 3
extern int _IO_ferror(_IO_FILE * __fp) throw();
# 434 "/usr/include/libio.h" 3
extern int _IO_peekc_locked(_IO_FILE * __fp);
# 440 "/usr/include/libio.h" 3
extern void _IO_flockfile(_IO_FILE *) throw();
# 441 "/usr/include/libio.h" 3
extern void _IO_funlockfile(_IO_FILE *) throw();
# 442 "/usr/include/libio.h" 3
extern int _IO_ftrylockfile(_IO_FILE *) throw();
# 459 "/usr/include/libio.h" 3
extern int _IO_vfscanf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list, int *__restrict__);
# 461 "/usr/include/libio.h" 3
extern int _IO_vfprintf(_IO_FILE *__restrict__, const char *__restrict__, __gnuc_va_list);
# 463 "/usr/include/libio.h" 3
extern __ssize_t _IO_padn(_IO_FILE *, int, __ssize_t);
# 464 "/usr/include/libio.h" 3
extern ::size_t _IO_sgetn(_IO_FILE *, void *, ::size_t);
# 466 "/usr/include/libio.h" 3
extern __off64_t _IO_seekoff(_IO_FILE *, __off64_t, int, int);
# 467 "/usr/include/libio.h" 3
extern __off64_t _IO_seekpos(_IO_FILE *, __off64_t, int);
# 469 "/usr/include/libio.h" 3
extern void _IO_free_backup_area(_IO_FILE *) throw();
# 521 "/usr/include/libio.h" 3
}
# 79 "/usr/include/stdio.h" 3
typedef __gnuc_va_list va_list;
# 110 "/usr/include/stdio.h" 3
typedef _G_fpos_t fpos_t;
# 116 "/usr/include/stdio.h" 3
typedef _G_fpos64_t fpos64_t;
# 168 "/usr/include/stdio.h" 3
extern _IO_FILE *stdin;
# 169 "/usr/include/stdio.h" 3
extern _IO_FILE *stdout;
# 170 "/usr/include/stdio.h" 3
extern _IO_FILE *stderr;
# 178 "/usr/include/stdio.h" 3
extern int remove(const char * __filename) throw();
# 180 "/usr/include/stdio.h" 3
extern int rename(const char * __old, const char * __new) throw();
# 185 "/usr/include/stdio.h" 3
extern int renameat(int __oldfd, const char * __old, int __newfd, const char * __new) throw();
# 195 "/usr/include/stdio.h" 3
extern FILE *tmpfile();
# 205 "/usr/include/stdio.h" 3
extern FILE *tmpfile64();
# 209 "/usr/include/stdio.h" 3
extern char *tmpnam(char * __s) throw();
# 215 "/usr/include/stdio.h" 3
extern char *tmpnam_r(char * __s) throw();
# 227 "/usr/include/stdio.h" 3
extern char *tempnam(const char * __dir, const char * __pfx) throw()
# 228 "/usr/include/stdio.h" 3
 __attribute((__malloc__));
# 237 "/usr/include/stdio.h" 3
extern int fclose(FILE * __stream);
# 242 "/usr/include/stdio.h" 3
extern int fflush(FILE * __stream);
# 252 "/usr/include/stdio.h" 3
extern int fflush_unlocked(FILE * __stream);
# 262 "/usr/include/stdio.h" 3
extern int fcloseall();
# 272 "/usr/include/stdio.h" 3
extern FILE *fopen(const char *__restrict__ __filename, const char *__restrict__ __modes);
# 278 "/usr/include/stdio.h" 3
extern FILE *freopen(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream);
# 297 "/usr/include/stdio.h" 3
extern FILE *fopen64(const char *__restrict__ __filename, const char *__restrict__ __modes);
# 299 "/usr/include/stdio.h" 3
extern FILE *freopen64(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream);
# 306 "/usr/include/stdio.h" 3
extern FILE *fdopen(int __fd, const char * __modes) throw();
# 312 "/usr/include/stdio.h" 3
extern FILE *fopencookie(void *__restrict__ __magic_cookie, const char *__restrict__ __modes, _IO_cookie_io_functions_t __io_funcs) throw();
# 319 "/usr/include/stdio.h" 3
extern FILE *fmemopen(void * __s, ::size_t __len, const char * __modes) throw();
# 325 "/usr/include/stdio.h" 3
extern FILE *open_memstream(char ** __bufloc, ::size_t * __sizeloc) throw();
# 332 "/usr/include/stdio.h" 3
extern void setbuf(FILE *__restrict__ __stream, char *__restrict__ __buf) throw();
# 336 "/usr/include/stdio.h" 3
extern int setvbuf(FILE *__restrict__ __stream, char *__restrict__ __buf, int __modes, ::size_t __n) throw();
# 343 "/usr/include/stdio.h" 3
extern void setbuffer(FILE *__restrict__ __stream, char *__restrict__ __buf, ::size_t __size) throw();
# 347 "/usr/include/stdio.h" 3
extern void setlinebuf(FILE * __stream) throw();
# 356 "/usr/include/stdio.h" 3
extern int fprintf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 362 "/usr/include/stdio.h" 3
extern int printf(const char *__restrict__ __format, ...);
# 364 "/usr/include/stdio.h" 3
extern int sprintf(char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 371 "/usr/include/stdio.h" 3
extern int vfprintf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg);
# 377 "/usr/include/stdio.h" 3
extern int vprintf(const char *__restrict__ __format, __gnuc_va_list __arg);
# 379 "/usr/include/stdio.h" 3
extern int vsprintf(char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw();
# 386 "/usr/include/stdio.h" 3
extern int snprintf(char *__restrict__ __s, ::size_t __maxlen, const char *__restrict__ __format, ...) throw()
# 388 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 390 "/usr/include/stdio.h" 3
extern int vsnprintf(char *__restrict__ __s, ::size_t __maxlen, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 392 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 399 "/usr/include/stdio.h" 3
extern int vasprintf(char **__restrict__ __ptr, const char *__restrict__ __f, __gnuc_va_list __arg) throw()
# 401 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 402 "/usr/include/stdio.h" 3
extern int __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 404 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 405 "/usr/include/stdio.h" 3
extern int asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) throw()
# 407 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 412 "/usr/include/stdio.h" 3
extern int vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 414 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 415 "/usr/include/stdio.h" 3
extern int dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 416 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 425 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...);
# 431 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...);
# 433 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) throw();
# 471 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg)
# 473 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 479 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg)
# 480 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 483 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) throw()
# 485 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 531 "/usr/include/stdio.h" 3
extern int fgetc(FILE * __stream);
# 532 "/usr/include/stdio.h" 3
extern int getc(FILE * __stream);
# 538 "/usr/include/stdio.h" 3
extern int getchar();
# 550 "/usr/include/stdio.h" 3
extern int getc_unlocked(FILE * __stream);
# 551 "/usr/include/stdio.h" 3
extern int getchar_unlocked();
# 561 "/usr/include/stdio.h" 3
extern int fgetc_unlocked(FILE * __stream);
# 573 "/usr/include/stdio.h" 3
extern int fputc(int __c, FILE * __stream);
# 574 "/usr/include/stdio.h" 3
extern int putc(int __c, FILE * __stream);
# 580 "/usr/include/stdio.h" 3
extern int putchar(int __c);
# 594 "/usr/include/stdio.h" 3
extern int fputc_unlocked(int __c, FILE * __stream);
# 602 "/usr/include/stdio.h" 3
extern int putc_unlocked(int __c, FILE * __stream);
# 603 "/usr/include/stdio.h" 3
extern int putchar_unlocked(int __c);
# 610 "/usr/include/stdio.h" 3
extern int getw(FILE * __stream);
# 613 "/usr/include/stdio.h" 3
extern int putw(int __w, FILE * __stream);
# 622 "/usr/include/stdio.h" 3
extern char *fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream);
# 638 "/usr/include/stdio.h" 3
extern char *gets(char * __s) __attribute((__deprecated__));
# 649 "/usr/include/stdio.h" 3
extern char *fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream);
# 665 "/usr/include/stdio.h" 3
extern __ssize_t __getdelim(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream);
# 668 "/usr/include/stdio.h" 3
extern __ssize_t getdelim(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream);
# 678 "/usr/include/stdio.h" 3
extern __ssize_t getline(char **__restrict__ __lineptr, ::size_t *__restrict__ __n, FILE *__restrict__ __stream);
# 689 "/usr/include/stdio.h" 3
extern int fputs(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 695 "/usr/include/stdio.h" 3
extern int puts(const char * __s);
# 702 "/usr/include/stdio.h" 3
extern int ungetc(int __c, FILE * __stream);
# 709 "/usr/include/stdio.h" 3
extern ::size_t fread(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream);
# 715 "/usr/include/stdio.h" 3
extern ::size_t fwrite(const void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __s);
# 726 "/usr/include/stdio.h" 3
extern int fputs_unlocked(const char *__restrict__ __s, FILE *__restrict__ __stream);
# 737 "/usr/include/stdio.h" 3
extern ::size_t fread_unlocked(void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream);
# 739 "/usr/include/stdio.h" 3
extern ::size_t fwrite_unlocked(const void *__restrict__ __ptr, ::size_t __size, ::size_t __n, FILE *__restrict__ __stream);
# 749 "/usr/include/stdio.h" 3
extern int fseek(FILE * __stream, long __off, int __whence);
# 754 "/usr/include/stdio.h" 3
extern long ftell(FILE * __stream);
# 759 "/usr/include/stdio.h" 3
extern void rewind(FILE * __stream);
# 773 "/usr/include/stdio.h" 3
extern int fseeko(FILE * __stream, __off_t __off, int __whence);
# 778 "/usr/include/stdio.h" 3
extern __off_t ftello(FILE * __stream);
# 798 "/usr/include/stdio.h" 3
extern int fgetpos(FILE *__restrict__ __stream, fpos_t *__restrict__ __pos);
# 803 "/usr/include/stdio.h" 3
extern int fsetpos(FILE * __stream, const fpos_t * __pos);
# 818 "/usr/include/stdio.h" 3
extern int fseeko64(FILE * __stream, __off64_t __off, int __whence);
# 819 "/usr/include/stdio.h" 3
extern __off64_t ftello64(FILE * __stream);
# 820 "/usr/include/stdio.h" 3
extern int fgetpos64(FILE *__restrict__ __stream, fpos64_t *__restrict__ __pos);
# 821 "/usr/include/stdio.h" 3
extern int fsetpos64(FILE * __stream, const fpos64_t * __pos);
# 826 "/usr/include/stdio.h" 3
extern void clearerr(FILE * __stream) throw();
# 828 "/usr/include/stdio.h" 3
extern int feof(FILE * __stream) throw();
# 830 "/usr/include/stdio.h" 3
extern int ferror(FILE * __stream) throw();
# 835 "/usr/include/stdio.h" 3
extern void clearerr_unlocked(FILE * __stream) throw();
# 836 "/usr/include/stdio.h" 3
extern int feof_unlocked(FILE * __stream) throw();
# 837 "/usr/include/stdio.h" 3
extern int ferror_unlocked(FILE * __stream) throw();
# 846 "/usr/include/stdio.h" 3
extern void perror(const char * __s);
# 26 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int sys_nerr;
# 27 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const sys_errlist[];
# 30 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern int _sys_nerr;
# 31 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h" 3
extern const char *const _sys_errlist[];
# 858 "/usr/include/stdio.h" 3
extern int fileno(FILE * __stream) throw();
# 863 "/usr/include/stdio.h" 3
extern int fileno_unlocked(FILE * __stream) throw();
# 872 "/usr/include/stdio.h" 3
extern FILE *popen(const char * __command, const char * __modes);
# 878 "/usr/include/stdio.h" 3
extern int pclose(FILE * __stream);
# 884 "/usr/include/stdio.h" 3
extern char *ctermid(char * __s) throw();
# 890 "/usr/include/stdio.h" 3
extern char *cuserid(char * __s);
# 895 "/usr/include/stdio.h" 3
struct obstack;
# 898 "/usr/include/stdio.h" 3
extern int obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __format, ...) throw()
# 900 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 901 "/usr/include/stdio.h" 3
extern int obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __format, __gnuc_va_list __args) throw()
# 904 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 912 "/usr/include/stdio.h" 3
extern void flockfile(FILE * __stream) throw();
# 916 "/usr/include/stdio.h" 3
extern int ftrylockfile(FILE * __stream) throw();
# 919 "/usr/include/stdio.h" 3
extern void funlockfile(FILE * __stream) throw();
# 942 "/usr/include/stdio.h" 3
}
# 50 "/usr/include/c++/5/bits/memoryfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class > class allocator;
# 67 "/usr/include/c++/5/bits/memoryfwd.h" 3
template<> class allocator< void> ;
# 70 "/usr/include/c++/5/bits/memoryfwd.h" 3
template< class , class > struct uses_allocator;
# 76 "/usr/include/c++/5/bits/memoryfwd.h" 3
}
# 42 "/usr/include/c++/5/bits/stringfwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT> struct char_traits;
# 55 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char> ;
# 58 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< wchar_t> ;
# 63 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char16_t> ;
# 64 "/usr/include/c++/5/bits/stringfwd.h" 3
template<> struct char_traits< char32_t> ;
# 67 "/usr/include/c++/5/bits/stringfwd.h" 3
inline namespace __cxx11 {
# 69 "/usr/include/c++/5/bits/stringfwd.h" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 70 "/usr/include/c++/5/bits/stringfwd.h" 3
_Alloc = allocator< _CharT> > class basic_string;
# 74 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char> string;
# 78 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< wchar_t> wstring;
# 84 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char16_t> u16string;
# 87 "/usr/include/c++/5/bits/stringfwd.h" 3
typedef basic_string< char32_t> u32string;
# 90 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 95 "/usr/include/c++/5/bits/stringfwd.h" 3
}
# 357 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h" 3
typedef unsigned wint_t;
# 106 "/usr/include/wchar.h" 3
typedef __mbstate_t mbstate_t;
# 132 "/usr/include/wchar.h" 3
extern "C" {
# 137 "/usr/include/wchar.h" 3
struct tm;
# 147 "/usr/include/wchar.h" 3
extern wchar_t *wcscpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 149 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/wchar.h" 3
extern wchar_t *wcsncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 154 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 157 "/usr/include/wchar.h" 3
extern wchar_t *wcscat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw()
# 159 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 161 "/usr/include/wchar.h" 3
extern wchar_t *wcsncat(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw()
# 163 "/usr/include/wchar.h" 3
 __attribute((__nonnull__(1, 2)));
# 166 "/usr/include/wchar.h" 3
extern int wcscmp(const wchar_t * __s1, const wchar_t * __s2) throw()
# 167 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 169 "/usr/include/wchar.h" 3
extern int wcsncmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw()
# 170 "/usr/include/wchar.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 175 "/usr/include/wchar.h" 3
extern int wcscasecmp(const wchar_t * __s1, const wchar_t * __s2) throw();
# 178 "/usr/include/wchar.h" 3
extern int wcsncasecmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw();
# 185 "/usr/include/wchar.h" 3
extern int wcscasecmp_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 188 "/usr/include/wchar.h" 3
extern int wcsncasecmp_l(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n, __locale_t __loc) throw();
# 195 "/usr/include/wchar.h" 3
extern int wcscoll(const wchar_t * __s1, const wchar_t * __s2) throw();
# 199 "/usr/include/wchar.h" 3
extern ::size_t wcsxfrm(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 209 "/usr/include/wchar.h" 3
extern int wcscoll_l(const wchar_t * __s1, const wchar_t * __s2, __locale_t __loc) throw();
# 215 "/usr/include/wchar.h" 3
extern ::size_t wcsxfrm_l(wchar_t * __s1, const wchar_t * __s2, ::size_t __n, __locale_t __loc) throw();
# 219 "/usr/include/wchar.h" 3
extern wchar_t *wcsdup(const wchar_t * __s) throw() __attribute((__malloc__));
# 225 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcschr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 226 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 227 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcschr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcschr")
# 228 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 235 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsrchr(wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 236 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 237 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsrchr(const wchar_t * __wcs, wchar_t __wc) throw() __asm__("wcsrchr")
# 238 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 248 "/usr/include/wchar.h" 3
extern wchar_t *wcschrnul(const wchar_t * __s, wchar_t __wc) throw()
# 249 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 255 "/usr/include/wchar.h" 3
extern ::size_t wcscspn(const wchar_t * __wcs, const wchar_t * __reject) throw()
# 256 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 259 "/usr/include/wchar.h" 3
extern ::size_t wcsspn(const wchar_t * __wcs, const wchar_t * __accept) throw()
# 260 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 263 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcspbrk(wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 264 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 265 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcspbrk(const wchar_t * __wcs, const wchar_t * __accept) throw() __asm__("wcspbrk")
# 267 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 274 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcsstr(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 275 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 276 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcsstr(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcsstr")
# 278 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 285 "/usr/include/wchar.h" 3
extern wchar_t *wcstok(wchar_t *__restrict__ __s, const wchar_t *__restrict__ __delim, wchar_t **__restrict__ __ptr) throw();
# 290 "/usr/include/wchar.h" 3
extern ::size_t wcslen(const wchar_t * __s) throw() __attribute((__pure__));
# 296 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wcswcs(wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 297 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 298 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wcswcs(const wchar_t * __haystack, const wchar_t * __needle) throw() __asm__("wcswcs")
# 300 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 309 "/usr/include/wchar.h" 3
extern ::size_t wcsnlen(const wchar_t * __s, ::size_t __maxlen) throw()
# 310 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 317 "/usr/include/wchar.h" 3
extern "C++" wchar_t *wmemchr(wchar_t * __s, wchar_t __c, ::size_t __n) throw() __asm__("wmemchr")
# 318 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 319 "/usr/include/wchar.h" 3
extern "C++" const wchar_t *wmemchr(const wchar_t * __s, wchar_t __c, ::size_t __n) throw() __asm__("wmemchr")
# 321 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 328 "/usr/include/wchar.h" 3
extern int wmemcmp(const wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw()
# 329 "/usr/include/wchar.h" 3
 __attribute((__pure__));
# 332 "/usr/include/wchar.h" 3
extern wchar_t *wmemcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 337 "/usr/include/wchar.h" 3
extern wchar_t *wmemmove(wchar_t * __s1, const wchar_t * __s2, ::size_t __n) throw();
# 341 "/usr/include/wchar.h" 3
extern wchar_t *wmemset(wchar_t * __s, wchar_t __c, ::size_t __n) throw();
# 347 "/usr/include/wchar.h" 3
extern wchar_t *wmempcpy(wchar_t *__restrict__ __s1, const wchar_t *__restrict__ __s2, ::size_t __n) throw();
# 356 "/usr/include/wchar.h" 3
extern wint_t btowc(int __c) throw();
# 360 "/usr/include/wchar.h" 3
extern int wctob(wint_t __c) throw();
# 364 "/usr/include/wchar.h" 3
extern int mbsinit(const mbstate_t * __ps) throw() __attribute((__pure__));
# 368 "/usr/include/wchar.h" 3
extern ::size_t mbrtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __p) throw();
# 373 "/usr/include/wchar.h" 3
extern ::size_t wcrtomb(char *__restrict__ __s, wchar_t __wc, mbstate_t *__restrict__ __ps) throw();
# 377 "/usr/include/wchar.h" 3
extern ::size_t __mbrlen(const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __ps) throw();
# 379 "/usr/include/wchar.h" 3
extern ::size_t mbrlen(const char *__restrict__ __s, ::size_t __n, mbstate_t *__restrict__ __ps) throw();
# 411 "/usr/include/wchar.h" 3
extern ::size_t mbsrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 417 "/usr/include/wchar.h" 3
extern ::size_t wcsrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 426 "/usr/include/wchar.h" 3
extern ::size_t mbsnrtowcs(wchar_t *__restrict__ __dst, const char **__restrict__ __src, ::size_t __nmc, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 432 "/usr/include/wchar.h" 3
extern ::size_t wcsnrtombs(char *__restrict__ __dst, const wchar_t **__restrict__ __src, ::size_t __nwc, ::size_t __len, mbstate_t *__restrict__ __ps) throw();
# 442 "/usr/include/wchar.h" 3
extern int wcwidth(wchar_t __c) throw();
# 446 "/usr/include/wchar.h" 3
extern int wcswidth(const wchar_t * __s, ::size_t __n) throw();
# 453 "/usr/include/wchar.h" 3
extern double wcstod(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 460 "/usr/include/wchar.h" 3
extern float wcstof(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 462 "/usr/include/wchar.h" 3
extern long double wcstold(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr) throw();
# 471 "/usr/include/wchar.h" 3
extern long wcstol(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 476 "/usr/include/wchar.h" 3
extern unsigned long wcstoul(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 486 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 493 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 503 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 510 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstouq(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base) throw();
# 533 "/usr/include/wchar.h" 3
extern long wcstol_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 537 "/usr/include/wchar.h" 3
extern unsigned long wcstoul_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 542 "/usr/include/wchar.h" 3
__extension__ extern long long wcstoll_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 547 "/usr/include/wchar.h" 3
__extension__ extern unsigned long long wcstoull_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, int __base, __locale_t __loc) throw();
# 552 "/usr/include/wchar.h" 3
extern double wcstod_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 556 "/usr/include/wchar.h" 3
extern float wcstof_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 560 "/usr/include/wchar.h" 3
extern long double wcstold_l(const wchar_t *__restrict__ __nptr, wchar_t **__restrict__ __endptr, __locale_t __loc) throw();
# 569 "/usr/include/wchar.h" 3
extern wchar_t *wcpcpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src) throw();
# 574 "/usr/include/wchar.h" 3
extern wchar_t *wcpncpy(wchar_t *__restrict__ __dest, const wchar_t *__restrict__ __src, ::size_t __n) throw();
# 583 "/usr/include/wchar.h" 3
extern __FILE *open_wmemstream(wchar_t ** __bufloc, ::size_t * __sizeloc) throw();
# 590 "/usr/include/wchar.h" 3
extern int fwide(__FILE * __fp, int __mode) throw();
# 597 "/usr/include/wchar.h" 3
extern int fwprintf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 604 "/usr/include/wchar.h" 3
extern int wprintf(const wchar_t *__restrict__ __format, ...);
# 607 "/usr/include/wchar.h" 3
extern int swprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __format, ...) throw();
# 615 "/usr/include/wchar.h" 3
extern int vfwprintf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 623 "/usr/include/wchar.h" 3
extern int vwprintf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 628 "/usr/include/wchar.h" 3
extern int vswprintf(wchar_t *__restrict__ __s, ::size_t __n, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 638 "/usr/include/wchar.h" 3
extern int fwscanf(__FILE *__restrict__ __stream, const wchar_t *__restrict__ __format, ...);
# 645 "/usr/include/wchar.h" 3
extern int wscanf(const wchar_t *__restrict__ __format, ...);
# 648 "/usr/include/wchar.h" 3
extern int swscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, ...) throw();
# 692 "/usr/include/wchar.h" 3
extern int vfwscanf(__FILE *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 700 "/usr/include/wchar.h" 3
extern int vwscanf(const wchar_t *__restrict__ __format, __gnuc_va_list __arg);
# 704 "/usr/include/wchar.h" 3
extern int vswscanf(const wchar_t *__restrict__ __s, const wchar_t *__restrict__ __format, __gnuc_va_list __arg) throw();
# 748 "/usr/include/wchar.h" 3
extern wint_t fgetwc(__FILE * __stream);
# 749 "/usr/include/wchar.h" 3
extern wint_t getwc(__FILE * __stream);
# 755 "/usr/include/wchar.h" 3
extern wint_t getwchar();
# 762 "/usr/include/wchar.h" 3
extern wint_t fputwc(wchar_t __wc, __FILE * __stream);
# 763 "/usr/include/wchar.h" 3
extern wint_t putwc(wchar_t __wc, __FILE * __stream);
# 769 "/usr/include/wchar.h" 3
extern wint_t putwchar(wchar_t __wc);
# 777 "/usr/include/wchar.h" 3
extern wchar_t *fgetws(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 784 "/usr/include/wchar.h" 3
extern int fputws(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 792 "/usr/include/wchar.h" 3
extern wint_t ungetwc(wint_t __wc, __FILE * __stream);
# 804 "/usr/include/wchar.h" 3
extern wint_t getwc_unlocked(__FILE * __stream);
# 805 "/usr/include/wchar.h" 3
extern wint_t getwchar_unlocked();
# 813 "/usr/include/wchar.h" 3
extern wint_t fgetwc_unlocked(__FILE * __stream);
# 821 "/usr/include/wchar.h" 3
extern wint_t fputwc_unlocked(wchar_t __wc, __FILE * __stream);
# 830 "/usr/include/wchar.h" 3
extern wint_t putwc_unlocked(wchar_t __wc, __FILE * __stream);
# 831 "/usr/include/wchar.h" 3
extern wint_t putwchar_unlocked(wchar_t __wc);
# 840 "/usr/include/wchar.h" 3
extern wchar_t *fgetws_unlocked(wchar_t *__restrict__ __ws, int __n, __FILE *__restrict__ __stream);
# 849 "/usr/include/wchar.h" 3
extern int fputws_unlocked(const wchar_t *__restrict__ __ws, __FILE *__restrict__ __stream);
# 858 "/usr/include/wchar.h" 3
extern ::size_t wcsftime(wchar_t *__restrict__ __s, ::size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp) throw();
# 868 "/usr/include/wchar.h" 3
extern ::size_t wcsftime_l(wchar_t *__restrict__ __s, ::size_t __maxsize, const wchar_t *__restrict__ __format, const tm *__restrict__ __tp, __locale_t __loc) throw();
# 894 "/usr/include/wchar.h" 3
}
# 62 "/usr/include/c++/5/cwchar" 3
namespace std {
# 64 "/usr/include/c++/5/cwchar" 3
using ::mbstate_t;
# 65 "/usr/include/c++/5/cwchar" 3
}
# 135 "/usr/include/c++/5/cwchar" 3
namespace std __attribute((__visibility__("default"))) {
# 139 "/usr/include/c++/5/cwchar" 3
using ::wint_t;
# 141 "/usr/include/c++/5/cwchar" 3
using ::btowc;
# 142 "/usr/include/c++/5/cwchar" 3
using ::fgetwc;
# 143 "/usr/include/c++/5/cwchar" 3
using ::fgetws;
# 144 "/usr/include/c++/5/cwchar" 3
using ::fputwc;
# 145 "/usr/include/c++/5/cwchar" 3
using ::fputws;
# 146 "/usr/include/c++/5/cwchar" 3
using ::fwide;
# 147 "/usr/include/c++/5/cwchar" 3
using ::fwprintf;
# 148 "/usr/include/c++/5/cwchar" 3
using ::fwscanf;
# 149 "/usr/include/c++/5/cwchar" 3
using ::getwc;
# 150 "/usr/include/c++/5/cwchar" 3
using ::getwchar;
# 151 "/usr/include/c++/5/cwchar" 3
using ::mbrlen;
# 152 "/usr/include/c++/5/cwchar" 3
using ::mbrtowc;
# 153 "/usr/include/c++/5/cwchar" 3
using ::mbsinit;
# 154 "/usr/include/c++/5/cwchar" 3
using ::mbsrtowcs;
# 155 "/usr/include/c++/5/cwchar" 3
using ::putwc;
# 156 "/usr/include/c++/5/cwchar" 3
using ::putwchar;
# 158 "/usr/include/c++/5/cwchar" 3
using ::swprintf;
# 160 "/usr/include/c++/5/cwchar" 3
using ::swscanf;
# 161 "/usr/include/c++/5/cwchar" 3
using ::ungetwc;
# 162 "/usr/include/c++/5/cwchar" 3
using ::vfwprintf;
# 164 "/usr/include/c++/5/cwchar" 3
using ::vfwscanf;
# 167 "/usr/include/c++/5/cwchar" 3
using ::vswprintf;
# 170 "/usr/include/c++/5/cwchar" 3
using ::vswscanf;
# 172 "/usr/include/c++/5/cwchar" 3
using ::vwprintf;
# 174 "/usr/include/c++/5/cwchar" 3
using ::vwscanf;
# 176 "/usr/include/c++/5/cwchar" 3
using ::wcrtomb;
# 177 "/usr/include/c++/5/cwchar" 3
using ::wcscat;
# 178 "/usr/include/c++/5/cwchar" 3
using ::wcscmp;
# 179 "/usr/include/c++/5/cwchar" 3
using ::wcscoll;
# 180 "/usr/include/c++/5/cwchar" 3
using ::wcscpy;
# 181 "/usr/include/c++/5/cwchar" 3
using ::wcscspn;
# 182 "/usr/include/c++/5/cwchar" 3
using ::wcsftime;
# 183 "/usr/include/c++/5/cwchar" 3
using ::wcslen;
# 184 "/usr/include/c++/5/cwchar" 3
using ::wcsncat;
# 185 "/usr/include/c++/5/cwchar" 3
using ::wcsncmp;
# 186 "/usr/include/c++/5/cwchar" 3
using ::wcsncpy;
# 187 "/usr/include/c++/5/cwchar" 3
using ::wcsrtombs;
# 188 "/usr/include/c++/5/cwchar" 3
using ::wcsspn;
# 189 "/usr/include/c++/5/cwchar" 3
using ::wcstod;
# 191 "/usr/include/c++/5/cwchar" 3
using ::wcstof;
# 193 "/usr/include/c++/5/cwchar" 3
using ::wcstok;
# 194 "/usr/include/c++/5/cwchar" 3
using ::wcstol;
# 195 "/usr/include/c++/5/cwchar" 3
using ::wcstoul;
# 196 "/usr/include/c++/5/cwchar" 3
using ::wcsxfrm;
# 197 "/usr/include/c++/5/cwchar" 3
using ::wctob;
# 198 "/usr/include/c++/5/cwchar" 3
using ::wmemcmp;
# 199 "/usr/include/c++/5/cwchar" 3
using ::wmemcpy;
# 200 "/usr/include/c++/5/cwchar" 3
using ::wmemmove;
# 201 "/usr/include/c++/5/cwchar" 3
using ::wmemset;
# 202 "/usr/include/c++/5/cwchar" 3
using ::wprintf;
# 203 "/usr/include/c++/5/cwchar" 3
using ::wscanf;
# 204 "/usr/include/c++/5/cwchar" 3
using ::wcschr;
# 205 "/usr/include/c++/5/cwchar" 3
using ::wcspbrk;
# 206 "/usr/include/c++/5/cwchar" 3
using ::wcsrchr;
# 207 "/usr/include/c++/5/cwchar" 3
using ::wcsstr;
# 208 "/usr/include/c++/5/cwchar" 3
using ::wmemchr;
# 233 "/usr/include/c++/5/cwchar" 3
}
# 241 "/usr/include/c++/5/cwchar" 3
namespace __gnu_cxx {
# 248 "/usr/include/c++/5/cwchar" 3
using ::wcstold;
# 257 "/usr/include/c++/5/cwchar" 3
using ::wcstoll;
# 258 "/usr/include/c++/5/cwchar" 3
using ::wcstoull;
# 260 "/usr/include/c++/5/cwchar" 3
}
# 262 "/usr/include/c++/5/cwchar" 3
namespace std {
# 264 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstold;
# 265 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoll;
# 266 "/usr/include/c++/5/cwchar" 3
using __gnu_cxx::wcstoull;
# 267 "/usr/include/c++/5/cwchar" 3
}
# 277 "/usr/include/c++/5/cwchar" 3
namespace std {
# 297 "/usr/include/c++/5/cwchar" 3
}
# 68 "/usr/include/c++/5/bits/postypes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 88 "/usr/include/c++/5/bits/postypes.h" 3
typedef long streamoff;
# 98 "/usr/include/c++/5/bits/postypes.h" 3
typedef ptrdiff_t streamsize;
# 111 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT>
# 112 "/usr/include/c++/5/bits/postypes.h" 3
class fpos {
# 115 "/usr/include/c++/5/bits/postypes.h" 3
streamoff _M_off;
# 116 "/usr/include/c++/5/bits/postypes.h" 3
_StateT _M_state;
# 123 "/usr/include/c++/5/bits/postypes.h" 3
public: fpos() : _M_off((0)), _M_state()
# 124 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 133 "/usr/include/c++/5/bits/postypes.h" 3
fpos(streamoff __off) : _M_off(__off), _M_state()
# 134 "/usr/include/c++/5/bits/postypes.h" 3
{ }
# 137 "/usr/include/c++/5/bits/postypes.h" 3
operator streamoff() const { return _M_off; }
# 141 "/usr/include/c++/5/bits/postypes.h" 3
void state(_StateT __st)
# 142 "/usr/include/c++/5/bits/postypes.h" 3
{ (_M_state) = __st; }
# 146 "/usr/include/c++/5/bits/postypes.h" 3
_StateT state() const
# 147 "/usr/include/c++/5/bits/postypes.h" 3
{ return _M_state; }
# 154 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator+=(streamoff __off)
# 155 "/usr/include/c++/5/bits/postypes.h" 3
{
# 156 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) += __off;
# 157 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 158 "/usr/include/c++/5/bits/postypes.h" 3
}
# 165 "/usr/include/c++/5/bits/postypes.h" 3
fpos &operator-=(streamoff __off)
# 166 "/usr/include/c++/5/bits/postypes.h" 3
{
# 167 "/usr/include/c++/5/bits/postypes.h" 3
(_M_off) -= __off;
# 168 "/usr/include/c++/5/bits/postypes.h" 3
return *this;
# 169 "/usr/include/c++/5/bits/postypes.h" 3
}
# 178 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator+(streamoff __off) const
# 179 "/usr/include/c++/5/bits/postypes.h" 3
{
# 180 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 181 "/usr/include/c++/5/bits/postypes.h" 3
__pos += __off;
# 182 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 183 "/usr/include/c++/5/bits/postypes.h" 3
}
# 192 "/usr/include/c++/5/bits/postypes.h" 3
fpos operator-(streamoff __off) const
# 193 "/usr/include/c++/5/bits/postypes.h" 3
{
# 194 "/usr/include/c++/5/bits/postypes.h" 3
fpos __pos(*this);
# 195 "/usr/include/c++/5/bits/postypes.h" 3
__pos -= __off;
# 196 "/usr/include/c++/5/bits/postypes.h" 3
return __pos;
# 197 "/usr/include/c++/5/bits/postypes.h" 3
}
# 205 "/usr/include/c++/5/bits/postypes.h" 3
streamoff operator-(const fpos &__other) const
# 206 "/usr/include/c++/5/bits/postypes.h" 3
{ return (_M_off) - (__other._M_off); }
# 207 "/usr/include/c++/5/bits/postypes.h" 3
};
# 214 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 216 "/usr/include/c++/5/bits/postypes.h" 3
operator==(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 217 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) == ((streamoff)__rhs); }
# 219 "/usr/include/c++/5/bits/postypes.h" 3
template< class _StateT> inline bool
# 221 "/usr/include/c++/5/bits/postypes.h" 3
operator!=(const fpos< _StateT> &__lhs, const fpos< _StateT> &__rhs)
# 222 "/usr/include/c++/5/bits/postypes.h" 3
{ return ((streamoff)__lhs) != ((streamoff)__rhs); }
# 228 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> streampos;
# 230 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> wstreampos;
# 234 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> u16streampos;
# 236 "/usr/include/c++/5/bits/postypes.h" 3
typedef fpos< __mbstate_t> u32streampos;
# 240 "/usr/include/c++/5/bits/postypes.h" 3
}
# 42 "/usr/include/c++/5/iosfwd" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/5/iosfwd" 3
class ios_base;
# 76 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ios;
# 79 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_streambuf;
# 82 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_istream;
# 85 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ostream;
# 88 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_iostream;
# 92 "/usr/include/c++/5/iosfwd" 3
inline namespace __cxx11 {
# 94 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 95 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringbuf;
# 98 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 99 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_istringstream;
# 102 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 103 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_ostringstream;
# 106 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> , class
# 107 "/usr/include/c++/5/iosfwd" 3
_Alloc = allocator< _CharT> > class basic_stringstream;
# 110 "/usr/include/c++/5/iosfwd" 3
}
# 112 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_filebuf;
# 115 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ifstream;
# 118 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_ofstream;
# 121 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class basic_fstream;
# 124 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class istreambuf_iterator;
# 127 "/usr/include/c++/5/iosfwd" 3
template< class _CharT, class _Traits = char_traits< _CharT> > class ostreambuf_iterator;
# 132 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< char> ios;
# 135 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< char> streambuf;
# 138 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< char> istream;
# 141 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< char> ostream;
# 144 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< char> iostream;
# 147 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< char> stringbuf;
# 150 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< char> istringstream;
# 153 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< char> ostringstream;
# 156 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< char> stringstream;
# 159 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< char> filebuf;
# 162 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< char> ifstream;
# 165 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< char> ofstream;
# 168 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< char> fstream;
# 172 "/usr/include/c++/5/iosfwd" 3
typedef basic_ios< wchar_t> wios;
# 175 "/usr/include/c++/5/iosfwd" 3
typedef basic_streambuf< wchar_t> wstreambuf;
# 178 "/usr/include/c++/5/iosfwd" 3
typedef basic_istream< wchar_t> wistream;
# 181 "/usr/include/c++/5/iosfwd" 3
typedef basic_ostream< wchar_t> wostream;
# 184 "/usr/include/c++/5/iosfwd" 3
typedef basic_iostream< wchar_t> wiostream;
# 187 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringbuf< wchar_t> wstringbuf;
# 190 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_istringstream< wchar_t> wistringstream;
# 193 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_ostringstream< wchar_t> wostringstream;
# 196 "/usr/include/c++/5/iosfwd" 3
typedef __cxx11::basic_stringstream< wchar_t> wstringstream;
# 199 "/usr/include/c++/5/iosfwd" 3
typedef basic_filebuf< wchar_t> wfilebuf;
# 202 "/usr/include/c++/5/iosfwd" 3
typedef basic_ifstream< wchar_t> wifstream;
# 205 "/usr/include/c++/5/iosfwd" 3
typedef basic_ofstream< wchar_t> wofstream;
# 208 "/usr/include/c++/5/iosfwd" 3
typedef basic_fstream< wchar_t> wfstream;
# 213 "/usr/include/c++/5/iosfwd" 3
}
# 35 "/usr/include/c++/5/exception" 3
#pragma GCC visibility push ( default )
# 40 "/usr/include/c++/5/exception" 3
extern "C++" {
# 42 "/usr/include/c++/5/exception" 3
namespace std {
# 60 "/usr/include/c++/5/exception" 3
class exception {
# 63 "/usr/include/c++/5/exception" 3
public: exception() noexcept { }
# 64 "/usr/include/c++/5/exception" 3
virtual ~exception() noexcept;
# 68 "/usr/include/c++/5/exception" 3
virtual const char *what() const noexcept;
# 69 "/usr/include/c++/5/exception" 3
};
# 73 "/usr/include/c++/5/exception" 3
class bad_exception : public exception {
# 76 "/usr/include/c++/5/exception" 3
public: bad_exception() noexcept { }
# 80 "/usr/include/c++/5/exception" 3
virtual ~bad_exception() noexcept;
# 83 "/usr/include/c++/5/exception" 3
virtual const char *what() const noexcept;
# 84 "/usr/include/c++/5/exception" 3
};
# 87 "/usr/include/c++/5/exception" 3
typedef void (*terminate_handler)(void);
# 90 "/usr/include/c++/5/exception" 3
typedef void (*unexpected_handler)(void);
# 93 "/usr/include/c++/5/exception" 3
terminate_handler set_terminate(terminate_handler) noexcept;
# 97 "/usr/include/c++/5/exception" 3
terminate_handler get_terminate() noexcept;
# 102 "/usr/include/c++/5/exception" 3
void terminate() noexcept __attribute((__noreturn__));
# 105 "/usr/include/c++/5/exception" 3
unexpected_handler set_unexpected(unexpected_handler) noexcept;
# 109 "/usr/include/c++/5/exception" 3
unexpected_handler get_unexpected() noexcept;
# 114 "/usr/include/c++/5/exception" 3
void unexpected() __attribute((__noreturn__));
# 127 "/usr/include/c++/5/exception" 3
bool uncaught_exception() noexcept __attribute((__pure__));
# 130 "/usr/include/c++/5/exception" 3
}
# 132 "/usr/include/c++/5/exception" 3
namespace __gnu_cxx {
# 152 "/usr/include/c++/5/exception" 3
void __verbose_terminate_handler();
# 155 "/usr/include/c++/5/exception" 3
}
# 157 "/usr/include/c++/5/exception" 3
}
# 159 "/usr/include/c++/5/exception" 3
#pragma GCC visibility pop
# 34 "/usr/include/c++/5/bits/exception_ptr.h" 3
#pragma GCC visibility push ( default )
# 43 "/usr/include/c++/5/bits/exception_ptr.h" 3
extern "C++" {
# 45 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace std {
# 47 "/usr/include/c++/5/bits/exception_ptr.h" 3
class type_info;
# 53 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace __exception_ptr {
# 55 "/usr/include/c++/5/bits/exception_ptr.h" 3
class exception_ptr;
# 56 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 58 "/usr/include/c++/5/bits/exception_ptr.h" 3
using __exception_ptr::exception_ptr;
# 64 "/usr/include/c++/5/bits/exception_ptr.h" 3
__exception_ptr::exception_ptr current_exception() noexcept;
# 67 "/usr/include/c++/5/bits/exception_ptr.h" 3
void rethrow_exception(__exception_ptr::exception_ptr) __attribute((__noreturn__));
# 69 "/usr/include/c++/5/bits/exception_ptr.h" 3
namespace __exception_ptr {
# 75 "/usr/include/c++/5/bits/exception_ptr.h" 3
class exception_ptr {
# 77 "/usr/include/c++/5/bits/exception_ptr.h" 3
void *_M_exception_object;
# 79 "/usr/include/c++/5/bits/exception_ptr.h" 3
explicit exception_ptr(void * __e) noexcept;
# 81 "/usr/include/c++/5/bits/exception_ptr.h" 3
void _M_addref() noexcept;
# 82 "/usr/include/c++/5/bits/exception_ptr.h" 3
void _M_release() noexcept;
# 84 "/usr/include/c++/5/bits/exception_ptr.h" 3
void *_M_get() const noexcept __attribute((__pure__));
# 86 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend exception_ptr std::current_exception() noexcept;
# 87 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend void std::rethrow_exception(exception_ptr);
# 90 "/usr/include/c++/5/bits/exception_ptr.h" 3
public: exception_ptr() noexcept;
# 92 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(const exception_ptr &) noexcept;
# 95 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(nullptr_t) noexcept : _M_exception_object((0))
# 97 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ }
# 99 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr(exception_ptr &&__o) noexcept : _M_exception_object(__o._M_exception_object)
# 101 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ (__o._M_exception_object) = (0); }
# 112 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr &operator=(const exception_ptr &) noexcept;
# 116 "/usr/include/c++/5/bits/exception_ptr.h" 3
exception_ptr &operator=(exception_ptr &&__o) noexcept
# 117 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 118 "/usr/include/c++/5/bits/exception_ptr.h" 3
((exception_ptr)(static_cast< exception_ptr &&>(__o))).swap(*this);
# 119 "/usr/include/c++/5/bits/exception_ptr.h" 3
return *this;
# 120 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 123 "/usr/include/c++/5/bits/exception_ptr.h" 3
~exception_ptr() noexcept;
# 126 "/usr/include/c++/5/bits/exception_ptr.h" 3
void swap(exception_ptr &) noexcept;
# 138 "/usr/include/c++/5/bits/exception_ptr.h" 3
explicit operator bool() const
# 139 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ return _M_exception_object; }
# 143 "/usr/include/c++/5/bits/exception_ptr.h" 3
friend bool operator==(const exception_ptr &, const exception_ptr &) noexcept
# 144 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 147 "/usr/include/c++/5/bits/exception_ptr.h" 3
const type_info *__cxa_exception_type() const noexcept
# 148 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 149 "/usr/include/c++/5/bits/exception_ptr.h" 3
};
# 152 "/usr/include/c++/5/bits/exception_ptr.h" 3
bool operator==(const exception_ptr &, const exception_ptr &) noexcept
# 153 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 156 "/usr/include/c++/5/bits/exception_ptr.h" 3
bool operator!=(const exception_ptr &, const exception_ptr &) noexcept
# 157 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__pure__));
# 160 "/usr/include/c++/5/bits/exception_ptr.h" 3
inline void swap(exception_ptr &__lhs, exception_ptr &__rhs)
# 161 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ __lhs.swap(__rhs); }
# 163 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 167 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr
# 169 "/usr/include/c++/5/bits/exception_ptr.h" 3
make_exception_ptr(_Ex __ex) noexcept
# 170 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 172 "/usr/include/c++/5/bits/exception_ptr.h" 3
try
# 173 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 174 "/usr/include/c++/5/bits/exception_ptr.h" 3
throw __ex;
# 175 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 176 "/usr/include/c++/5/bits/exception_ptr.h" 3
catch (...)
# 177 "/usr/include/c++/5/bits/exception_ptr.h" 3
{
# 178 "/usr/include/c++/5/bits/exception_ptr.h" 3
return current_exception();
# 179 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 183 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 189 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr copy_exception(_Ex __ex) noexcept
# 191 "/usr/include/c++/5/bits/exception_ptr.h" 3
 __attribute((__deprecated__));
# 193 "/usr/include/c++/5/bits/exception_ptr.h" 3
template< class _Ex> __exception_ptr::exception_ptr
# 195 "/usr/include/c++/5/bits/exception_ptr.h" 3
copy_exception(_Ex __ex) noexcept
# 196 "/usr/include/c++/5/bits/exception_ptr.h" 3
{ return std::make_exception_ptr< _Ex> (__ex); }
# 199 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 201 "/usr/include/c++/5/bits/exception_ptr.h" 3
}
# 203 "/usr/include/c++/5/bits/exception_ptr.h" 3
#pragma GCC visibility pop
# 33 "/usr/include/c++/5/bits/nested_exception.h" 3
#pragma GCC visibility push ( default )
# 45 "/usr/include/c++/5/bits/nested_exception.h" 3
extern "C++" {
# 47 "/usr/include/c++/5/bits/nested_exception.h" 3
namespace std {
# 55 "/usr/include/c++/5/bits/nested_exception.h" 3
class nested_exception {
# 57 "/usr/include/c++/5/bits/nested_exception.h" 3
__exception_ptr::exception_ptr _M_ptr;
# 60 "/usr/include/c++/5/bits/nested_exception.h" 3
public: nested_exception() noexcept : _M_ptr(current_exception()) { }
# 62 "/usr/include/c++/5/bits/nested_exception.h" 3
nested_exception(const nested_exception &) noexcept = default;
# 64 "/usr/include/c++/5/bits/nested_exception.h" 3
nested_exception &operator=(const nested_exception &) noexcept = default;
# 66 "/usr/include/c++/5/bits/nested_exception.h" 3
virtual ~nested_exception() noexcept;
# 68 "/usr/include/c++/5/bits/nested_exception.h" 3
[[noreturn]] void
# 70 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_nested() const
# 71 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 72 "/usr/include/c++/5/bits/nested_exception.h" 3
if ((_M_ptr)) {
# 73 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_exception(_M_ptr); }
# 74 "/usr/include/c++/5/bits/nested_exception.h" 3
std::terminate();
# 75 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 78 "/usr/include/c++/5/bits/nested_exception.h" 3
__exception_ptr::exception_ptr nested_ptr() const noexcept
# 79 "/usr/include/c++/5/bits/nested_exception.h" 3
{ return _M_ptr; }
# 80 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 82 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Except>
# 83 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Nested_exception : public _Except, public nested_exception {
# 85 "/usr/include/c++/5/bits/nested_exception.h" 3
explicit _Nested_exception(const _Except &__ex) : _Except(__ex)
# 87 "/usr/include/c++/5/bits/nested_exception.h" 3
{ }
# 89 "/usr/include/c++/5/bits/nested_exception.h" 3
explicit _Nested_exception(_Except &&__ex) : _Except(static_cast< _Except &&>(__ex))
# 91 "/usr/include/c++/5/bits/nested_exception.h" 3
{ }
# 92 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 94 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool
# 95 "/usr/include/c++/5/bits/nested_exception.h" 3
__with_nested = !__is_base_of(nested_exception, _Tp)>
# 96 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_impl {
# 98 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Up> static void
# 99 "/usr/include/c++/5/bits/nested_exception.h" 3
_S_throw(_Up &&__t)
# 100 "/usr/include/c++/5/bits/nested_exception.h" 3
{ throw _Nested_exception< _Tp> {static_cast< _Up &&>(__t)}; }
# 101 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 103 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 104 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_impl< _Tp, false> {
# 106 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Up> static void
# 107 "/usr/include/c++/5/bits/nested_exception.h" 3
_S_throw(_Up &&__t)
# 108 "/usr/include/c++/5/bits/nested_exception.h" 3
{ throw static_cast< _Up &&>(__t); }
# 109 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 111 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool = __is_class(_Tp) && (!__is_final(_Tp))>
# 112 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper : public _Throw_with_nested_impl< _Tp> {
# 113 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 115 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 116 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp, false> : public _Throw_with_nested_impl< _Tp, false> {
# 118 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 120 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 121 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp &, false> : public _Throw_with_nested_helper< _Tp> {
# 123 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 125 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 126 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Throw_with_nested_helper< _Tp &&, false> : public _Throw_with_nested_helper< _Tp> {
# 128 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 132 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 133 "/usr/include/c++/5/bits/nested_exception.h" 3
[[noreturn]] inline void
# 135 "/usr/include/c++/5/bits/nested_exception.h" 3
throw_with_nested(_Tp &&__t)
# 136 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 137 "/usr/include/c++/5/bits/nested_exception.h" 3
_Throw_with_nested_helper< _Tp> ::_S_throw(static_cast< _Tp &&>(__t));
# 138 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 140 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp, bool = __is_polymorphic(_Tp)>
# 141 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Rethrow_if_nested_impl {
# 143 "/usr/include/c++/5/bits/nested_exception.h" 3
static void _S_rethrow(const _Tp &__t)
# 144 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 145 "/usr/include/c++/5/bits/nested_exception.h" 3
if (auto __tp = (dynamic_cast< const nested_exception *>(&__t))) {
# 146 "/usr/include/c++/5/bits/nested_exception.h" 3
__tp->rethrow_nested(); }
# 147 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 148 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 150 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Tp>
# 151 "/usr/include/c++/5/bits/nested_exception.h" 3
struct _Rethrow_if_nested_impl< _Tp, false> {
# 153 "/usr/include/c++/5/bits/nested_exception.h" 3
static void _S_rethrow(const _Tp &) { }
# 154 "/usr/include/c++/5/bits/nested_exception.h" 3
};
# 157 "/usr/include/c++/5/bits/nested_exception.h" 3
template< class _Ex> inline void
# 159 "/usr/include/c++/5/bits/nested_exception.h" 3
rethrow_if_nested(const _Ex &__ex)
# 160 "/usr/include/c++/5/bits/nested_exception.h" 3
{
# 161 "/usr/include/c++/5/bits/nested_exception.h" 3
_Rethrow_if_nested_impl< _Ex> ::_S_rethrow(__ex);
# 162 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 165 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 167 "/usr/include/c++/5/bits/nested_exception.h" 3
}
# 171 "/usr/include/c++/5/bits/nested_exception.h" 3
#pragma GCC visibility pop
# 42 "/usr/include/c++/5/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 52 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 56 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 59 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 63 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 66 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 69 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 72 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 75 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 78 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_out_of_range_fmt(const char *, ...) __attribute((__noreturn__))
# 79 "/usr/include/c++/5/bits/functexcept.h" 3
 __attribute((__format__(__gnu_printf__, 1, 2)));
# 82 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 85 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 88 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 91 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 95 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 98 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 101 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 105 "/usr/include/c++/5/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 108 "/usr/include/c++/5/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/5/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 54 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 55 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 58 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __min = ((((_Value)(-1)) < 0) ? ((_Value)1) << ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) : ((_Value)0));
# 59 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const _Value __max = ((((_Value)(-1)) < 0) ? (((((_Value)1) << (((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((_Value)0)));
# 63 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 64 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits = ((sizeof(_Value) * (8)) - (((_Value)(-1)) < 0));
# 65 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 67 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 68 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__min;
# 70 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const _Value
# 71 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__max;
# 73 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 74 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__is_signed;
# 76 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 77 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_integer< _Value> ::__digits;
# 99 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 100 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 103 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_digits10 = ((2) + ((((std::__are_same< _Value, float> ::__value) ? 24 : ((std::__are_same< _Value, double> ::__value) ? 53 : 64)) * 643L) / (2136)));
# 106 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 107 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __digits10 = ((std::__are_same< _Value, float> ::__value) ? 6 : ((std::__are_same< _Value, double> ::__value) ? 15 : 18));
# 108 "/usr/include/c++/5/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::__are_same< _Value, float> ::__value) ? 38 : ((std::__are_same< _Value, double> ::__value) ? 308 : 4932));
# 109 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 111 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 112 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_digits10;
# 114 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const bool
# 115 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__is_signed;
# 117 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 118 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__digits10;
# 120 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value> const int
# 121 "/usr/include/c++/5/ext/numeric_traits.h" 3
__numeric_traits_floating< _Value> ::__max_exponent10;
# 123 "/usr/include/c++/5/ext/numeric_traits.h" 3
template< class _Value>
# 124 "/usr/include/c++/5/ext/numeric_traits.h" 3
struct __numeric_traits : public __conditional_type< std::__is_integer< _Value> ::__value, __numeric_traits_integer< _Value> , __numeric_traits_floating< _Value> > ::__type {
# 128 "/usr/include/c++/5/ext/numeric_traits.h" 3
};
# 131 "/usr/include/c++/5/ext/numeric_traits.h" 3
}
# 36 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline _Tp *
# 47 "/usr/include/c++/5/bits/move.h" 3
__addressof(_Tp &__r) noexcept
# 48 "/usr/include/c++/5/bits/move.h" 3
{
# 49 "/usr/include/c++/5/bits/move.h" 3
return reinterpret_cast< _Tp *>(&(const_cast< char &>(reinterpret_cast< const volatile char &>(__r))));
# 51 "/usr/include/c++/5/bits/move.h" 3
}
# 54 "/usr/include/c++/5/bits/move.h" 3
}
# 42 "/usr/include/c++/5/type_traits" 3
namespace std {
# 44 "/usr/include/c++/5/type_traits" 3
typedef unsigned short uint_least16_t;
# 45 "/usr/include/c++/5/type_traits" 3
typedef unsigned uint_least32_t;
# 46 "/usr/include/c++/5/type_traits" 3
}
# 52 "/usr/include/c++/5/type_traits" 3
namespace std __attribute((__visibility__("default"))) {
# 68 "/usr/include/c++/5/type_traits" 3
template< class _Tp, _Tp __v>
# 69 "/usr/include/c++/5/type_traits" 3
struct integral_constant {
# 71 "/usr/include/c++/5/type_traits" 3
static constexpr _Tp value = (__v);
# 72 "/usr/include/c++/5/type_traits" 3
typedef _Tp value_type;
# 73 "/usr/include/c++/5/type_traits" 3
typedef integral_constant type;
# 74 "/usr/include/c++/5/type_traits" 3
constexpr operator value_type() const { return value; }
# 81 "/usr/include/c++/5/type_traits" 3
};
# 83 "/usr/include/c++/5/type_traits" 3
template< class _Tp, _Tp __v> constexpr _Tp
# 84 "/usr/include/c++/5/type_traits" 3
integral_constant< _Tp, __v> ::value;
# 87 "/usr/include/c++/5/type_traits" 3
typedef integral_constant< bool, true> true_type;
# 90 "/usr/include/c++/5/type_traits" 3
typedef integral_constant< bool, false> false_type;
# 92 "/usr/include/c++/5/type_traits" 3
template< bool __v> using __bool_constant = integral_constant< bool, __v> ;
# 97 "/usr/include/c++/5/type_traits" 3
template< bool , class , class > struct conditional;
# 100 "/usr/include/c++/5/type_traits" 3
template< class ...> struct __or_;
# 104 "/usr/include/c++/5/type_traits" 3
template<> struct __or_< > : public false_type {
# 106 "/usr/include/c++/5/type_traits" 3
};
# 108 "/usr/include/c++/5/type_traits" 3
template< class _B1>
# 109 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1> : public _B1 {
# 111 "/usr/include/c++/5/type_traits" 3
};
# 113 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2>
# 114 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1, _B2> : public conditional< _B1::value, _B1, _B2> ::type {
# 116 "/usr/include/c++/5/type_traits" 3
};
# 118 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 119 "/usr/include/c++/5/type_traits" 3
struct __or_< _B1, _B2, _B3, _Bn...> : public conditional< _B1::value, _B1, __or_< _B2, _B3, _Bn...> > ::type {
# 121 "/usr/include/c++/5/type_traits" 3
};
# 123 "/usr/include/c++/5/type_traits" 3
template< class ...> struct __and_;
# 127 "/usr/include/c++/5/type_traits" 3
template<> struct __and_< > : public true_type {
# 129 "/usr/include/c++/5/type_traits" 3
};
# 131 "/usr/include/c++/5/type_traits" 3
template< class _B1>
# 132 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1> : public _B1 {
# 134 "/usr/include/c++/5/type_traits" 3
};
# 136 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2>
# 137 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1, _B2> : public conditional< _B1::value, _B2, _B1> ::type {
# 139 "/usr/include/c++/5/type_traits" 3
};
# 141 "/usr/include/c++/5/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 142 "/usr/include/c++/5/type_traits" 3
struct __and_< _B1, _B2, _B3, _Bn...> : public conditional< _B1::value, __and_< _B2, _B3, _Bn...> , _B1> ::type {
# 144 "/usr/include/c++/5/type_traits" 3
};
# 146 "/usr/include/c++/5/type_traits" 3
template< class _Pp>
# 147 "/usr/include/c++/5/type_traits" 3
struct __not_ : public integral_constant< bool, !_Pp::value> {
# 149 "/usr/include/c++/5/type_traits" 3
};
# 156 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 157 "/usr/include/c++/5/type_traits" 3
struct __success_type {
# 158 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 160 "/usr/include/c++/5/type_traits" 3
struct __failure_type {
# 161 "/usr/include/c++/5/type_traits" 3
};
# 165 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_cv;
# 168 "/usr/include/c++/5/type_traits" 3
template< class >
# 169 "/usr/include/c++/5/type_traits" 3
struct __is_void_helper : public false_type {
# 170 "/usr/include/c++/5/type_traits" 3
};
# 173 "/usr/include/c++/5/type_traits" 3
template<> struct __is_void_helper< void> : public true_type {
# 174 "/usr/include/c++/5/type_traits" 3
};
# 177 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 178 "/usr/include/c++/5/type_traits" 3
struct is_void : public __is_void_helper< typename remove_cv< _Tp> ::type> ::type {
# 180 "/usr/include/c++/5/type_traits" 3
};
# 182 "/usr/include/c++/5/type_traits" 3
template< class >
# 183 "/usr/include/c++/5/type_traits" 3
struct __is_integral_helper : public false_type {
# 184 "/usr/include/c++/5/type_traits" 3
};
# 187 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< bool> : public true_type {
# 188 "/usr/include/c++/5/type_traits" 3
};
# 191 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char> : public true_type {
# 192 "/usr/include/c++/5/type_traits" 3
};
# 195 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< signed char> : public true_type {
# 196 "/usr/include/c++/5/type_traits" 3
};
# 199 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned char> : public true_type {
# 200 "/usr/include/c++/5/type_traits" 3
};
# 204 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< wchar_t> : public true_type {
# 205 "/usr/include/c++/5/type_traits" 3
};
# 209 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char16_t> : public true_type {
# 210 "/usr/include/c++/5/type_traits" 3
};
# 213 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< char32_t> : public true_type {
# 214 "/usr/include/c++/5/type_traits" 3
};
# 217 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< short> : public true_type {
# 218 "/usr/include/c++/5/type_traits" 3
};
# 221 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned short> : public true_type {
# 222 "/usr/include/c++/5/type_traits" 3
};
# 225 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< int> : public true_type {
# 226 "/usr/include/c++/5/type_traits" 3
};
# 229 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned> : public true_type {
# 230 "/usr/include/c++/5/type_traits" 3
};
# 233 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< long> : public true_type {
# 234 "/usr/include/c++/5/type_traits" 3
};
# 237 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned long> : public true_type {
# 238 "/usr/include/c++/5/type_traits" 3
};
# 241 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< long long> : public true_type {
# 242 "/usr/include/c++/5/type_traits" 3
};
# 245 "/usr/include/c++/5/type_traits" 3
template<> struct __is_integral_helper< unsigned long long> : public true_type {
# 246 "/usr/include/c++/5/type_traits" 3
};
# 288 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 289 "/usr/include/c++/5/type_traits" 3
struct is_integral : public __is_integral_helper< typename remove_cv< _Tp> ::type> ::type {
# 291 "/usr/include/c++/5/type_traits" 3
};
# 293 "/usr/include/c++/5/type_traits" 3
template< class >
# 294 "/usr/include/c++/5/type_traits" 3
struct __is_floating_point_helper : public false_type {
# 295 "/usr/include/c++/5/type_traits" 3
};
# 298 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< float> : public true_type {
# 299 "/usr/include/c++/5/type_traits" 3
};
# 302 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< double> : public true_type {
# 303 "/usr/include/c++/5/type_traits" 3
};
# 306 "/usr/include/c++/5/type_traits" 3
template<> struct __is_floating_point_helper< long double> : public true_type {
# 307 "/usr/include/c++/5/type_traits" 3
};
# 316 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 317 "/usr/include/c++/5/type_traits" 3
struct is_floating_point : public __is_floating_point_helper< typename remove_cv< _Tp> ::type> ::type {
# 319 "/usr/include/c++/5/type_traits" 3
};
# 322 "/usr/include/c++/5/type_traits" 3
template< class >
# 323 "/usr/include/c++/5/type_traits" 3
struct is_array : public false_type {
# 324 "/usr/include/c++/5/type_traits" 3
};
# 326 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 327 "/usr/include/c++/5/type_traits" 3
struct is_array< _Tp [_Size]> : public true_type {
# 328 "/usr/include/c++/5/type_traits" 3
};
# 330 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 331 "/usr/include/c++/5/type_traits" 3
struct is_array< _Tp []> : public true_type {
# 332 "/usr/include/c++/5/type_traits" 3
};
# 334 "/usr/include/c++/5/type_traits" 3
template< class >
# 335 "/usr/include/c++/5/type_traits" 3
struct __is_pointer_helper : public false_type {
# 336 "/usr/include/c++/5/type_traits" 3
};
# 338 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 339 "/usr/include/c++/5/type_traits" 3
struct __is_pointer_helper< _Tp *> : public true_type {
# 340 "/usr/include/c++/5/type_traits" 3
};
# 343 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 344 "/usr/include/c++/5/type_traits" 3
struct is_pointer : public __is_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 346 "/usr/include/c++/5/type_traits" 3
};
# 349 "/usr/include/c++/5/type_traits" 3
template< class >
# 350 "/usr/include/c++/5/type_traits" 3
struct is_lvalue_reference : public false_type {
# 351 "/usr/include/c++/5/type_traits" 3
};
# 353 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 354 "/usr/include/c++/5/type_traits" 3
struct is_lvalue_reference< _Tp &> : public true_type {
# 355 "/usr/include/c++/5/type_traits" 3
};
# 358 "/usr/include/c++/5/type_traits" 3
template< class >
# 359 "/usr/include/c++/5/type_traits" 3
struct is_rvalue_reference : public false_type {
# 360 "/usr/include/c++/5/type_traits" 3
};
# 362 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 363 "/usr/include/c++/5/type_traits" 3
struct is_rvalue_reference< _Tp &&> : public true_type {
# 364 "/usr/include/c++/5/type_traits" 3
};
# 366 "/usr/include/c++/5/type_traits" 3
template< class > struct is_function;
# 369 "/usr/include/c++/5/type_traits" 3
template< class >
# 370 "/usr/include/c++/5/type_traits" 3
struct __is_member_object_pointer_helper : public false_type {
# 371 "/usr/include/c++/5/type_traits" 3
};
# 373 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 374 "/usr/include/c++/5/type_traits" 3
struct __is_member_object_pointer_helper< _Tp (_Cp::*)> : public integral_constant< bool, !is_function< _Tp> ::value> {
# 375 "/usr/include/c++/5/type_traits" 3
};
# 378 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 379 "/usr/include/c++/5/type_traits" 3
struct is_member_object_pointer : public __is_member_object_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 382 "/usr/include/c++/5/type_traits" 3
};
# 384 "/usr/include/c++/5/type_traits" 3
template< class >
# 385 "/usr/include/c++/5/type_traits" 3
struct __is_member_function_pointer_helper : public false_type {
# 386 "/usr/include/c++/5/type_traits" 3
};
# 388 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 389 "/usr/include/c++/5/type_traits" 3
struct __is_member_function_pointer_helper< _Tp (_Cp::*)> : public integral_constant< bool, is_function< _Tp> ::value> {
# 390 "/usr/include/c++/5/type_traits" 3
};
# 393 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 394 "/usr/include/c++/5/type_traits" 3
struct is_member_function_pointer : public __is_member_function_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 397 "/usr/include/c++/5/type_traits" 3
};
# 400 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 401 "/usr/include/c++/5/type_traits" 3
struct is_enum : public integral_constant< bool, __is_enum(_Tp)> {
# 403 "/usr/include/c++/5/type_traits" 3
};
# 406 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 407 "/usr/include/c++/5/type_traits" 3
struct is_union : public integral_constant< bool, __is_union(_Tp)> {
# 409 "/usr/include/c++/5/type_traits" 3
};
# 412 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 413 "/usr/include/c++/5/type_traits" 3
struct is_class : public integral_constant< bool, __is_class(_Tp)> {
# 415 "/usr/include/c++/5/type_traits" 3
};
# 418 "/usr/include/c++/5/type_traits" 3
template< class >
# 419 "/usr/include/c++/5/type_traits" 3
struct is_function : public false_type {
# 420 "/usr/include/c++/5/type_traits" 3
};
# 422 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 423 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...)> : public true_type {
# 424 "/usr/include/c++/5/type_traits" 3
};
# 426 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 427 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) &> : public true_type {
# 428 "/usr/include/c++/5/type_traits" 3
};
# 430 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 431 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) &&> : public true_type {
# 432 "/usr/include/c++/5/type_traits" 3
};
# 434 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 435 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...)> : public true_type {
# 436 "/usr/include/c++/5/type_traits" 3
};
# 438 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 439 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) &> : public true_type {
# 440 "/usr/include/c++/5/type_traits" 3
};
# 442 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 443 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) &&> : public true_type {
# 444 "/usr/include/c++/5/type_traits" 3
};
# 446 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 447 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const> : public true_type {
# 448 "/usr/include/c++/5/type_traits" 3
};
# 450 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 451 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const &> : public true_type {
# 452 "/usr/include/c++/5/type_traits" 3
};
# 454 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 455 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const &&> : public true_type {
# 456 "/usr/include/c++/5/type_traits" 3
};
# 458 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 459 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const> : public true_type {
# 460 "/usr/include/c++/5/type_traits" 3
};
# 462 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 463 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const &> : public true_type {
# 464 "/usr/include/c++/5/type_traits" 3
};
# 466 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 467 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const &&> : public true_type {
# 468 "/usr/include/c++/5/type_traits" 3
};
# 470 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 471 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile> : public true_type {
# 472 "/usr/include/c++/5/type_traits" 3
};
# 474 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 475 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile &> : public true_type {
# 476 "/usr/include/c++/5/type_traits" 3
};
# 478 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 479 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) volatile &&> : public true_type {
# 480 "/usr/include/c++/5/type_traits" 3
};
# 482 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 483 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile> : public true_type {
# 484 "/usr/include/c++/5/type_traits" 3
};
# 486 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 487 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile &> : public true_type {
# 488 "/usr/include/c++/5/type_traits" 3
};
# 490 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 491 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) volatile &&> : public true_type {
# 492 "/usr/include/c++/5/type_traits" 3
};
# 494 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 495 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile> : public true_type {
# 496 "/usr/include/c++/5/type_traits" 3
};
# 498 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 499 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile &> : public true_type {
# 500 "/usr/include/c++/5/type_traits" 3
};
# 502 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 503 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ...) const volatile &&> : public true_type {
# 504 "/usr/include/c++/5/type_traits" 3
};
# 506 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 507 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile> : public true_type {
# 508 "/usr/include/c++/5/type_traits" 3
};
# 510 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 511 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile &> : public true_type {
# 512 "/usr/include/c++/5/type_traits" 3
};
# 514 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._ArgTypes>
# 515 "/usr/include/c++/5/type_traits" 3
struct is_function< _Res (_ArgTypes ..., ...) const volatile &&> : public true_type {
# 516 "/usr/include/c++/5/type_traits" 3
};
# 520 "/usr/include/c++/5/type_traits" 3
template< class >
# 521 "/usr/include/c++/5/type_traits" 3
struct __is_null_pointer_helper : public false_type {
# 522 "/usr/include/c++/5/type_traits" 3
};
# 525 "/usr/include/c++/5/type_traits" 3
template<> struct __is_null_pointer_helper< nullptr_t> : public true_type {
# 526 "/usr/include/c++/5/type_traits" 3
};
# 529 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 530 "/usr/include/c++/5/type_traits" 3
struct is_null_pointer : public __is_null_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 532 "/usr/include/c++/5/type_traits" 3
};
# 535 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 536 "/usr/include/c++/5/type_traits" 3
struct __is_nullptr_t : public is_null_pointer< _Tp> {
# 538 "/usr/include/c++/5/type_traits" 3
};
# 543 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 544 "/usr/include/c++/5/type_traits" 3
struct is_reference : public __or_< is_lvalue_reference< _Tp> , is_rvalue_reference< _Tp> > ::type {
# 547 "/usr/include/c++/5/type_traits" 3
};
# 550 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 551 "/usr/include/c++/5/type_traits" 3
struct is_arithmetic : public __or_< is_integral< _Tp> , is_floating_point< _Tp> > ::type {
# 553 "/usr/include/c++/5/type_traits" 3
};
# 556 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 557 "/usr/include/c++/5/type_traits" 3
struct is_fundamental : public __or_< is_arithmetic< _Tp> , is_void< _Tp> , is_null_pointer< _Tp> > ::type {
# 560 "/usr/include/c++/5/type_traits" 3
};
# 563 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 564 "/usr/include/c++/5/type_traits" 3
struct is_object : public __not_< __or_< is_function< _Tp> , is_reference< _Tp> , is_void< _Tp> > > ::type {
# 567 "/usr/include/c++/5/type_traits" 3
};
# 569 "/usr/include/c++/5/type_traits" 3
template< class > struct is_member_pointer;
# 573 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 574 "/usr/include/c++/5/type_traits" 3
struct is_scalar : public __or_< is_arithmetic< _Tp> , is_enum< _Tp> , is_pointer< _Tp> , is_member_pointer< _Tp> , is_null_pointer< _Tp> > ::type {
# 577 "/usr/include/c++/5/type_traits" 3
};
# 580 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 581 "/usr/include/c++/5/type_traits" 3
struct is_compound : public integral_constant< bool, !is_fundamental< _Tp> ::value> {
# 582 "/usr/include/c++/5/type_traits" 3
};
# 584 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 585 "/usr/include/c++/5/type_traits" 3
struct __is_member_pointer_helper : public false_type {
# 586 "/usr/include/c++/5/type_traits" 3
};
# 588 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Cp>
# 589 "/usr/include/c++/5/type_traits" 3
struct __is_member_pointer_helper< _Tp (_Cp::*)> : public true_type {
# 590 "/usr/include/c++/5/type_traits" 3
};
# 593 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 594 "/usr/include/c++/5/type_traits" 3
struct is_member_pointer : public __is_member_pointer_helper< typename remove_cv< _Tp> ::type> ::type {
# 596 "/usr/include/c++/5/type_traits" 3
};
# 600 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 601 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable : public __or_< is_object< _Tp> , is_reference< _Tp> > ::type {
# 603 "/usr/include/c++/5/type_traits" 3
};
# 605 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._Args>
# 606 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable< _Res (_Args ...)> : public true_type {
# 608 "/usr/include/c++/5/type_traits" 3
};
# 610 "/usr/include/c++/5/type_traits" 3
template< class _Res, class ..._Args>
# 611 "/usr/include/c++/5/type_traits" 3
struct __is_referenceable< _Res (_Args ..., ...)> : public true_type {
# 613 "/usr/include/c++/5/type_traits" 3
};
# 618 "/usr/include/c++/5/type_traits" 3
template< class >
# 619 "/usr/include/c++/5/type_traits" 3
struct is_const : public false_type {
# 620 "/usr/include/c++/5/type_traits" 3
};
# 622 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 623 "/usr/include/c++/5/type_traits" 3
struct is_const< const _Tp> : public true_type {
# 624 "/usr/include/c++/5/type_traits" 3
};
# 627 "/usr/include/c++/5/type_traits" 3
template< class >
# 628 "/usr/include/c++/5/type_traits" 3
struct is_volatile : public false_type {
# 629 "/usr/include/c++/5/type_traits" 3
};
# 631 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 632 "/usr/include/c++/5/type_traits" 3
struct is_volatile< volatile _Tp> : public true_type {
# 633 "/usr/include/c++/5/type_traits" 3
};
# 636 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 637 "/usr/include/c++/5/type_traits" 3
struct is_trivial : public integral_constant< bool, __is_trivial(_Tp)> {
# 639 "/usr/include/c++/5/type_traits" 3
};
# 642 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 643 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copyable : public integral_constant< bool, __is_trivially_copyable(_Tp)> {
# 645 "/usr/include/c++/5/type_traits" 3
};
# 648 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 649 "/usr/include/c++/5/type_traits" 3
struct is_standard_layout : public integral_constant< bool, __is_standard_layout(_Tp)> {
# 651 "/usr/include/c++/5/type_traits" 3
};
# 655 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 656 "/usr/include/c++/5/type_traits" 3
struct is_pod : public integral_constant< bool, __is_pod(_Tp)> {
# 658 "/usr/include/c++/5/type_traits" 3
};
# 661 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 662 "/usr/include/c++/5/type_traits" 3
struct is_literal_type : public integral_constant< bool, __is_literal_type(_Tp)> {
# 664 "/usr/include/c++/5/type_traits" 3
};
# 667 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 668 "/usr/include/c++/5/type_traits" 3
struct is_empty : public integral_constant< bool, __is_empty(_Tp)> {
# 670 "/usr/include/c++/5/type_traits" 3
};
# 673 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 674 "/usr/include/c++/5/type_traits" 3
struct is_polymorphic : public integral_constant< bool, __is_polymorphic(_Tp)> {
# 676 "/usr/include/c++/5/type_traits" 3
};
# 688 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 689 "/usr/include/c++/5/type_traits" 3
struct is_abstract : public integral_constant< bool, __is_abstract(_Tp)> {
# 691 "/usr/include/c++/5/type_traits" 3
};
# 693 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 694 "/usr/include/c++/5/type_traits" 3
 = is_arithmetic< _Tp> ::value>
# 695 "/usr/include/c++/5/type_traits" 3
struct __is_signed_helper : public false_type {
# 696 "/usr/include/c++/5/type_traits" 3
};
# 698 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 699 "/usr/include/c++/5/type_traits" 3
struct __is_signed_helper< _Tp, true> : public integral_constant< bool, ((_Tp)(-1)) < ((_Tp)0)> {
# 701 "/usr/include/c++/5/type_traits" 3
};
# 704 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 705 "/usr/include/c++/5/type_traits" 3
struct is_signed : public __is_signed_helper< _Tp> ::type {
# 707 "/usr/include/c++/5/type_traits" 3
};
# 710 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 711 "/usr/include/c++/5/type_traits" 3
struct is_unsigned : public __and_< is_arithmetic< _Tp> , __not_< is_signed< _Tp> > > ::type {
# 713 "/usr/include/c++/5/type_traits" 3
};
# 718 "/usr/include/c++/5/type_traits" 3
template< class > struct add_rvalue_reference;
# 725 "/usr/include/c++/5/type_traits" 3
template< class _Tp> inline typename add_rvalue_reference< _Tp> ::type declval() noexcept;
# 728 "/usr/include/c++/5/type_traits" 3
template< class , unsigned = 0U> struct extent;
# 731 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_all_extents;
# 734 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 735 "/usr/include/c++/5/type_traits" 3
struct __is_array_known_bounds : public integral_constant< bool, (extent< _Tp> ::value > 0)> {
# 737 "/usr/include/c++/5/type_traits" 3
};
# 739 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 740 "/usr/include/c++/5/type_traits" 3
struct __is_array_unknown_bounds : public __and_< is_array< _Tp> , __not_< extent< _Tp> > > ::type {
# 742 "/usr/include/c++/5/type_traits" 3
};
# 749 "/usr/include/c++/5/type_traits" 3
struct __do_is_destructible_impl {
# 751 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class = __decltype(((declval< _Tp &> ().~_Tp())))> static true_type __test(int);
# 754 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 756 "/usr/include/c++/5/type_traits" 3
};
# 758 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 759 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_impl : public __do_is_destructible_impl {
# 762 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 763 "/usr/include/c++/5/type_traits" 3
};
# 765 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 766 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 769 "/usr/include/c++/5/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_destructible_safe;
# 772 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 773 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, false, false> : public __is_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 776 "/usr/include/c++/5/type_traits" 3
};
# 778 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 779 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, true, false> : public false_type {
# 780 "/usr/include/c++/5/type_traits" 3
};
# 782 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 783 "/usr/include/c++/5/type_traits" 3
struct __is_destructible_safe< _Tp, false, true> : public true_type {
# 784 "/usr/include/c++/5/type_traits" 3
};
# 787 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 788 "/usr/include/c++/5/type_traits" 3
struct is_destructible : public __is_destructible_safe< _Tp> ::type {
# 790 "/usr/include/c++/5/type_traits" 3
};
# 796 "/usr/include/c++/5/type_traits" 3
struct __do_is_nt_destructible_impl {
# 798 "/usr/include/c++/5/type_traits" 3
template< class _Tp> static integral_constant< bool, noexcept((declval< _Tp &> ().~_Tp()))> __test(int);
# 802 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 804 "/usr/include/c++/5/type_traits" 3
};
# 806 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 807 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_impl : public __do_is_nt_destructible_impl {
# 810 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 811 "/usr/include/c++/5/type_traits" 3
};
# 813 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 814 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 817 "/usr/include/c++/5/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_nt_destructible_safe;
# 820 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 821 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, false> : public __is_nt_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 824 "/usr/include/c++/5/type_traits" 3
};
# 826 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 827 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, true, false> : public false_type {
# 828 "/usr/include/c++/5/type_traits" 3
};
# 830 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 831 "/usr/include/c++/5/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, true> : public true_type {
# 832 "/usr/include/c++/5/type_traits" 3
};
# 835 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 836 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_destructible : public __is_nt_destructible_safe< _Tp> ::type {
# 838 "/usr/include/c++/5/type_traits" 3
};
# 840 "/usr/include/c++/5/type_traits" 3
struct __do_is_default_constructible_impl {
# 842 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class = __decltype((_Tp()))> static true_type __test(int);
# 845 "/usr/include/c++/5/type_traits" 3
template< class > static false_type __test(...);
# 847 "/usr/include/c++/5/type_traits" 3
};
# 849 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 850 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_impl : public __do_is_default_constructible_impl {
# 853 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 854 "/usr/include/c++/5/type_traits" 3
};
# 856 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 857 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_atom : public __and_< __not_< is_void< _Tp> > , __is_default_constructible_impl< _Tp> > ::type {
# 860 "/usr/include/c++/5/type_traits" 3
};
# 862 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = is_array< _Tp> ::value> struct __is_default_constructible_safe;
# 870 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 871 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_safe< _Tp, true> : public __and_< __is_array_known_bounds< _Tp> , __is_default_constructible_atom< typename remove_all_extents< _Tp> ::type> > ::type {
# 875 "/usr/include/c++/5/type_traits" 3
};
# 877 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 878 "/usr/include/c++/5/type_traits" 3
struct __is_default_constructible_safe< _Tp, false> : public __is_default_constructible_atom< _Tp> ::type {
# 880 "/usr/include/c++/5/type_traits" 3
};
# 883 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 884 "/usr/include/c++/5/type_traits" 3
struct is_default_constructible : public __is_default_constructible_safe< _Tp> ::type {
# 886 "/usr/include/c++/5/type_traits" 3
};
# 900 "/usr/include/c++/5/type_traits" 3
struct __do_is_static_castable_impl {
# 902 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, class
# 903 "/usr/include/c++/5/type_traits" 3
 = __decltype((static_cast< _To>(declval< _From> ())))> static true_type
# 902 "/usr/include/c++/5/type_traits" 3
__test(int);
# 906 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 908 "/usr/include/c++/5/type_traits" 3
};
# 910 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 911 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable_impl : public __do_is_static_castable_impl {
# 914 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _From, _To> (0))) type;
# 915 "/usr/include/c++/5/type_traits" 3
};
# 917 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 918 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable_safe : public __is_static_castable_impl< _From, _To> ::type {
# 920 "/usr/include/c++/5/type_traits" 3
};
# 923 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 924 "/usr/include/c++/5/type_traits" 3
struct __is_static_castable : public integral_constant< bool, __is_static_castable_safe< _From, _To> ::value> {
# 927 "/usr/include/c++/5/type_traits" 3
};
# 934 "/usr/include/c++/5/type_traits" 3
struct __do_is_direct_constructible_impl {
# 936 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg, class
# 937 "/usr/include/c++/5/type_traits" 3
 = __decltype((::new (_Tp)(declval< _Arg> ())))> static true_type
# 936 "/usr/include/c++/5/type_traits" 3
__test(int);
# 940 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 942 "/usr/include/c++/5/type_traits" 3
};
# 944 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 945 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_impl : public __do_is_direct_constructible_impl {
# 948 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp, _Arg> (0))) type;
# 949 "/usr/include/c++/5/type_traits" 3
};
# 951 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 952 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_new_safe : public __and_< is_destructible< _Tp> , __is_direct_constructible_impl< _Tp, _Arg> > ::type {
# 955 "/usr/include/c++/5/type_traits" 3
};
# 957 "/usr/include/c++/5/type_traits" 3
template< class , class > struct is_same;
# 960 "/usr/include/c++/5/type_traits" 3
template< class , class > struct is_base_of;
# 963 "/usr/include/c++/5/type_traits" 3
template< class > struct remove_reference;
# 966 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 967 "/usr/include/c++/5/type_traits" 3
 = __not_< __or_< is_void< _From> , is_function< _From> > > ::value> struct __is_base_to_derived_ref;
# 973 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 974 "/usr/include/c++/5/type_traits" 3
struct __is_base_to_derived_ref< _From, _To, true> {
# 977 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _From> ::type> ::type __src_t;
# 979 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _To> ::type> ::type __dst_t;
# 981 "/usr/include/c++/5/type_traits" 3
typedef __and_< __not_< is_same< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> > , is_base_of< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> > type;
# 982 "/usr/include/c++/5/type_traits" 3
static constexpr bool value = (type::value);
# 983 "/usr/include/c++/5/type_traits" 3
};
# 985 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 986 "/usr/include/c++/5/type_traits" 3
struct __is_base_to_derived_ref< _From, _To, false> : public false_type {
# 988 "/usr/include/c++/5/type_traits" 3
};
# 990 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 991 "/usr/include/c++/5/type_traits" 3
 = __and_< is_lvalue_reference< _From> , is_rvalue_reference< _To> > ::value> struct __is_lvalue_to_rvalue_ref;
# 997 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 998 "/usr/include/c++/5/type_traits" 3
struct __is_lvalue_to_rvalue_ref< _From, _To, true> {
# 1001 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _From> ::type> ::type __src_t;
# 1003 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _To> ::type> ::type __dst_t;
# 1006 "/usr/include/c++/5/type_traits" 3
typedef __and_< __not_< is_function< typename remove_cv< typename remove_reference< _From> ::type> ::type> > , __or_< is_same< typename remove_cv< typename remove_reference< _From> ::type> ::type, typename remove_cv< typename remove_reference< _To> ::type> ::type> , is_base_of< typename remove_cv< typename remove_reference< _To> ::type> ::type, typename remove_cv< typename remove_reference< _From> ::type> ::type> > > type;
# 1007 "/usr/include/c++/5/type_traits" 3
static constexpr bool value = (type::value);
# 1008 "/usr/include/c++/5/type_traits" 3
};
# 1010 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1011 "/usr/include/c++/5/type_traits" 3
struct __is_lvalue_to_rvalue_ref< _From, _To, false> : public false_type {
# 1013 "/usr/include/c++/5/type_traits" 3
};
# 1021 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1022 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_ref_cast : public __and_< __is_static_castable< _Arg, _Tp> , __not_< __or_< __is_base_to_derived_ref< _Arg, _Tp> , __is_lvalue_to_rvalue_ref< _Arg, _Tp> > > > ::type {
# 1027 "/usr/include/c++/5/type_traits" 3
};
# 1029 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1030 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible_new : public conditional< is_reference< _Tp> ::value, __is_direct_constructible_ref_cast< _Tp, _Arg> , __is_direct_constructible_new_safe< _Tp, _Arg> > ::type {
# 1035 "/usr/include/c++/5/type_traits" 3
};
# 1037 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1038 "/usr/include/c++/5/type_traits" 3
struct __is_direct_constructible : public __is_direct_constructible_new< _Tp, _Arg> ::type {
# 1040 "/usr/include/c++/5/type_traits" 3
};
# 1047 "/usr/include/c++/5/type_traits" 3
struct __do_is_nary_constructible_impl {
# 1049 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args, class
# 1050 "/usr/include/c++/5/type_traits" 3
 = __decltype((_Tp(declval< _Args> ()...)))> static true_type
# 1049 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1053 "/usr/include/c++/5/type_traits" 3
template< class , class ...> static false_type __test(...);
# 1055 "/usr/include/c++/5/type_traits" 3
};
# 1057 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1058 "/usr/include/c++/5/type_traits" 3
struct __is_nary_constructible_impl : public __do_is_nary_constructible_impl {
# 1061 "/usr/include/c++/5/type_traits" 3
typedef __decltype((__test< _Tp, _Args...> (0))) type;
# 1062 "/usr/include/c++/5/type_traits" 3
};
# 1064 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1065 "/usr/include/c++/5/type_traits" 3
struct __is_nary_constructible : public __is_nary_constructible_impl< _Tp, _Args...> ::type {
# 1068 "/usr/include/c++/5/type_traits" 3
static_assert((sizeof...(_Args) > (1)), "Only useful for > 1 arguments");
# 1070 "/usr/include/c++/5/type_traits" 3
};
# 1072 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1073 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl : public __is_nary_constructible< _Tp, _Args...> {
# 1075 "/usr/include/c++/5/type_traits" 3
};
# 1077 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1078 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl< _Tp, _Arg> : public __is_direct_constructible< _Tp, _Arg> {
# 1080 "/usr/include/c++/5/type_traits" 3
};
# 1082 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1083 "/usr/include/c++/5/type_traits" 3
struct __is_constructible_impl< _Tp> : public is_default_constructible< _Tp> {
# 1085 "/usr/include/c++/5/type_traits" 3
};
# 1088 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1089 "/usr/include/c++/5/type_traits" 3
struct is_constructible : public __is_constructible_impl< _Tp, _Args...> ::type {
# 1091 "/usr/include/c++/5/type_traits" 3
};
# 1093 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_constructible_impl;
# 1096 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1097 "/usr/include/c++/5/type_traits" 3
struct __is_copy_constructible_impl< _Tp, false> : public false_type {
# 1098 "/usr/include/c++/5/type_traits" 3
};
# 1100 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1101 "/usr/include/c++/5/type_traits" 3
struct __is_copy_constructible_impl< _Tp, true> : public is_constructible< _Tp, const _Tp &> {
# 1103 "/usr/include/c++/5/type_traits" 3
};
# 1106 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1107 "/usr/include/c++/5/type_traits" 3
struct is_copy_constructible : public __is_copy_constructible_impl< _Tp> {
# 1109 "/usr/include/c++/5/type_traits" 3
};
# 1111 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_constructible_impl;
# 1114 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1115 "/usr/include/c++/5/type_traits" 3
struct __is_move_constructible_impl< _Tp, false> : public false_type {
# 1116 "/usr/include/c++/5/type_traits" 3
};
# 1118 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1119 "/usr/include/c++/5/type_traits" 3
struct __is_move_constructible_impl< _Tp, true> : public is_constructible< _Tp, _Tp &&> {
# 1121 "/usr/include/c++/5/type_traits" 3
};
# 1124 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1125 "/usr/include/c++/5/type_traits" 3
struct is_move_constructible : public __is_move_constructible_impl< _Tp> {
# 1127 "/usr/include/c++/5/type_traits" 3
};
# 1129 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1130 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_atom : public integral_constant< bool, noexcept((_Tp()))> {
# 1132 "/usr/include/c++/5/type_traits" 3
};
# 1134 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = is_array< _Tp> ::value> struct __is_nt_default_constructible_impl;
# 1137 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1138 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_impl< _Tp, true> : public __and_< __is_array_known_bounds< _Tp> , __is_nt_default_constructible_atom< typename remove_all_extents< _Tp> ::type> > ::type {
# 1142 "/usr/include/c++/5/type_traits" 3
};
# 1144 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1145 "/usr/include/c++/5/type_traits" 3
struct __is_nt_default_constructible_impl< _Tp, false> : public __is_nt_default_constructible_atom< _Tp> {
# 1147 "/usr/include/c++/5/type_traits" 3
};
# 1150 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1151 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_default_constructible : public __and_< is_default_constructible< _Tp> , __is_nt_default_constructible_impl< _Tp> > ::type {
# 1154 "/usr/include/c++/5/type_traits" 3
};
# 1156 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1157 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl : public integral_constant< bool, noexcept((_Tp(declval< _Args> ()...)))> {
# 1159 "/usr/include/c++/5/type_traits" 3
};
# 1161 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Arg>
# 1162 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl< _Tp, _Arg> : public integral_constant< bool, noexcept((static_cast< _Tp>(declval< _Arg> ())))> {
# 1165 "/usr/include/c++/5/type_traits" 3
};
# 1167 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1168 "/usr/include/c++/5/type_traits" 3
struct __is_nt_constructible_impl< _Tp> : public is_nothrow_default_constructible< _Tp> {
# 1170 "/usr/include/c++/5/type_traits" 3
};
# 1173 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1174 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_constructible : public __and_< is_constructible< _Tp, _Args...> , __is_nt_constructible_impl< _Tp, _Args...> > ::type {
# 1177 "/usr/include/c++/5/type_traits" 3
};
# 1179 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_copy_constructible_impl;
# 1182 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1183 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, false> : public false_type {
# 1184 "/usr/include/c++/5/type_traits" 3
};
# 1186 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1187 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, true> : public is_nothrow_constructible< _Tp, const _Tp &> {
# 1189 "/usr/include/c++/5/type_traits" 3
};
# 1192 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1193 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_copy_constructible : public __is_nothrow_copy_constructible_impl< _Tp> {
# 1195 "/usr/include/c++/5/type_traits" 3
};
# 1197 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_move_constructible_impl;
# 1200 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1201 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, false> : public false_type {
# 1202 "/usr/include/c++/5/type_traits" 3
};
# 1204 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1205 "/usr/include/c++/5/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, true> : public is_nothrow_constructible< _Tp, _Tp &&> {
# 1207 "/usr/include/c++/5/type_traits" 3
};
# 1210 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1211 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_move_constructible : public __is_nothrow_move_constructible_impl< _Tp> {
# 1213 "/usr/include/c++/5/type_traits" 3
};
# 1215 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1216 "/usr/include/c++/5/type_traits" 3
class __is_assignable_helper {
# 1218 "/usr/include/c++/5/type_traits" 3
template< class _Tp1, class _Up1, class
# 1219 "/usr/include/c++/5/type_traits" 3
 = __decltype((declval< _Tp1> () = declval< _Up1> ()))> static true_type
# 1218 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1223 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 1228 "/usr/include/c++/5/type_traits" 3
public: typedef __decltype((__test< _Tp, _Up> (0))) type;
# 1229 "/usr/include/c++/5/type_traits" 3
};
# 1232 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1233 "/usr/include/c++/5/type_traits" 3
struct is_assignable : public __is_assignable_helper< _Tp, _Up> ::type {
# 1235 "/usr/include/c++/5/type_traits" 3
};
# 1237 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_assignable_impl;
# 1240 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1241 "/usr/include/c++/5/type_traits" 3
struct __is_copy_assignable_impl< _Tp, false> : public false_type {
# 1242 "/usr/include/c++/5/type_traits" 3
};
# 1244 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1245 "/usr/include/c++/5/type_traits" 3
struct __is_copy_assignable_impl< _Tp, true> : public is_assignable< _Tp &, const _Tp &> {
# 1247 "/usr/include/c++/5/type_traits" 3
};
# 1250 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1251 "/usr/include/c++/5/type_traits" 3
struct is_copy_assignable : public __is_copy_assignable_impl< _Tp> {
# 1253 "/usr/include/c++/5/type_traits" 3
};
# 1255 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_assignable_impl;
# 1258 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1259 "/usr/include/c++/5/type_traits" 3
struct __is_move_assignable_impl< _Tp, false> : public false_type {
# 1260 "/usr/include/c++/5/type_traits" 3
};
# 1262 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1263 "/usr/include/c++/5/type_traits" 3
struct __is_move_assignable_impl< _Tp, true> : public is_assignable< _Tp &, _Tp &&> {
# 1265 "/usr/include/c++/5/type_traits" 3
};
# 1268 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1269 "/usr/include/c++/5/type_traits" 3
struct is_move_assignable : public __is_move_assignable_impl< _Tp> {
# 1271 "/usr/include/c++/5/type_traits" 3
};
# 1273 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1274 "/usr/include/c++/5/type_traits" 3
struct __is_nt_assignable_impl : public integral_constant< bool, noexcept((declval< _Tp> () = declval< _Up> ()))> {
# 1276 "/usr/include/c++/5/type_traits" 3
};
# 1279 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1280 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_assignable : public __and_< is_assignable< _Tp, _Up> , __is_nt_assignable_impl< _Tp, _Up> > ::type {
# 1283 "/usr/include/c++/5/type_traits" 3
};
# 1285 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_copy_assignable_impl;
# 1288 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1289 "/usr/include/c++/5/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, false> : public false_type {
# 1290 "/usr/include/c++/5/type_traits" 3
};
# 1292 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1293 "/usr/include/c++/5/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, true> : public is_nothrow_assignable< _Tp &, const _Tp &> {
# 1295 "/usr/include/c++/5/type_traits" 3
};
# 1298 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1299 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_copy_assignable : public __is_nt_copy_assignable_impl< _Tp> {
# 1301 "/usr/include/c++/5/type_traits" 3
};
# 1303 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_move_assignable_impl;
# 1306 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1307 "/usr/include/c++/5/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, false> : public false_type {
# 1308 "/usr/include/c++/5/type_traits" 3
};
# 1310 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1311 "/usr/include/c++/5/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, true> : public is_nothrow_assignable< _Tp &, _Tp &&> {
# 1313 "/usr/include/c++/5/type_traits" 3
};
# 1316 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1317 "/usr/include/c++/5/type_traits" 3
struct is_nothrow_move_assignable : public __is_nt_move_assignable_impl< _Tp> {
# 1319 "/usr/include/c++/5/type_traits" 3
};
# 1322 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Args>
# 1323 "/usr/include/c++/5/type_traits" 3
struct is_trivially_constructible : public __and_< is_constructible< _Tp, _Args...> , integral_constant< bool, __is_trivially_constructible(_Tp, _Args...)> > ::type {
# 1326 "/usr/include/c++/5/type_traits" 3
};
# 1329 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1330 "/usr/include/c++/5/type_traits" 3
struct is_trivially_default_constructible : public is_trivially_constructible< _Tp> ::type {
# 1332 "/usr/include/c++/5/type_traits" 3
};
# 1335 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1336 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copy_constructible : public __and_< is_copy_constructible< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, const _Tp &)> > ::type {
# 1340 "/usr/include/c++/5/type_traits" 3
};
# 1343 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1344 "/usr/include/c++/5/type_traits" 3
struct is_trivially_move_constructible : public __and_< is_move_constructible< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, _Tp &&)> > ::type {
# 1348 "/usr/include/c++/5/type_traits" 3
};
# 1351 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1352 "/usr/include/c++/5/type_traits" 3
struct is_trivially_assignable : public __and_< is_assignable< _Tp, _Up> , integral_constant< bool, __is_trivially_assignable(_Tp, _Up)> > ::type {
# 1356 "/usr/include/c++/5/type_traits" 3
};
# 1359 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1360 "/usr/include/c++/5/type_traits" 3
struct is_trivially_copy_assignable : public __and_< is_copy_assignable< _Tp> , integral_constant< bool, __is_trivially_assignable(_Tp &, const _Tp &)> > ::type {
# 1364 "/usr/include/c++/5/type_traits" 3
};
# 1367 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1368 "/usr/include/c++/5/type_traits" 3
struct is_trivially_move_assignable : public __and_< is_move_assignable< _Tp> , integral_constant< bool, __is_trivially_assignable(_Tp &, _Tp &&)> > ::type {
# 1372 "/usr/include/c++/5/type_traits" 3
};
# 1375 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1376 "/usr/include/c++/5/type_traits" 3
struct is_trivially_destructible : public __and_< is_destructible< _Tp> , integral_constant< bool, __has_trivial_destructor(_Tp)> > ::type {
# 1379 "/usr/include/c++/5/type_traits" 3
};
# 1382 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1383 "/usr/include/c++/5/type_traits" 3
struct has_trivial_default_constructor : public integral_constant< bool, __has_trivial_constructor(_Tp)> {
# 1385 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1388 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1389 "/usr/include/c++/5/type_traits" 3
struct has_trivial_copy_constructor : public integral_constant< bool, __has_trivial_copy(_Tp)> {
# 1391 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1394 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1395 "/usr/include/c++/5/type_traits" 3
struct has_trivial_copy_assign : public integral_constant< bool, __has_trivial_assign(_Tp)> {
# 1397 "/usr/include/c++/5/type_traits" 3
} __attribute((__deprecated__));
# 1400 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1401 "/usr/include/c++/5/type_traits" 3
struct has_virtual_destructor : public integral_constant< bool, __has_virtual_destructor(_Tp)> {
# 1403 "/usr/include/c++/5/type_traits" 3
};
# 1409 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1410 "/usr/include/c++/5/type_traits" 3
struct alignment_of : public integral_constant< unsigned long, __alignof__(_Tp)> {
# 1411 "/usr/include/c++/5/type_traits" 3
};
# 1414 "/usr/include/c++/5/type_traits" 3
template< class >
# 1415 "/usr/include/c++/5/type_traits" 3
struct rank : public integral_constant< unsigned long, 0UL> {
# 1416 "/usr/include/c++/5/type_traits" 3
};
# 1418 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1419 "/usr/include/c++/5/type_traits" 3
struct rank< _Tp [_Size]> : public integral_constant< unsigned long, 1 + rank< _Tp> ::value> {
# 1420 "/usr/include/c++/5/type_traits" 3
};
# 1422 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1423 "/usr/include/c++/5/type_traits" 3
struct rank< _Tp []> : public integral_constant< unsigned long, 1 + rank< _Tp> ::value> {
# 1424 "/usr/include/c++/5/type_traits" 3
};
# 1427 "/usr/include/c++/5/type_traits" 3
template< class , unsigned _Uint>
# 1428 "/usr/include/c++/5/type_traits" 3
struct extent : public integral_constant< unsigned long, 0UL> {
# 1429 "/usr/include/c++/5/type_traits" 3
};
# 1431 "/usr/include/c++/5/type_traits" 3
template< class _Tp, unsigned _Uint, size_t _Size>
# 1432 "/usr/include/c++/5/type_traits" 3
struct extent< _Tp [_Size], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? _Size : extent< _Tp, _Uint - (1)> ::value> {
# 1436 "/usr/include/c++/5/type_traits" 3
};
# 1438 "/usr/include/c++/5/type_traits" 3
template< class _Tp, unsigned _Uint>
# 1439 "/usr/include/c++/5/type_traits" 3
struct extent< _Tp [], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? 0 : extent< _Tp, _Uint - (1)> ::value> {
# 1443 "/usr/include/c++/5/type_traits" 3
};
# 1449 "/usr/include/c++/5/type_traits" 3
template< class , class >
# 1450 "/usr/include/c++/5/type_traits" 3
struct is_same : public false_type {
# 1451 "/usr/include/c++/5/type_traits" 3
};
# 1453 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1454 "/usr/include/c++/5/type_traits" 3
struct is_same< _Tp, _Tp> : public true_type {
# 1455 "/usr/include/c++/5/type_traits" 3
};
# 1458 "/usr/include/c++/5/type_traits" 3
template< class _Base, class _Derived>
# 1459 "/usr/include/c++/5/type_traits" 3
struct is_base_of : public integral_constant< bool, __is_base_of(_Base, _Derived)> {
# 1461 "/usr/include/c++/5/type_traits" 3
};
# 1463 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To, bool
# 1464 "/usr/include/c++/5/type_traits" 3
 = __or_< is_void< _From> , is_function< _To> , is_array< _To> > ::value>
# 1466 "/usr/include/c++/5/type_traits" 3
struct __is_convertible_helper {
# 1467 "/usr/include/c++/5/type_traits" 3
typedef typename is_void< _To> ::type type; };
# 1469 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1470 "/usr/include/c++/5/type_traits" 3
class __is_convertible_helper< _From, _To, false> {
# 1472 "/usr/include/c++/5/type_traits" 3
template< class _To1> static void __test_aux(_To1);
# 1475 "/usr/include/c++/5/type_traits" 3
template< class _From1, class _To1, class
# 1476 "/usr/include/c++/5/type_traits" 3
 = __decltype((__test_aux< _To1> (std::declval< _From1> ())))> static true_type
# 1475 "/usr/include/c++/5/type_traits" 3
__test(int);
# 1480 "/usr/include/c++/5/type_traits" 3
template< class , class > static false_type __test(...);
# 1485 "/usr/include/c++/5/type_traits" 3
public: typedef __decltype((__test< _From, _To> (0))) type;
# 1486 "/usr/include/c++/5/type_traits" 3
};
# 1490 "/usr/include/c++/5/type_traits" 3
template< class _From, class _To>
# 1491 "/usr/include/c++/5/type_traits" 3
struct is_convertible : public __is_convertible_helper< _From, _To> ::type {
# 1493 "/usr/include/c++/5/type_traits" 3
};
# 1499 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1500 "/usr/include/c++/5/type_traits" 3
struct remove_const {
# 1501 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1503 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1504 "/usr/include/c++/5/type_traits" 3
struct remove_const< const _Tp> {
# 1505 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1508 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1509 "/usr/include/c++/5/type_traits" 3
struct remove_volatile {
# 1510 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1512 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1513 "/usr/include/c++/5/type_traits" 3
struct remove_volatile< volatile _Tp> {
# 1514 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1517 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1518 "/usr/include/c++/5/type_traits" 3
struct remove_cv {
# 1521 "/usr/include/c++/5/type_traits" 3
typedef typename remove_const< typename remove_volatile< _Tp> ::type> ::type type;
# 1522 "/usr/include/c++/5/type_traits" 3
};
# 1525 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1526 "/usr/include/c++/5/type_traits" 3
struct add_const {
# 1527 "/usr/include/c++/5/type_traits" 3
typedef const _Tp type; };
# 1530 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1531 "/usr/include/c++/5/type_traits" 3
struct add_volatile {
# 1532 "/usr/include/c++/5/type_traits" 3
typedef volatile _Tp type; };
# 1535 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1536 "/usr/include/c++/5/type_traits" 3
struct add_cv {
# 1539 "/usr/include/c++/5/type_traits" 3
typedef typename add_const< typename add_volatile< _Tp> ::type> ::type type;
# 1540 "/usr/include/c++/5/type_traits" 3
};
# 1574 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1575 "/usr/include/c++/5/type_traits" 3
struct remove_reference {
# 1576 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1578 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1579 "/usr/include/c++/5/type_traits" 3
struct remove_reference< _Tp &> {
# 1580 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1582 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1583 "/usr/include/c++/5/type_traits" 3
struct remove_reference< _Tp &&> {
# 1584 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1586 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1587 "/usr/include/c++/5/type_traits" 3
struct __add_lvalue_reference_helper {
# 1588 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1590 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1591 "/usr/include/c++/5/type_traits" 3
struct __add_lvalue_reference_helper< _Tp, true> {
# 1592 "/usr/include/c++/5/type_traits" 3
typedef _Tp &type; };
# 1595 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1596 "/usr/include/c++/5/type_traits" 3
struct add_lvalue_reference : public __add_lvalue_reference_helper< _Tp> {
# 1598 "/usr/include/c++/5/type_traits" 3
};
# 1600 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1601 "/usr/include/c++/5/type_traits" 3
struct __add_rvalue_reference_helper {
# 1602 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1604 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1605 "/usr/include/c++/5/type_traits" 3
struct __add_rvalue_reference_helper< _Tp, true> {
# 1606 "/usr/include/c++/5/type_traits" 3
typedef _Tp &&type; };
# 1609 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1610 "/usr/include/c++/5/type_traits" 3
struct add_rvalue_reference : public __add_rvalue_reference_helper< _Tp> {
# 1612 "/usr/include/c++/5/type_traits" 3
};
# 1631 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified, bool _IsConst, bool _IsVol> struct __cv_selector;
# 1634 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1635 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, false, false> {
# 1636 "/usr/include/c++/5/type_traits" 3
typedef _Unqualified __type; };
# 1638 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1639 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, false, true> {
# 1640 "/usr/include/c++/5/type_traits" 3
typedef volatile _Unqualified __type; };
# 1642 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1643 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, true, false> {
# 1644 "/usr/include/c++/5/type_traits" 3
typedef const _Unqualified __type; };
# 1646 "/usr/include/c++/5/type_traits" 3
template< class _Unqualified>
# 1647 "/usr/include/c++/5/type_traits" 3
struct __cv_selector< _Unqualified, true, true> {
# 1648 "/usr/include/c++/5/type_traits" 3
typedef const volatile _Unqualified __type; };
# 1650 "/usr/include/c++/5/type_traits" 3
template< class _Qualified, class _Unqualified, bool
# 1651 "/usr/include/c++/5/type_traits" 3
_IsConst = is_const< _Qualified> ::value, bool
# 1652 "/usr/include/c++/5/type_traits" 3
_IsVol = is_volatile< _Qualified> ::value>
# 1653 "/usr/include/c++/5/type_traits" 3
class __match_cv_qualifiers {
# 1655 "/usr/include/c++/5/type_traits" 3
typedef __cv_selector< _Unqualified, _IsConst, _IsVol> __match;
# 1658 "/usr/include/c++/5/type_traits" 3
public: typedef typename __cv_selector< _Unqualified, _IsConst, _IsVol> ::__type __type;
# 1659 "/usr/include/c++/5/type_traits" 3
};
# 1662 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1663 "/usr/include/c++/5/type_traits" 3
struct __make_unsigned {
# 1664 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type; };
# 1667 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< char> {
# 1668 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __type; };
# 1671 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< signed char> {
# 1672 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __type; };
# 1675 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< short> {
# 1676 "/usr/include/c++/5/type_traits" 3
typedef unsigned short __type; };
# 1679 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< int> {
# 1680 "/usr/include/c++/5/type_traits" 3
typedef unsigned __type; };
# 1683 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< long> {
# 1684 "/usr/include/c++/5/type_traits" 3
typedef unsigned long __type; };
# 1687 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< long long> {
# 1688 "/usr/include/c++/5/type_traits" 3
typedef unsigned long long __type; };
# 1692 "/usr/include/c++/5/type_traits" 3
template<> struct __make_unsigned< wchar_t> : public __make_unsigned< int> {
# 1693 "/usr/include/c++/5/type_traits" 3
};
# 1718 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 1719 "/usr/include/c++/5/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1720 "/usr/include/c++/5/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_unsigned_selector;
# 1723 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1724 "/usr/include/c++/5/type_traits" 3
class __make_unsigned_selector< _Tp, true, false> {
# 1726 "/usr/include/c++/5/type_traits" 3
typedef __make_unsigned< typename remove_cv< _Tp> ::type> __unsignedt;
# 1727 "/usr/include/c++/5/type_traits" 3
typedef typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type __unsigned_type;
# 1728 "/usr/include/c++/5/type_traits" 3
typedef __match_cv_qualifiers< _Tp, typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type> __cv_unsigned;
# 1731 "/usr/include/c++/5/type_traits" 3
public: typedef typename __match_cv_qualifiers< _Tp, typename __make_unsigned< typename remove_cv< _Tp> ::type> ::__type> ::__type __type;
# 1732 "/usr/include/c++/5/type_traits" 3
};
# 1734 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1735 "/usr/include/c++/5/type_traits" 3
class __make_unsigned_selector< _Tp, false, true> {
# 1738 "/usr/include/c++/5/type_traits" 3
typedef unsigned char __smallest;
# 1739 "/usr/include/c++/5/type_traits" 3
static const bool __b0 = (sizeof(_Tp) <= sizeof(__smallest));
# 1740 "/usr/include/c++/5/type_traits" 3
static const bool __b1 = (sizeof(_Tp) <= sizeof(unsigned short));
# 1741 "/usr/include/c++/5/type_traits" 3
static const bool __b2 = (sizeof(_Tp) <= sizeof(unsigned));
# 1742 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b2, unsigned, unsigned long> __cond2;
# 1743 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b2, unsigned, unsigned long> ::type __cond2_type;
# 1744 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> __cond1;
# 1745 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> ::type __cond1_type;
# 1748 "/usr/include/c++/5/type_traits" 3
public: typedef typename conditional< __b0, unsigned char, typename conditional< __b1, unsigned short, typename conditional< __b2, unsigned, unsigned long> ::type> ::type> ::type __type;
# 1749 "/usr/include/c++/5/type_traits" 3
};
# 1755 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1756 "/usr/include/c++/5/type_traits" 3
struct make_unsigned {
# 1757 "/usr/include/c++/5/type_traits" 3
typedef typename __make_unsigned_selector< _Tp> ::__type type; };
# 1761 "/usr/include/c++/5/type_traits" 3
template<> struct make_unsigned< bool> ;
# 1765 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1766 "/usr/include/c++/5/type_traits" 3
struct __make_signed {
# 1767 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type; };
# 1770 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char> {
# 1771 "/usr/include/c++/5/type_traits" 3
typedef signed char __type; };
# 1774 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned char> {
# 1775 "/usr/include/c++/5/type_traits" 3
typedef signed char __type; };
# 1778 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned short> {
# 1779 "/usr/include/c++/5/type_traits" 3
typedef signed short __type; };
# 1782 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned> {
# 1783 "/usr/include/c++/5/type_traits" 3
typedef signed int __type; };
# 1786 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned long> {
# 1787 "/usr/include/c++/5/type_traits" 3
typedef signed long __type; };
# 1790 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< unsigned long long> {
# 1791 "/usr/include/c++/5/type_traits" 3
typedef signed long long __type; };
# 1801 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char16_t> : public __make_signed< unsigned short> {
# 1802 "/usr/include/c++/5/type_traits" 3
};
# 1804 "/usr/include/c++/5/type_traits" 3
template<> struct __make_signed< char32_t> : public __make_signed< unsigned> {
# 1805 "/usr/include/c++/5/type_traits" 3
};
# 1830 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool
# 1831 "/usr/include/c++/5/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1832 "/usr/include/c++/5/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_signed_selector;
# 1835 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1836 "/usr/include/c++/5/type_traits" 3
class __make_signed_selector< _Tp, true, false> {
# 1838 "/usr/include/c++/5/type_traits" 3
typedef __make_signed< typename remove_cv< _Tp> ::type> __signedt;
# 1839 "/usr/include/c++/5/type_traits" 3
typedef typename __make_signed< typename remove_cv< _Tp> ::type> ::__type __signed_type;
# 1840 "/usr/include/c++/5/type_traits" 3
typedef __match_cv_qualifiers< _Tp, typename __make_signed< typename remove_cv< _Tp> ::type> ::__type> __cv_signed;
# 1843 "/usr/include/c++/5/type_traits" 3
public: typedef typename __match_cv_qualifiers< _Tp, typename __make_signed< typename remove_cv< _Tp> ::type> ::__type> ::__type __type;
# 1844 "/usr/include/c++/5/type_traits" 3
};
# 1846 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1847 "/usr/include/c++/5/type_traits" 3
class __make_signed_selector< _Tp, false, true> {
# 1850 "/usr/include/c++/5/type_traits" 3
typedef signed char __smallest;
# 1851 "/usr/include/c++/5/type_traits" 3
static const bool __b0 = (sizeof(_Tp) <= sizeof(__smallest));
# 1852 "/usr/include/c++/5/type_traits" 3
static const bool __b1 = (sizeof(_Tp) <= sizeof(signed short));
# 1853 "/usr/include/c++/5/type_traits" 3
static const bool __b2 = (sizeof(_Tp) <= sizeof(signed int));
# 1854 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b2, signed int, signed long> __cond2;
# 1855 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b2, signed int, signed long> ::type __cond2_type;
# 1856 "/usr/include/c++/5/type_traits" 3
typedef conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> __cond1;
# 1857 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> ::type __cond1_type;
# 1860 "/usr/include/c++/5/type_traits" 3
public: typedef typename conditional< __b0, signed char, typename conditional< __b1, signed short, typename conditional< __b2, signed int, signed long> ::type> ::type> ::type __type;
# 1861 "/usr/include/c++/5/type_traits" 3
};
# 1867 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1868 "/usr/include/c++/5/type_traits" 3
struct make_signed {
# 1869 "/usr/include/c++/5/type_traits" 3
typedef typename __make_signed_selector< _Tp> ::__type type; };
# 1873 "/usr/include/c++/5/type_traits" 3
template<> struct make_signed< bool> ;
# 1888 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1889 "/usr/include/c++/5/type_traits" 3
struct remove_extent {
# 1890 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1892 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1893 "/usr/include/c++/5/type_traits" 3
struct remove_extent< _Tp [_Size]> {
# 1894 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1896 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1897 "/usr/include/c++/5/type_traits" 3
struct remove_extent< _Tp []> {
# 1898 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1901 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1902 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents {
# 1903 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1905 "/usr/include/c++/5/type_traits" 3
template< class _Tp, size_t _Size>
# 1906 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents< _Tp [_Size]> {
# 1907 "/usr/include/c++/5/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 1909 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1910 "/usr/include/c++/5/type_traits" 3
struct remove_all_extents< _Tp []> {
# 1911 "/usr/include/c++/5/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 1925 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class >
# 1926 "/usr/include/c++/5/type_traits" 3
struct __remove_pointer_helper {
# 1927 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1929 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 1930 "/usr/include/c++/5/type_traits" 3
struct __remove_pointer_helper< _Tp, _Up *> {
# 1931 "/usr/include/c++/5/type_traits" 3
typedef _Up type; };
# 1934 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1935 "/usr/include/c++/5/type_traits" 3
struct remove_pointer : public __remove_pointer_helper< _Tp, typename remove_cv< _Tp> ::type> {
# 1937 "/usr/include/c++/5/type_traits" 3
};
# 1940 "/usr/include/c++/5/type_traits" 3
template< class _Tp, bool = __or_< __is_referenceable< _Tp> , is_void< _Tp> > ::value>
# 1942 "/usr/include/c++/5/type_traits" 3
struct __add_pointer_helper {
# 1943 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 1945 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1946 "/usr/include/c++/5/type_traits" 3
struct __add_pointer_helper< _Tp, true> {
# 1947 "/usr/include/c++/5/type_traits" 3
typedef typename remove_reference< _Tp> ::type *type; };
# 1949 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 1950 "/usr/include/c++/5/type_traits" 3
struct add_pointer : public __add_pointer_helper< _Tp> {
# 1952 "/usr/include/c++/5/type_traits" 3
};
# 1964 "/usr/include/c++/5/type_traits" 3
template< size_t _Len>
# 1965 "/usr/include/c++/5/type_traits" 3
struct __aligned_storage_msa {
# 1967 "/usr/include/c++/5/type_traits" 3
union __type {
# 1969 "/usr/include/c++/5/type_traits" 3
unsigned char __data[_Len];
# 1970 "/usr/include/c++/5/type_traits" 3
struct __attribute((__aligned__)) { } __align;
# 1971 "/usr/include/c++/5/type_traits" 3
};
# 1972 "/usr/include/c++/5/type_traits" 3
};
# 1984 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, size_t _Align = __alignof__(typename __aligned_storage_msa< _Len> ::__type)>
# 1986 "/usr/include/c++/5/type_traits" 3
struct aligned_storage {
# 1988 "/usr/include/c++/5/type_traits" 3
union type {
# 1990 "/usr/include/c++/5/type_traits" 3
unsigned char __data[_Len];
# 1991 "/usr/include/c++/5/type_traits" 3
struct __attribute((__aligned__(_Align))) { } __align;
# 1992 "/usr/include/c++/5/type_traits" 3
};
# 1993 "/usr/include/c++/5/type_traits" 3
};
# 1995 "/usr/include/c++/5/type_traits" 3
template< class ..._Types>
# 1996 "/usr/include/c++/5/type_traits" 3
struct __strictest_alignment {
# 1998 "/usr/include/c++/5/type_traits" 3
static const size_t _S_alignment = (0);
# 1999 "/usr/include/c++/5/type_traits" 3
static const size_t _S_size = (0);
# 2000 "/usr/include/c++/5/type_traits" 3
};
# 2002 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class ..._Types>
# 2003 "/usr/include/c++/5/type_traits" 3
struct __strictest_alignment< _Tp, _Types...> {
# 2005 "/usr/include/c++/5/type_traits" 3
static const size_t _S_alignment = ((__alignof__(_Tp) > __strictest_alignment< _Types...> ::_S_alignment) ? __alignof__(_Tp) : __strictest_alignment< _Types...> ::_S_alignment);
# 2008 "/usr/include/c++/5/type_traits" 3
static const size_t _S_size = ((sizeof(_Tp) > __strictest_alignment< _Types...> ::_S_size) ? sizeof(_Tp) : __strictest_alignment< _Types...> ::_S_size);
# 2011 "/usr/include/c++/5/type_traits" 3
};
# 2023 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, class ..._Types>
# 2024 "/usr/include/c++/5/type_traits" 3
struct aligned_union {
# 2027 "/usr/include/c++/5/type_traits" 3
static_assert((sizeof...(_Types) != (0)), "At least one type is required");
# 2029 "/usr/include/c++/5/type_traits" 3
private: using __strictest = __strictest_alignment< _Types...> ;
# 2030 "/usr/include/c++/5/type_traits" 3
static const size_t _S_len = ((_Len > __strictest::_S_size) ? _Len : __strictest::_S_size);
# 2034 "/usr/include/c++/5/type_traits" 3
public: static const size_t alignment_value = (__strictest::_S_alignment);
# 2036 "/usr/include/c++/5/type_traits" 3
typedef typename aligned_storage< _S_len, alignment_value> ::type type;
# 2037 "/usr/include/c++/5/type_traits" 3
};
# 2039 "/usr/include/c++/5/type_traits" 3
template< size_t _Len, class ..._Types> const size_t
# 2040 "/usr/include/c++/5/type_traits" 3
aligned_union< _Len, _Types...> ::alignment_value;
# 2044 "/usr/include/c++/5/type_traits" 3
template< class _Up, bool
# 2045 "/usr/include/c++/5/type_traits" 3
_IsArray = is_array< _Up> ::value, bool
# 2046 "/usr/include/c++/5/type_traits" 3
_IsFunction = is_function< _Up> ::value> struct __decay_selector;
# 2050 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2051 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, false, false> {
# 2052 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< _Up> ::type __type; };
# 2054 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2055 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, true, false> {
# 2056 "/usr/include/c++/5/type_traits" 3
typedef typename remove_extent< _Up> ::type *__type; };
# 2058 "/usr/include/c++/5/type_traits" 3
template< class _Up>
# 2059 "/usr/include/c++/5/type_traits" 3
struct __decay_selector< _Up, false, true> {
# 2060 "/usr/include/c++/5/type_traits" 3
typedef typename add_pointer< _Up> ::type __type; };
# 2063 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2064 "/usr/include/c++/5/type_traits" 3
class decay {
# 2066 "/usr/include/c++/5/type_traits" 3
typedef typename remove_reference< _Tp> ::type __remove_type;
# 2069 "/usr/include/c++/5/type_traits" 3
public: typedef typename __decay_selector< typename remove_reference< _Tp> ::type> ::__type type;
# 2070 "/usr/include/c++/5/type_traits" 3
};
# 2072 "/usr/include/c++/5/type_traits" 3
template< class _Tp> class reference_wrapper;
# 2076 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2077 "/usr/include/c++/5/type_traits" 3
struct __strip_reference_wrapper {
# 2079 "/usr/include/c++/5/type_traits" 3
typedef _Tp __type;
# 2080 "/usr/include/c++/5/type_traits" 3
};
# 2082 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2083 "/usr/include/c++/5/type_traits" 3
struct __strip_reference_wrapper< reference_wrapper< _Tp> > {
# 2085 "/usr/include/c++/5/type_traits" 3
typedef _Tp &__type;
# 2086 "/usr/include/c++/5/type_traits" 3
};
# 2088 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2089 "/usr/include/c++/5/type_traits" 3
struct __decay_and_strip {
# 2092 "/usr/include/c++/5/type_traits" 3
typedef typename __strip_reference_wrapper< typename decay< _Tp> ::type> ::__type __type;
# 2093 "/usr/include/c++/5/type_traits" 3
};
# 2098 "/usr/include/c++/5/type_traits" 3
template< bool , class _Tp = void>
# 2099 "/usr/include/c++/5/type_traits" 3
struct enable_if {
# 2100 "/usr/include/c++/5/type_traits" 3
};
# 2103 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2104 "/usr/include/c++/5/type_traits" 3
struct enable_if< true, _Tp> {
# 2105 "/usr/include/c++/5/type_traits" 3
typedef _Tp type; };
# 2107 "/usr/include/c++/5/type_traits" 3
template< class ..._Cond> using _Require = typename enable_if< __and_< _Cond...> ::value> ::type;
# 2112 "/usr/include/c++/5/type_traits" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 2113 "/usr/include/c++/5/type_traits" 3
struct conditional {
# 2114 "/usr/include/c++/5/type_traits" 3
typedef _Iftrue type; };
# 2117 "/usr/include/c++/5/type_traits" 3
template< class _Iftrue, class _Iffalse>
# 2118 "/usr/include/c++/5/type_traits" 3
struct conditional< false, _Iftrue, _Iffalse> {
# 2119 "/usr/include/c++/5/type_traits" 3
typedef _Iffalse type; };
# 2122 "/usr/include/c++/5/type_traits" 3
template< class ..._Tp> struct common_type;
# 2127 "/usr/include/c++/5/type_traits" 3
struct __do_common_type_impl {
# 2129 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up> static __success_type< typename decay< __decltype((true ? std::declval< _Tp> () : std::declval< _Up> ()))> ::type> _S_test(int);
# 2134 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2136 "/usr/include/c++/5/type_traits" 3
};
# 2138 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 2139 "/usr/include/c++/5/type_traits" 3
struct __common_type_impl : private __do_common_type_impl {
# 2142 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Tp, _Up> (0))) type;
# 2143 "/usr/include/c++/5/type_traits" 3
};
# 2145 "/usr/include/c++/5/type_traits" 3
struct __do_member_type_wrapper {
# 2147 "/usr/include/c++/5/type_traits" 3
template< class _Tp> static __success_type< typename _Tp::type> _S_test(int);
# 2150 "/usr/include/c++/5/type_traits" 3
template< class > static __failure_type _S_test(...);
# 2152 "/usr/include/c++/5/type_traits" 3
};
# 2154 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2155 "/usr/include/c++/5/type_traits" 3
struct __member_type_wrapper : private __do_member_type_wrapper {
# 2158 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Tp> (0))) type;
# 2159 "/usr/include/c++/5/type_traits" 3
};
# 2161 "/usr/include/c++/5/type_traits" 3
template< class _CTp, class ..._Args>
# 2162 "/usr/include/c++/5/type_traits" 3
struct __expanded_common_type_wrapper {
# 2164 "/usr/include/c++/5/type_traits" 3
typedef common_type< typename _CTp::type, _Args...> type;
# 2165 "/usr/include/c++/5/type_traits" 3
};
# 2167 "/usr/include/c++/5/type_traits" 3
template< class ..._Args>
# 2168 "/usr/include/c++/5/type_traits" 3
struct __expanded_common_type_wrapper< __failure_type, _Args...> {
# 2169 "/usr/include/c++/5/type_traits" 3
typedef __failure_type type; };
# 2171 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2172 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp> {
# 2173 "/usr/include/c++/5/type_traits" 3
typedef typename decay< _Tp> ::type type; };
# 2175 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up>
# 2176 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp, _Up> : public __common_type_impl< _Tp, _Up> ::type {
# 2178 "/usr/include/c++/5/type_traits" 3
};
# 2180 "/usr/include/c++/5/type_traits" 3
template< class _Tp, class _Up, class ..._Vp>
# 2181 "/usr/include/c++/5/type_traits" 3
struct common_type< _Tp, _Up, _Vp...> : public __expanded_common_type_wrapper< typename __member_type_wrapper< common_type< _Tp, _Up> > ::type, _Vp...> ::type {
# 2184 "/usr/include/c++/5/type_traits" 3
};
# 2187 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2188 "/usr/include/c++/5/type_traits" 3
struct underlying_type {
# 2190 "/usr/include/c++/5/type_traits" 3
typedef __underlying_type(_Tp) type;
# 2191 "/usr/include/c++/5/type_traits" 3
};
# 2193 "/usr/include/c++/5/type_traits" 3
template< class _Tp>
# 2194 "/usr/include/c++/5/type_traits" 3
struct __declval_protector {
# 2196 "/usr/include/c++/5/type_traits" 3
static const bool __stop = false;
# 2197 "/usr/include/c++/5/type_traits" 3
static typename add_rvalue_reference< _Tp> ::type __delegate();
# 2198 "/usr/include/c++/5/type_traits" 3
};
# 2200 "/usr/include/c++/5/type_traits" 3
template< class _Tp> inline typename add_rvalue_reference< _Tp> ::type
# 2202 "/usr/include/c++/5/type_traits" 3
declval() noexcept
# 2203 "/usr/include/c++/5/type_traits" 3
{
# 2204 "/usr/include/c++/5/type_traits" 3
static_assert((__declval_protector< _Tp> ::__stop), "declval() must not be used!");
# 2206 "/usr/include/c++/5/type_traits" 3
return __declval_protector< _Tp> ::__delegate();
# 2207 "/usr/include/c++/5/type_traits" 3
}
# 2210 "/usr/include/c++/5/type_traits" 3
template< class _Signature> class result_of;
# 2218 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_ref_impl {
# 2220 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __success_type< __decltype(((std::declval< _Tp1> ().*std::declval< _Fp> ())(std::declval< _Args> ()...)))> _S_test(int);
# 2225 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2227 "/usr/include/c++/5/type_traits" 3
};
# 2229 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2230 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_ref : private __result_of_memfun_ref_impl {
# 2233 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2234 "/usr/include/c++/5/type_traits" 3
};
# 2237 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_deref_impl {
# 2239 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __success_type< __decltype((((*std::declval< _Tp1> ()).*std::declval< _Fp> ())(std::declval< _Args> ()...)))> _S_test(int);
# 2244 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2246 "/usr/include/c++/5/type_traits" 3
};
# 2248 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2249 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun_deref : private __result_of_memfun_deref_impl {
# 2252 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2253 "/usr/include/c++/5/type_traits" 3
};
# 2256 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_ref_impl {
# 2258 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1> static __success_type< __decltype((std::declval< _Tp1> ().*std::declval< _Fp> ()))> _S_test(int);
# 2263 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2265 "/usr/include/c++/5/type_traits" 3
};
# 2267 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2268 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_ref : private __result_of_memobj_ref_impl {
# 2271 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2272 "/usr/include/c++/5/type_traits" 3
};
# 2275 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_deref_impl {
# 2277 "/usr/include/c++/5/type_traits" 3
template< class _Fp, class _Tp1> static __success_type< __decltype(((*std::declval< _Tp1> ()).*std::declval< _Fp> ()))> _S_test(int);
# 2282 "/usr/include/c++/5/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2284 "/usr/include/c++/5/type_traits" 3
};
# 2286 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2287 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj_deref : private __result_of_memobj_deref_impl {
# 2290 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2291 "/usr/include/c++/5/type_traits" 3
};
# 2293 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg> struct __result_of_memobj;
# 2296 "/usr/include/c++/5/type_traits" 3
template< class _Res, class _Class, class _Arg>
# 2297 "/usr/include/c++/5/type_traits" 3
struct __result_of_memobj< _Res (_Class::*), _Arg> {
# 2300 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _Arg> ::type> ::type _Argval;
# 2301 "/usr/include/c++/5/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2306 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __or_< is_same< typename remove_cv< typename remove_reference< _Arg> ::type> ::type, _Class> , is_base_of< _Class, typename remove_cv< typename remove_reference< _Arg> ::type> ::type> > ::value, __result_of_memobj_ref< _Res (_Class::*), _Arg> , __result_of_memobj_deref< _Res (_Class::*), _Arg> > ::type::type type;
# 2307 "/usr/include/c++/5/type_traits" 3
};
# 2309 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args> struct __result_of_memfun;
# 2312 "/usr/include/c++/5/type_traits" 3
template< class _Res, class _Class, class _Arg, class ..._Args>
# 2313 "/usr/include/c++/5/type_traits" 3
struct __result_of_memfun< _Res (_Class::*), _Arg, _Args...> {
# 2316 "/usr/include/c++/5/type_traits" 3
typedef typename remove_cv< typename remove_reference< _Arg> ::type> ::type _Argval;
# 2317 "/usr/include/c++/5/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2322 "/usr/include/c++/5/type_traits" 3
typedef typename conditional< __or_< is_same< typename remove_cv< typename remove_reference< _Arg> ::type> ::type, _Class> , is_base_of< _Class, typename remove_cv< typename remove_reference< _Arg> ::type> ::type> > ::value, __result_of_memfun_ref< _Res (_Class::*), _Arg, _Args...> , __result_of_memfun_deref< _Res (_Class::*), _Arg, _Args...> > ::type::type type;
# 2323 "/usr/include/c++/5/type_traits" 3
};
# 2325 "/usr/include/c++/5/type_traits" 3
template< bool , bool , class _Functor, class ..._ArgTypes>
# 2326 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl {
# 2328 "/usr/include/c++/5/type_traits" 3
typedef __failure_type type;
# 2329 "/usr/include/c++/5/type_traits" 3
};
# 2331 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg>
# 2332 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< true, false, _MemPtr, _Arg> : public __result_of_memobj< typename decay< _MemPtr> ::type, _Arg> {
# 2334 "/usr/include/c++/5/type_traits" 3
};
# 2336 "/usr/include/c++/5/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2337 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< false, true, _MemPtr, _Arg, _Args...> : public __result_of_memfun< typename decay< _MemPtr> ::type, _Arg, _Args...> {
# 2339 "/usr/include/c++/5/type_traits" 3
};
# 2342 "/usr/include/c++/5/type_traits" 3
struct __result_of_other_impl {
# 2344 "/usr/include/c++/5/type_traits" 3
template< class _Fn, class ..._Args> static __success_type< __decltype((std::declval< _Fn> ()(std::declval< _Args> ()...)))> _S_test(int);
# 2349 "/usr/include/c++/5/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2351 "/usr/include/c++/5/type_traits" 3
};
# 2353 "/usr/include/c++/5/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2354 "/usr/include/c++/5/type_traits" 3
struct __result_of_impl< false, false, _Functor, _ArgTypes...> : private __result_of_other_impl {
# 2357 "/usr/include/c++/5/type_traits" 3
typedef __decltype((_S_test< _Functor, _ArgTypes...> (0))) type;
# 2358 "/usr/include/c++/5/type_traits" 3
};
# 2360 "/usr/include/c++/5/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2361 "/usr/include/c++/5/type_traits" 3
struct result_of< _Functor (_ArgTypes ...)> : public __result_of_impl< is_member_object_pointer< typename remove_reference< _Functor> ::type> ::value, is_member_function_pointer< typename remove_reference< _Functor> ::type> ::value, _Functor, _ArgTypes...> ::type {
# 2371 "/usr/include/c++/5/type_traits" 3
};
# 2407 "/usr/include/c++/5/type_traits" 3
template< class ...> using __void_t = void;
# 2426 "/usr/include/c++/5/type_traits" 3
}
# 59 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr _Tp &&
# 76 "/usr/include/c++/5/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &__t) noexcept
# 77 "/usr/include/c++/5/bits/move.h" 3
{ return static_cast< _Tp &&>(__t); }
# 85 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr _Tp &&
# 87 "/usr/include/c++/5/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &&__t) noexcept
# 88 "/usr/include/c++/5/bits/move.h" 3
{
# 89 "/usr/include/c++/5/bits/move.h" 3
static_assert((!std::is_lvalue_reference< _Tp> ::value), "template argument substituting _Tp is an lvalue reference type");
# 91 "/usr/include/c++/5/bits/move.h" 3
return static_cast< _Tp &&>(__t);
# 92 "/usr/include/c++/5/bits/move.h" 3
}
# 99 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr typename remove_reference< _Tp> ::type &&
# 101 "/usr/include/c++/5/bits/move.h" 3
move(_Tp &&__t) noexcept
# 102 "/usr/include/c++/5/bits/move.h" 3
{ return static_cast< typename remove_reference< _Tp> ::type &&>(__t); }
# 105 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp>
# 106 "/usr/include/c++/5/bits/move.h" 3
struct __move_if_noexcept_cond : public __and_< __not_< is_nothrow_move_constructible< _Tp> > , is_copy_constructible< _Tp> > ::type {
# 108 "/usr/include/c++/5/bits/move.h" 3
};
# 118 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> constexpr typename conditional< __move_if_noexcept_cond< _Tp> ::value, const _Tp &, _Tp &&> ::type
# 121 "/usr/include/c++/5/bits/move.h" 3
move_if_noexcept(_Tp &__x) noexcept
# 122 "/usr/include/c++/5/bits/move.h" 3
{ return std::move(__x); }
# 133 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline _Tp *
# 135 "/usr/include/c++/5/bits/move.h" 3
addressof(_Tp &__r) noexcept
# 136 "/usr/include/c++/5/bits/move.h" 3
{ return std::__addressof(__r); }
# 139 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp, class _Up = _Tp> inline _Tp
# 141 "/usr/include/c++/5/bits/move.h" 3
__exchange(_Tp &__obj, _Up &&__new_val)
# 142 "/usr/include/c++/5/bits/move.h" 3
{
# 143 "/usr/include/c++/5/bits/move.h" 3
_Tp __old_val = std::move(__obj);
# 144 "/usr/include/c++/5/bits/move.h" 3
__obj = std::forward< _Up> (__new_val);
# 145 "/usr/include/c++/5/bits/move.h" 3
return __old_val;
# 146 "/usr/include/c++/5/bits/move.h" 3
}
# 150 "/usr/include/c++/5/bits/move.h" 3
}
# 159 "/usr/include/c++/5/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 174 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp> inline void
# 176 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp &__a, _Tp &__b) noexcept(__and_< is_nothrow_move_constructible< _Tp> , is_nothrow_move_assignable< _Tp> > ::value)
# 181 "/usr/include/c++/5/bits/move.h" 3
{
# 185 "/usr/include/c++/5/bits/move.h" 3
_Tp __tmp = std::move(__a);
# 186 "/usr/include/c++/5/bits/move.h" 3
__a = std::move(__b);
# 187 "/usr/include/c++/5/bits/move.h" 3
__b = std::move(__tmp);
# 188 "/usr/include/c++/5/bits/move.h" 3
}
# 193 "/usr/include/c++/5/bits/move.h" 3
template< class _Tp, size_t _Nm> inline void
# 195 "/usr/include/c++/5/bits/move.h" 3
swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) noexcept(noexcept(swap(*(__a), *(__b))))
# 199 "/usr/include/c++/5/bits/move.h" 3
{
# 200 "/usr/include/c++/5/bits/move.h" 3
for (size_t __n = (0); __n < _Nm; ++__n) {
# 201 "/usr/include/c++/5/bits/move.h" 3
swap((__a)[__n], (__b)[__n]); }
# 202 "/usr/include/c++/5/bits/move.h" 3
}
# 206 "/usr/include/c++/5/bits/move.h" 3
}
# 65 "/usr/include/c++/5/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 76 "/usr/include/c++/5/bits/stl_pair.h" 3
struct piecewise_construct_t { };
# 79 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
# 82 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class ...> class tuple;
# 85 "/usr/include/c++/5/bits/stl_pair.h" 3
template< size_t ...> struct _Index_tuple;
# 95 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 96 "/usr/include/c++/5/bits/stl_pair.h" 3
struct pair {
# 98 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T1 first_type;
# 99 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef _T2 second_type;
# 101 "/usr/include/c++/5/bits/stl_pair.h" 3
_T1 first;
# 102 "/usr/include/c++/5/bits/stl_pair.h" 3
_T2 second;
# 108 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair() : first(), second()
# 109 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 112 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 113 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 121 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< const _U1 &, _T1> , is_convertible< const _U2 &, _T2> > ::value> ::type> constexpr
# 124 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 125 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 127 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(const pair &) = default;
# 128 "/usr/include/c++/5/bits/stl_pair.h" 3
constexpr pair(pair &&) = default;
# 131 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class = typename enable_if< is_convertible< _U1, _T1> ::value> ::type> constexpr
# 133 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(_U1 &&__x, const _T2 &__y) : first(std::forward< _U1> (__x)), second(__y)
# 134 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 136 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U2, class = typename enable_if< is_convertible< _U2, _T2> ::value> ::type> constexpr
# 138 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(const _T1 &__x, _U2 &&__y) : first(__x), second(std::forward< _U2> (__y))
# 139 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 141 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 144 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(_U1 &&__x, _U2 &&__y) : first(std::forward< _U1> (__x)), second(std::forward< _U2> (__y))
# 145 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 147 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2, class = typename enable_if< __and_< is_convertible< _U1, _T1> , is_convertible< _U2, _T2> > ::value> ::type> constexpr
# 150 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(std::pair< _U1, _U2> &&__p) : first(std::forward< _U1> ((__p.first))), second(std::forward< _U2> ((__p.second)))
# 152 "/usr/include/c++/5/bits/stl_pair.h" 3
{ }
# 154 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class ..._Args1, class ..._Args2> pair(piecewise_construct_t, tuple< _Args1...> , tuple< _Args2...> );
# 158 "/usr/include/c++/5/bits/stl_pair.h" 3
pair &operator=(const pair &__p)
# 159 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 160 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = (__p.first);
# 161 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = (__p.second);
# 162 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 163 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 166 "/usr/include/c++/5/bits/stl_pair.h" 3
pair &operator=(pair &&__p) noexcept(__and_< is_nothrow_move_assignable< _T1> , is_nothrow_move_assignable< _T2> > ::value)
# 169 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 170 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = std::forward< first_type> (__p.first);
# 171 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = std::forward< second_type> (__p.second);
# 172 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 173 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 175 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2> pair &
# 177 "/usr/include/c++/5/bits/stl_pair.h" 3
operator=(const std::pair< _U1, _U2> &__p)
# 178 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 179 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = (__p.first);
# 180 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = (__p.second);
# 181 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 182 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 184 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _U1, class _U2> pair &
# 186 "/usr/include/c++/5/bits/stl_pair.h" 3
operator=(std::pair< _U1, _U2> &&__p)
# 187 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 188 "/usr/include/c++/5/bits/stl_pair.h" 3
(first) = std::forward< _U1> ((__p.first));
# 189 "/usr/include/c++/5/bits/stl_pair.h" 3
(second) = std::forward< _U2> ((__p.second));
# 190 "/usr/include/c++/5/bits/stl_pair.h" 3
return *this;
# 191 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 194 "/usr/include/c++/5/bits/stl_pair.h" 3
void swap(pair &__p) noexcept(noexcept(swap(first, __p.first)) && noexcept(swap(second, __p.second)))
# 197 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 198 "/usr/include/c++/5/bits/stl_pair.h" 3
using std::swap;
# 199 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(first, __p.first);
# 200 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(second, __p.second);
# 201 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 204 "/usr/include/c++/5/bits/stl_pair.h" 3
private: template< class ..._Args1, size_t ..._Indexes1, class ...
# 205 "/usr/include/c++/5/bits/stl_pair.h" 3
_Args2, size_t ..._Indexes2>
# 204 "/usr/include/c++/5/bits/stl_pair.h" 3
pair(tuple< _Args1...> &, tuple< _Args2...> &, _Index_tuple< _Indexes1...> , _Index_tuple< _Indexes2...> );
# 209 "/usr/include/c++/5/bits/stl_pair.h" 3
};
# 212 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 214 "/usr/include/c++/5/bits/stl_pair.h" 3
operator==(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 215 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) == (__y.first)) && ((__x.second) == (__y.second)); }
# 218 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 220 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 221 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return ((__x.first) < (__y.first)) || ((!((__y.first) < (__x.first))) && ((__x.second) < (__y.second)));
# 222 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 225 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 227 "/usr/include/c++/5/bits/stl_pair.h" 3
operator!=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 228 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x == __y); }
# 231 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 233 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 234 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return __y < __x; }
# 237 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 239 "/usr/include/c++/5/bits/stl_pair.h" 3
operator<=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 240 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__y < __x); }
# 243 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 245 "/usr/include/c++/5/bits/stl_pair.h" 3
operator>=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 246 "/usr/include/c++/5/bits/stl_pair.h" 3
{ return !(__x < __y); }
# 252 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> inline void
# 254 "/usr/include/c++/5/bits/stl_pair.h" 3
swap(pair< _T1, _T2> &__x, pair< _T1, _T2> &__y) noexcept(noexcept((__x.swap(__y))))
# 256 "/usr/include/c++/5/bits/stl_pair.h" 3
{ (__x.swap(__y)); }
# 273 "/usr/include/c++/5/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type>
# 276 "/usr/include/c++/5/bits/stl_pair.h" 3
make_pair(_T1 &&__x, _T2 &&__y)
# 277 "/usr/include/c++/5/bits/stl_pair.h" 3
{
# 278 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T1> ::__type __ds_type1;
# 279 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T2> ::__type __ds_type2;
# 280 "/usr/include/c++/5/bits/stl_pair.h" 3
typedef pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type> __pair_type;
# 281 "/usr/include/c++/5/bits/stl_pair.h" 3
return __pair_type(std::forward< _T1> (__x), std::forward< _T2> (__y));
# 282 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 293 "/usr/include/c++/5/bits/stl_pair.h" 3
}
# 70 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 89 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 92 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 95 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 99 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 103 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 116 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 117 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 118 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator {
# 121 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 123 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 125 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 127 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 129 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 130 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 143 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator, class = __void_t< > >
# 144 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct __iterator_traits { };
# 146 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 147 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct __iterator_traits< _Iterator, __void_t< typename _Iterator::iterator_category, typename _Iterator::value_type, typename _Iterator::difference_type, typename _Iterator::pointer, typename _Iterator::reference> > {
# 154 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 155 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 156 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 157 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 158 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 159 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 161 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 162 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits : public __iterator_traits< _Iterator> {
# 163 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 177 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 178 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 180 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 181 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 182 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 183 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 184 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 185 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 188 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 189 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 191 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 192 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 193 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 194 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 195 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 196 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 202 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iter> inline typename iterator_traits< _Iter> ::iterator_category
# 204 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
__iterator_category(const _Iter &)
# 205 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return typename iterator_traits< _Iter> ::iterator_category(); }
# 211 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator, bool _HasBase>
# 212 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base {
# 214 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef _Iterator iterator_type;
# 215 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 216 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return __it; }
# 217 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 219 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 220 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
struct _Iter_base< _Iterator, true> {
# 222 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_type iterator_type;
# 223 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
static iterator_type _S_base(_Iterator __it)
# 224 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
{ return (__it.base()); }
# 225 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
};
# 228 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
template< class _InIter> using _RequireInputIter = typename enable_if< is_convertible< typename iterator_traits< _InIter> ::iterator_category, input_iterator_tag> ::value> ::type;
# 236 "/usr/include/c++/5/bits/stl_iterator_base_types.h" 3
}
# 46 "/usr/include/c++/5/debug/debug.h" 3
namespace std {
# 48 "/usr/include/c++/5/debug/debug.h" 3
namespace __debug { }
# 49 "/usr/include/c++/5/debug/debug.h" 3
}
# 54 "/usr/include/c++/5/debug/debug.h" 3
namespace __gnu_debug {
# 56 "/usr/include/c++/5/debug/debug.h" 3
using namespace std::__debug;
# 57 "/usr/include/c++/5/debug/debug.h" 3
}
# 67 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 73 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_InputIterator __first, _InputIterator __last, input_iterator_tag)
# 75 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 79 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 80 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__first != __last)
# 81 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 82 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__first;
# 83 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__n;
# 84 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 85 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __n;
# 86 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 88 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator> inline typename iterator_traits< _RandomAccessIterator> ::difference_type
# 90 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__distance(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 92 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 96 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __last - __first;
# 97 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 112 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> inline typename iterator_traits< _InputIterator> ::difference_type
# 114 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
distance(_InputIterator __first, _InputIterator __last)
# 115 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 117 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return std::__distance(__first, __last, std::__iterator_category(__first));
# 119 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 121 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 123 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_InputIterator &__i, _Distance __n, input_iterator_tag)
# 124 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 127 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
;
# 128 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 129 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; }
# 130 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 132 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator, class _Distance> inline void
# 134 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_BidirectionalIterator &__i, _Distance __n, bidirectional_iterator_tag)
# 136 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 140 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
if (__n > 0) {
# 141 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 142 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
++__i; } } else {
# 144 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
while (__n++) {
# 145 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
--__i; } }
# 146 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 148 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator, class _Distance> inline void
# 150 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__advance(_RandomAccessIterator &__i, _Distance __n, random_access_iterator_tag)
# 152 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 156 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__i += __n;
# 157 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 171 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> inline void
# 173 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
advance(_InputIterator &__i, _Distance __n)
# 174 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __d = __n;
# 177 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::__advance(__i, __d, std::__iterator_category(__i));
# 178 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 182 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _ForwardIterator> inline _ForwardIterator
# 184 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
next(_ForwardIterator __x, typename iterator_traits< _ForwardIterator> ::difference_type
# 185 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 186 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 187 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, __n);
# 188 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __x;
# 189 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 191 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator> inline _BidirectionalIterator
# 193 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
prev(_BidirectionalIterator __x, typename iterator_traits< _BidirectionalIterator> ::difference_type
# 194 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 195 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
{
# 196 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, -__n);
# 197 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
return __x;
# 198 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 203 "/usr/include/c++/5/bits/stl_iterator_base_funcs.h" 3
}
# 37 "/usr/include/c++/5/bits/ptr_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = __void_t< > > struct __has_element_type : public false_type { }; template< class _Tp> struct __has_element_type< _Tp, __void_t< typename _Tp::element_type> > : public true_type { };
# 42 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = __void_t< > > struct __has_difference_type : public false_type { }; template< class _Tp> struct __has_difference_type< _Tp, __void_t< typename _Tp::difference_type> > : public true_type { };
# 44 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, bool = __has_element_type< _Tp> ::value> struct __ptrtr_elt_type;
# 47 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 48 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_elt_type< _Tp, true> {
# 50 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::element_type __type;
# 51 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 53 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomePtr, class _Tp, class ...
# 54 "/usr/include/c++/5/bits/ptr_traits.h" 3
_Args>
# 55 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_elt_type< _SomePtr< _Tp, _Args...> , false> {
# 57 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp __type;
# 58 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 60 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, bool = __has_difference_type< _Tp> ::value>
# 61 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_diff_type {
# 63 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::difference_type __type;
# 64 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 66 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 67 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_diff_type< _Tp, false> {
# 69 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef ptrdiff_t __type;
# 70 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 72 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr, class _Up>
# 73 "/usr/include/c++/5/bits/ptr_traits.h" 3
class __ptrtr_rebind_helper {
# 75 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr2, class _Up2> static constexpr true_type _S_chk(typename _Ptr2::template rebind< _Up2> *);
# 79 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class , class > static constexpr false_type _S_chk(...);
# 84 "/usr/include/c++/5/bits/ptr_traits.h" 3
public: using __type = __decltype((_S_chk< _Ptr, _Up> (nullptr)));
# 85 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 87 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class _Up, bool
# 88 "/usr/include/c++/5/bits/ptr_traits.h" 3
 = __ptrtr_rebind_helper< _Tp, _Up> ::__type::value> struct __ptrtr_rebind;
# 91 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class _Up>
# 92 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_rebind< _Tp, _Up, true> {
# 94 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename _Tp::template rebind< _Up> __type;
# 95 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 97 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomePtr, class _Up, class
# 98 "/usr/include/c++/5/bits/ptr_traits.h" 3
_Tp, class ..._Args>
# 99 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_rebind< _SomePtr< _Tp, _Args...> , _Up, false> {
# 101 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _SomePtr< _Up, _Args...> __type;
# 102 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 104 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp, class = typename remove_cv< _Tp> ::type>
# 105 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_not_void {
# 107 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp __type;
# 108 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 110 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 111 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __ptrtr_not_void< _Tp, void> {
# 113 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct __type { };
# 114 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 116 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr>
# 117 "/usr/include/c++/5/bits/ptr_traits.h" 3
class __ptrtr_pointer_to {
# 119 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_elt_type< _Ptr> ::__type __orig_type;
# 120 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_not_void< typename __ptrtr_elt_type< _Ptr> ::__type> ::__type __element_type;
# 123 "/usr/include/c++/5/bits/ptr_traits.h" 3
public: static _Ptr pointer_to(__element_type &__e)
# 124 "/usr/include/c++/5/bits/ptr_traits.h" 3
{ return _Ptr::pointer_to(__e); }
# 125 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 131 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Ptr>
# 132 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct pointer_traits : public __ptrtr_pointer_to< _Ptr> {
# 135 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Ptr pointer;
# 137 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_elt_type< _Ptr> ::__type element_type;
# 139 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef typename __ptrtr_diff_type< _Ptr> ::__type difference_type;
# 141 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Up> using rebind = typename __ptrtr_rebind< _Ptr, _Up> ::__type;
# 143 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 149 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Tp>
# 150 "/usr/include/c++/5/bits/ptr_traits.h" 3
struct pointer_traits< _Tp *> {
# 153 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp *pointer;
# 155 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef _Tp element_type;
# 157 "/usr/include/c++/5/bits/ptr_traits.h" 3
typedef ptrdiff_t difference_type;
# 159 "/usr/include/c++/5/bits/ptr_traits.h" 3
template< class _Up> using rebind = _Up *;
# 168 "/usr/include/c++/5/bits/ptr_traits.h" 3
static pointer pointer_to(typename __ptrtr_not_void< _Tp> ::__type &__r) noexcept
# 169 "/usr/include/c++/5/bits/ptr_traits.h" 3
{ return std::addressof(__r); }
# 170 "/usr/include/c++/5/bits/ptr_traits.h" 3
};
# 173 "/usr/include/c++/5/bits/ptr_traits.h" 3
}
# 68 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 96 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator>
# 97 "/usr/include/c++/5/bits/stl_iterator.h" 3
class reverse_iterator : public iterator< typename iterator_traits< _Iterator> ::iterator_category, typename iterator_traits< _Iterator> ::value_type, typename iterator_traits< _Iterator> ::difference_type, typename iterator_traits< _Iterator> ::pointer, typename iterator_traits< _Iterator> ::reference> {
# 105 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator current;
# 107 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 110 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 111 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 112 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::pointer pointer;
# 113 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference reference;
# 121 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator() : current() { }
# 127 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit reverse_iterator(iterator_type __x) : current(__x) { }
# 132 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const reverse_iterator &__x) : current(__x.current)
# 133 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 139 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 140 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator(const ::std::reverse_iterator< _Iter> &__x) : current((__x.base()))
# 141 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 147 "/usr/include/c++/5/bits/stl_iterator.h" 3
iterator_type base() const
# 148 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return current; }
# 161 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 162 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 163 "/usr/include/c++/5/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 164 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *(--__tmp);
# 165 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 173 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 174 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return &operator*(); }
# 182 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator++()
# 183 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 184 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 185 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 186 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 194 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator++(int)
# 195 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 196 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 197 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(current);
# 198 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 199 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 207 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator--()
# 208 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 209 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 210 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 211 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 219 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator--(int)
# 220 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 221 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 222 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(current);
# 223 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 224 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 232 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator+(difference_type __n) const
# 233 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) - __n)); }
# 242 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator+=(difference_type __n)
# 243 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 244 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) -= __n;
# 245 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 246 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 254 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator operator-(difference_type __n) const
# 255 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) + __n)); }
# 264 "/usr/include/c++/5/bits/stl_iterator.h" 3
reverse_iterator &operator-=(difference_type __n)
# 265 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_iterator.h" 3
(current) += __n;
# 267 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 276 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 277 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *((*this) + __n); }
# 278 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 290 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 292 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 293 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 294 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 296 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 298 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 299 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 300 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 302 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 304 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 305 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 306 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 308 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 310 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 311 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 312 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 314 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 316 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 317 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 318 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 320 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 322 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 323 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 324 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 326 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline typename reverse_iterator< _Iterator> ::difference_type
# 328 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 329 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 330 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 332 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline reverse_iterator< _Iterator>
# 334 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename reverse_iterator< _Iterator> ::difference_type __n, const reverse_iterator< _Iterator> &
# 335 "/usr/include/c++/5/bits/stl_iterator.h" 3
__x)
# 336 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )((__x.base()) - __n)); }
# 340 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 342 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 343 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 344 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 346 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 348 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 349 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 350 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) < (__x.base()); }
# 352 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 354 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 355 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 356 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 358 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 360 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 361 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 362 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 364 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 366 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 367 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 368 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 370 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 372 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 373 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 374 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 376 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline auto
# 380 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 381 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__y.base()) - (__x.base())))
# 388 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__y.base()) - (__x.base()); }
# 414 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 415 "/usr/include/c++/5/bits/stl_iterator.h" 3
class back_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 419 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 423 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 427 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit back_insert_iterator(_Container &__x) : container((&__x)) { }
# 449 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator=(const typename _Container::value_type &__value)
# 450 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 451 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_back(__value));
# 452 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 453 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 456 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator=(typename _Container::value_type &&__value)
# 457 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 458 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_back(std::move(__value)));
# 459 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 460 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 465 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator*()
# 466 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 470 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator &operator++()
# 471 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 475 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_insert_iterator operator++(int)
# 476 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 477 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 490 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline back_insert_iterator< _Container>
# 492 "/usr/include/c++/5/bits/stl_iterator.h" 3
back_inserter(_Container &__x)
# 493 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((back_insert_iterator< _Container> )(__x)); }
# 505 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 506 "/usr/include/c++/5/bits/stl_iterator.h" 3
class front_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 510 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 514 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 517 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit front_insert_iterator(_Container &__x) : container((&__x)) { }
# 539 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator=(const typename _Container::value_type &__value)
# 540 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 541 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_front(__value));
# 542 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 543 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 546 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator=(typename _Container::value_type &&__value)
# 547 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 548 "/usr/include/c++/5/bits/stl_iterator.h" 3
((container)->push_front(std::move(__value)));
# 549 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 550 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 555 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator*()
# 556 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 560 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator &operator++()
# 561 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 565 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_insert_iterator operator++(int)
# 566 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 567 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 580 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container> inline front_insert_iterator< _Container>
# 582 "/usr/include/c++/5/bits/stl_iterator.h" 3
front_inserter(_Container &__x)
# 583 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((front_insert_iterator< _Container> )(__x)); }
# 599 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container>
# 600 "/usr/include/c++/5/bits/stl_iterator.h" 3
class insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 604 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Container *container;
# 605 "/usr/include/c++/5/bits/stl_iterator.h" 3
typename _Container::iterator iter;
# 609 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 615 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator(_Container &__x, typename _Container::iterator __i) : container((&__x)), iter(__i)
# 616 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 651 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator=(const typename _Container::value_type &__value)
# 652 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 653 "/usr/include/c++/5/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, __value));
# 654 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(iter);
# 655 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 656 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 659 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator=(typename _Container::value_type &&__value)
# 660 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 661 "/usr/include/c++/5/bits/stl_iterator.h" 3
(iter) = ((container)->insert(iter, std::move(__value)));
# 662 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(iter);
# 663 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 664 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 669 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator*()
# 670 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 674 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++()
# 675 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 679 "/usr/include/c++/5/bits/stl_iterator.h" 3
insert_iterator &operator++(int)
# 680 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *this; }
# 681 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 694 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Container, class _Iterator> inline insert_iterator< _Container>
# 696 "/usr/include/c++/5/bits/stl_iterator.h" 3
inserter(_Container &__x, _Iterator __i)
# 697 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 698 "/usr/include/c++/5/bits/stl_iterator.h" 3
return insert_iterator< _Container> (__x, (typename _Container::iterator)__i);
# 700 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 705 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 707 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 718 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator_traits;
# 719 "/usr/include/c++/5/bits/stl_iterator.h" 3
using std::iterator;
# 720 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 721 "/usr/include/c++/5/bits/stl_iterator.h" 3
class __normal_iterator {
# 724 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 726 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef std::iterator_traits< _Iterator> __traits_type;
# 729 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 730 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::iterator_category iterator_category;
# 731 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::value_type value_type;
# 732 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::difference_type difference_type;
# 733 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::reference reference;
# 734 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::pointer pointer;
# 736 "/usr/include/c++/5/bits/stl_iterator.h" 3
constexpr __normal_iterator() noexcept : _M_current(_Iterator())
# 737 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 740 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit __normal_iterator(const _Iterator &__i) noexcept : _M_current(__i)
# 741 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 744 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 745 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator(const __gnu_cxx::__normal_iterator< _Iter, typename __enable_if< std::__are_same< _Iter, typename _Container::pointer> ::__value, _Container> ::__type> &
# 748 "/usr/include/c++/5/bits/stl_iterator.h" 3
__i) noexcept : _M_current((__i.base()))
# 749 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 753 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const noexcept
# 754 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return *(_M_current); }
# 757 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const noexcept
# 758 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 761 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator++() noexcept
# 762 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 763 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 764 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 765 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 768 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator++(int) noexcept
# 769 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)++)); }
# 773 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator--() noexcept
# 774 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 775 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 776 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 777 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 780 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator--(int) noexcept
# 781 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)--)); }
# 785 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const noexcept
# 786 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (_M_current)[__n]; }
# 789 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator+=(difference_type __n) noexcept
# 790 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) += __n; return *this; }
# 793 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator+(difference_type __n) const noexcept
# 794 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) + __n)); }
# 797 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator &operator-=(difference_type __n) noexcept
# 798 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ (_M_current) -= __n; return *this; }
# 801 "/usr/include/c++/5/bits/stl_iterator.h" 3
__normal_iterator operator-(difference_type __n) const noexcept
# 802 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) - __n)); }
# 805 "/usr/include/c++/5/bits/stl_iterator.h" 3
const _Iterator &base() const noexcept
# 806 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 807 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 818 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 820 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 821 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 823 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 825 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 827 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 828 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 830 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) == (__rhs.base()); }
# 832 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 834 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 835 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 837 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 839 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 841 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 842 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 844 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) != (__rhs.base()); }
# 847 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 849 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 850 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 852 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 854 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 856 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 857 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 859 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) < (__rhs.base()); }
# 861 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 863 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 864 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 866 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 868 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 870 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 871 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 873 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) > (__rhs.base()); }
# 875 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 877 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 878 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 880 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 882 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 884 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 885 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 887 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) <= (__rhs.base()); }
# 889 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline bool
# 891 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 892 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 894 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 896 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline bool
# 898 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 899 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 901 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) >= (__rhs.base()); }
# 907 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container> inline auto
# 911 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 912 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept->__decltype(((__lhs.base()) - (__rhs.base())))
# 919 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 921 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline typename __normal_iterator< _Iterator, _Container> ::difference_type
# 923 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 924 "/usr/include/c++/5/bits/stl_iterator.h" 3
__rhs) noexcept
# 926 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__lhs.base()) - (__rhs.base()); }
# 928 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> inline __normal_iterator< _Iterator, _Container>
# 930 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename __normal_iterator< _Iterator, _Container> ::difference_type
# 931 "/usr/include/c++/5/bits/stl_iterator.h" 3
__n, const __normal_iterator< _Iterator, _Container> &__i) noexcept
# 933 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((__normal_iterator< _Iterator, _Container> )((__i.base()) + __n)); }
# 936 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 940 "/usr/include/c++/5/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 958 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator>
# 959 "/usr/include/c++/5/bits/stl_iterator.h" 3
class move_iterator {
# 962 "/usr/include/c++/5/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 964 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 965 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference __base_ref;
# 968 "/usr/include/c++/5/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 969 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::iterator_category iterator_category;
# 970 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::value_type value_type;
# 971 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 973 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef _Iterator pointer;
# 978 "/usr/include/c++/5/bits/stl_iterator.h" 3
typedef typename conditional< is_reference< typename iterator_traits< _Iterator> ::reference> ::value, typename remove_reference< typename iterator_traits< _Iterator> ::reference> ::type &&, typename iterator_traits< _Iterator> ::reference> ::type reference;
# 980 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator() : _M_current()
# 981 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 984 "/usr/include/c++/5/bits/stl_iterator.h" 3
explicit move_iterator(iterator_type __i) : _M_current(__i)
# 985 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 987 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iter>
# 988 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator(const std::move_iterator< _Iter> &__i) : _M_current((__i.base()))
# 989 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ }
# 992 "/usr/include/c++/5/bits/stl_iterator.h" 3
iterator_type base() const
# 993 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 996 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator*() const
# 997 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return static_cast< reference>(*(_M_current)); }
# 1000 "/usr/include/c++/5/bits/stl_iterator.h" 3
pointer operator->() const
# 1001 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return _M_current; }
# 1004 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator++()
# 1005 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1006 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 1007 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1008 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1011 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator++(int)
# 1012 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1013 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1014 "/usr/include/c++/5/bits/stl_iterator.h" 3
++(_M_current);
# 1015 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 1016 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1019 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator--()
# 1020 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1021 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 1022 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1023 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1026 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator--(int)
# 1027 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1028 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1029 "/usr/include/c++/5/bits/stl_iterator.h" 3
--(_M_current);
# 1030 "/usr/include/c++/5/bits/stl_iterator.h" 3
return __tmp;
# 1031 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1034 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator+(difference_type __n) const
# 1035 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) + __n)); }
# 1038 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator+=(difference_type __n)
# 1039 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1040 "/usr/include/c++/5/bits/stl_iterator.h" 3
(_M_current) += __n;
# 1041 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1042 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1045 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator operator-(difference_type __n) const
# 1046 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) - __n)); }
# 1049 "/usr/include/c++/5/bits/stl_iterator.h" 3
move_iterator &operator-=(difference_type __n)
# 1050 "/usr/include/c++/5/bits/stl_iterator.h" 3
{
# 1051 "/usr/include/c++/5/bits/stl_iterator.h" 3
(_M_current) -= __n;
# 1052 "/usr/include/c++/5/bits/stl_iterator.h" 3
return *this;
# 1053 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 1056 "/usr/include/c++/5/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const
# 1057 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return std::move((_M_current)[__n]); }
# 1058 "/usr/include/c++/5/bits/stl_iterator.h" 3
};
# 1063 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1065 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1066 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1067 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 1069 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1071 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator==(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1072 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1073 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) == (__y.base()); }
# 1075 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1077 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1078 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1079 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1081 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1083 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator!=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1084 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1085 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1087 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1089 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1090 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1091 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) < (__y.base()); }
# 1093 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1095 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1096 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1097 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) < (__y.base()); }
# 1099 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1101 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1102 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1103 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1105 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1107 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator<=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1108 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1109 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1111 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1113 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1114 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1115 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1117 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1119 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1120 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1121 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1123 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline bool
# 1125 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1126 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1127 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1129 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline bool
# 1131 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator>=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1132 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)
# 1133 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1136 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> inline auto
# 1138 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1139 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__x.base()) - (__y.base())))
# 1141 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) - (__y.base()); }
# 1143 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline auto
# 1145 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator-(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1146 "/usr/include/c++/5/bits/stl_iterator.h" 3
__y)->__decltype(((__x.base()) - (__y.base())))
# 1148 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (__x.base()) - (__y.base()); }
# 1150 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline move_iterator< _Iterator>
# 1152 "/usr/include/c++/5/bits/stl_iterator.h" 3
operator+(typename move_iterator< _Iterator> ::difference_type __n, const move_iterator< _Iterator> &
# 1153 "/usr/include/c++/5/bits/stl_iterator.h" 3
__x)
# 1154 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return __x + __n; }
# 1156 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator> inline move_iterator< _Iterator>
# 1158 "/usr/include/c++/5/bits/stl_iterator.h" 3
make_move_iterator(_Iterator __i)
# 1159 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return ((move_iterator< _Iterator> )(__i)); }
# 1161 "/usr/include/c++/5/bits/stl_iterator.h" 3
template< class _Iterator, class _ReturnType = typename conditional< __move_if_noexcept_cond< typename iterator_traits< _Iterator> ::value_type> ::value, _Iterator, move_iterator< _Iterator> > ::type> inline _ReturnType
# 1166 "/usr/include/c++/5/bits/stl_iterator.h" 3
__make_move_if_noexcept_iterator(_Iterator __i)
# 1167 "/usr/include/c++/5/bits/stl_iterator.h" 3
{ return (_ReturnType)__i; }
# 1172 "/usr/include/c++/5/bits/stl_iterator.h" 3
}
# 33 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __gnu_cxx {
# 35 "/usr/include/c++/5/bits/predefined_ops.h" 3
namespace __ops {
# 37 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_iter {
# 39 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 42 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 43 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) < (*__it2); }
# 44 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 47 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_iter __iter_less_iter()
# 48 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_iter(); }
# 50 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_less_val {
# 52 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 54 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 55 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) < __val; }
# 56 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 59 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_less_val()
# 60 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 63 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_comp_val(_Iter_less_iter)
# 64 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 66 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_less_iter {
# 68 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 70 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it) const
# 71 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return __val < (*__it); }
# 72 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 75 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_less_iter()
# 76 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 79 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Val_less_iter __val_comp_iter(_Iter_less_iter)
# 80 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 82 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_iter {
# 84 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 86 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 87 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it1) == (*__it2); }
# 88 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 91 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_iter __iter_equal_to_iter()
# 92 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_iter(); }
# 94 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equal_to_val {
# 96 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 98 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 99 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == __val; }
# 100 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 103 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_equal_to_val()
# 104 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 107 "/usr/include/c++/5/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_comp_val(_Iter_equal_to_iter)
# 108 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 110 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 111 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_iter {
# 113 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 115 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_iter(_Compare __comp) : _M_comp(__comp)
# 117 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 119 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 122 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2)
# 123 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it1, *__it2); }
# 124 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 126 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_iter< _Compare>
# 129 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Compare __comp)
# 130 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_iter< _Compare> )(__comp)); }
# 132 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 133 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_val {
# 135 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 137 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_val(_Compare __comp) : _M_comp(__comp)
# 139 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 141 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 143 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val)
# 144 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, __val); }
# 145 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 147 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 149 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp)
# 150 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )(__comp)); }
# 152 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 154 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Iter_comp_iter< _Compare> __comp)
# 155 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )((__comp._M_comp))); }
# 157 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare>
# 158 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Val_comp_iter {
# 160 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 162 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Val_comp_iter(_Compare __comp) : _M_comp(__comp)
# 164 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 166 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 168 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it)
# 169 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(__val, *__it); }
# 170 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 172 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 174 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Compare __comp)
# 175 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )(__comp)); }
# 177 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 179 "/usr/include/c++/5/bits/predefined_ops.h" 3
__val_comp_iter(_Iter_comp_iter< _Compare> __comp)
# 180 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )((__comp._M_comp))); }
# 182 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value>
# 183 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_val {
# 185 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 187 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_val(_Value &__value) : _M_value(__value)
# 189 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 191 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 193 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 194 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it) == (_M_value); }
# 195 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 197 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Value> inline _Iter_equals_val< _Value>
# 199 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_equals_val(_Value &__val)
# 200 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_val< _Value> )(__val)); }
# 202 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator1>
# 203 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_equals_iter {
# 205 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 207 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_equals_iter(_Iterator1 __it1) : _M_ref(*__it1)
# 209 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 211 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 213 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 214 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (*__it2) == (_M_ref); }
# 215 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 217 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> inline _Iter_equals_iter< _Iterator>
# 219 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)
# 220 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_equals_iter< _Iterator> )(__it)); }
# 222 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 223 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_pred {
# 225 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 227 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_pred(_Predicate __pred) : _M_pred(__pred)
# 229 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 231 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 233 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 234 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_pred)(*__it); }
# 235 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 237 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_pred< _Predicate>
# 239 "/usr/include/c++/5/bits/predefined_ops.h" 3
__pred_iter(_Predicate __pred)
# 240 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_pred< _Predicate> )(__pred)); }
# 242 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value>
# 243 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_val {
# 245 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 246 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Value &_M_value;
# 248 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_val(_Compare __comp, _Value &__value) : _M_comp(__comp), _M_value(__value)
# 250 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 252 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 254 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 255 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, _M_value); }
# 256 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 258 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Value> _Iter_comp_to_val< _Compare, _Value>
# 260 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp, _Value &__val)
# 261 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_val< _Compare, _Value> (__comp, __val); }
# 263 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator1>
# 264 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_comp_to_iter {
# 266 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Compare _M_comp;
# 267 "/usr/include/c++/5/bits/predefined_ops.h" 3
typename std::iterator_traits< _Iterator1> ::reference _M_ref;
# 269 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1) : _M_comp(__comp), _M_ref(*__it1)
# 271 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 273 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 275 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 276 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it2, _M_ref); }
# 277 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 279 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator> inline _Iter_comp_to_iter< _Compare, _Iterator>
# 281 "/usr/include/c++/5/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_comp_iter< _Compare> __comp, _Iterator __it)
# 282 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return _Iter_comp_to_iter< _Compare, _Iterator> ((__comp._M_comp), __it); }
# 284 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate>
# 285 "/usr/include/c++/5/bits/predefined_ops.h" 3
struct _Iter_negate {
# 287 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 289 "/usr/include/c++/5/bits/predefined_ops.h" 3
_Iter_negate(_Predicate __pred) : _M_pred(__pred)
# 291 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ }
# 293 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 295 "/usr/include/c++/5/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 296 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return !((bool)(_M_pred)(*__it)); }
# 297 "/usr/include/c++/5/bits/predefined_ops.h" 3
};
# 299 "/usr/include/c++/5/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_negate< _Predicate>
# 301 "/usr/include/c++/5/bits/predefined_ops.h" 3
__negate(_Iter_pred< _Predicate> __pred)
# 302 "/usr/include/c++/5/bits/predefined_ops.h" 3
{ return ((_Iter_negate< _Predicate> )((__pred._M_pred))); }
# 304 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 305 "/usr/include/c++/5/bits/predefined_ops.h" 3
}
# 73 "/usr/include/c++/5/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 118 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline void
# 120 "/usr/include/c++/5/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 121 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 148 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap(*__a, *__b);
# 150 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator2
# 166 "/usr/include/c++/5/bits/stl_algobase.h" 3
swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 167 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 168 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 174 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 176 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 177 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::iter_swap(__first1, __first2); }
# 178 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first2;
# 179 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 192 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 195 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b)
# 196 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 200 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__b < __a) {
# 201 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 202 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 203 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 216 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline const _Tp &
# 219 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b)
# 220 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 224 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__a < __b) {
# 225 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 226 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 227 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 240 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 243 "/usr/include/c++/5/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 244 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 246 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__b, __a)) {
# 247 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 248 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 249 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 262 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> inline const _Tp &
# 265 "/usr/include/c++/5/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 266 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 268 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__a, __b)) {
# 269 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __b; }
# 270 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __a;
# 271 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 276 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Niter_base : public _Iter_base< _Iterator, __is_normal_iterator< _Iterator> ::__value> {
# 278 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 280 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Niter_base< _Iterator> ::iterator_type
# 282 "/usr/include/c++/5/bits/stl_algobase.h" 3
__niter_base(_Iterator __it)
# 283 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Niter_base< _Iterator> ::_S_base(__it); }
# 286 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator>
# 287 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct _Miter_base : public _Iter_base< _Iterator, __is_move_iterator< _Iterator> ::__value> {
# 289 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 291 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Iterator> inline typename _Miter_base< _Iterator> ::iterator_type
# 293 "/usr/include/c++/5/bits/stl_algobase.h" 3
__miter_base(_Iterator __it)
# 294 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return std::_Miter_base< _Iterator> ::_S_base(__it); }
# 302 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 303 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move {
# 305 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 307 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 308 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 309 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 310 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first); }
# 311 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 312 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 313 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 316 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Category>
# 317 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move< true, false, _Category> {
# 319 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 321 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 322 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 323 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), (++__first)) {
# 324 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = std::move(*__first); }
# 325 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 326 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 327 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 331 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 333 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 335 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 336 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 337 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 338 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 339 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 340 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 341 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 342 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__result;
# 343 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 344 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 345 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 350 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move< true, false, random_access_iterator_tag> {
# 352 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 354 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 355 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 356 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 357 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 358 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 359 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__result) = std::move(*__first);
# 360 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 361 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__result;
# 362 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 363 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 364 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 365 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 368 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 369 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 371 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 373 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_m(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 374 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 376 "/usr/include/c++/5/bits/stl_algobase.h" 3
using __assignable = conditional< _IsMove, is_move_assignable< _Tp> , is_copy_assignable< _Tp> > ;
# 380 "/usr/include/c++/5/bits/stl_algobase.h" 3
static_assert((__assignable::type::value), "type is not assignable");
# 382 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 383 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 384 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result, __first, sizeof(_Tp) * _Num); }
# 385 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result + _Num;
# 386 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 389 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 391 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a(_II __first, _II __last, _OI __result)
# 392 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::value_type _ValueTypeI;
# 394 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _OI> ::value_type _ValueTypeO;
# 395 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::iterator_category _Category;
# 396 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueTypeI) && __is_pointer< _II> ::__value && __is_pointer< _OI> ::__value && __are_same< typename iterator_traits< _II> ::value_type, typename iterator_traits< _OI> ::value_type> ::__value);
# 401 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move< _IsMove, __simple, typename iterator_traits< _II> ::iterator_category> ::__copy_m(__first, __last, __result);
# 403 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 407 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 410 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 413 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 416 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 422 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 428 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 434 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 436 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_a2(_II __first, _II __last, _OI __result)
# 437 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 438 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__copy_move_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 441 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 460 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 462 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy(_II __first, _II __last, _OI __result)
# 463 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 468 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 470 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_a2< __is_move_iterator< _II> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 473 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 493 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 495 "/usr/include/c++/5/bits/stl_algobase.h" 3
move(_II __first, _II __last, _OI __result)
# 496 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 501 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 503 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_a2< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 505 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 512 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool , bool , class >
# 513 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 515 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 517 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 518 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 519 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__first != __last) {
# 520 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 521 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 522 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 523 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 526 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Category>
# 527 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward< true, false, _Category> {
# 529 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 531 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 532 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 533 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__first != __last) {
# 534 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 535 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 536 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 537 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 541 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 543 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 545 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 546 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 547 "/usr/include/c++/5/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 548 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 549 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 550 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 551 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 552 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 556 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< true, false, random_access_iterator_tag> {
# 558 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 560 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 561 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 562 "/usr/include/c++/5/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n;
# 563 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__n = (__last - __first); __n > 0; --__n) {
# 564 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 565 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result;
# 566 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 567 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 570 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove>
# 571 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 573 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static _Tp *
# 575 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_b(const _Tp *__first, const _Tp *__last, _Tp *__result)
# 576 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 578 "/usr/include/c++/5/bits/stl_algobase.h" 3
using __assignable = conditional< _IsMove, is_move_assignable< _Tp> , is_copy_assignable< _Tp> > ;
# 582 "/usr/include/c++/5/bits/stl_algobase.h" 3
static_assert((__assignable::type::value), "type is not assignable");
# 584 "/usr/include/c++/5/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 585 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (_Num) {
# 586 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num); }
# 587 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result - _Num;
# 588 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 589 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 591 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 593 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
# 594 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 595 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::value_type _ValueType1;
# 596 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI2> ::value_type _ValueType2;
# 597 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::iterator_category _Category;
# 598 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_trivial(_ValueType1) && __is_pointer< _BI1> ::__value && __is_pointer< _BI2> ::__value && __are_same< typename iterator_traits< _BI1> ::value_type, typename iterator_traits< _BI2> ::value_type> ::__value);
# 603 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward< _IsMove, __simple, typename iterator_traits< _BI1> ::iterator_category> ::__copy_move_b(__first, __last, __result);
# 607 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 609 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 611 "/usr/include/c++/5/bits/stl_algobase.h" 3
__copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
# 612 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 613 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_BI2)std::__copy_move_backward_a< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result));
# 616 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 636 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 638 "/usr/include/c++/5/bits/stl_algobase.h" 3
copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 639 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 648 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< __is_move_iterator< _BI1> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 651 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 672 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 674 "/usr/include/c++/5/bits/stl_algobase.h" 3
move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 675 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 682 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 684 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__copy_move_backward_a2< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 687 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 694 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, void> ::__type
# 697 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 698 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 699 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 700 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 701 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 702 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, void> ::__type
# 707 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 708 "/usr/include/c++/5/bits/stl_algobase.h" 3
__value)
# 709 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 710 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 711 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 712 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 713 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 716 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, void> ::__type
# 719 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_a(_Tp *__first, _Tp *__last, const _Tp &__c)
# 720 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 721 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __c;
# 722 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last - __first) {
# 723 "/usr/include/c++/5/bits/stl_algobase.h" 3
__builtin_memset(__first, static_cast< unsigned char>(__tmp), __len); }
# 724 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 738 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 740 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value)
# 741 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 745 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 747 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(std::__niter_base(__first), std::__niter_base(__last), __value);
# 749 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 751 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 754 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 755 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 756 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 758 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __value; }
# 759 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 760 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 762 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 765 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value)
# 766 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 767 "/usr/include/c++/5/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 768 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (__decltype((__n + 0)) __niter = __n; __niter > 0; (--__niter), (++__first)) {
# 770 "/usr/include/c++/5/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 771 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 772 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 774 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, _Tp *> ::__type
# 777 "/usr/include/c++/5/bits/stl_algobase.h" 3
__fill_n_a(_Tp *__first, _Size __n, const _Tp &__c)
# 778 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 779 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::__fill_a(__first, __first + __n, __c);
# 780 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first + __n;
# 781 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 798 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _OI, class _Size, class _Tp> inline _OI
# 800 "/usr/include/c++/5/bits/stl_algobase.h" 3
fill_n(_OI __first, _Size __n, const _Tp &__value)
# 801 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 805 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (_OI)std::__fill_n_a(std::__niter_base(__first), __n, __value);
# 806 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 808 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 809 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __equal {
# 811 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 813 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 814 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 815 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 816 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 817 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 818 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 819 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 820 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 823 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 825 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp> static bool
# 827 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2)
# 828 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 829 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = __last1 - __first1) {
# 830 "/usr/include/c++/5/bits/stl_algobase.h" 3
return !(__builtin_memcmp(__first1, __first2, sizeof(_Tp) * __len)); }
# 831 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 832 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 833 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 835 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 837 "/usr/include/c++/5/bits/stl_algobase.h" 3
__equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
# 838 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 839 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 840 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 841 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = ((__is_integer< typename iterator_traits< _II1> ::value_type> ::__value || __is_pointer< typename iterator_traits< _II1> ::value_type> ::__value) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value && __are_same< typename iterator_traits< _II1> ::value_type, typename iterator_traits< _II2> ::value_type> ::__value);
# 847 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal< __simple> ::equal(__first1, __last1, __first2);
# 848 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class , class >
# 851 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lc_rai {
# 853 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static _II1
# 855 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_II1, _II1 __last1, _II2, _II2)
# 856 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __last1; }
# 858 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II> static bool
# 860 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_II __first, _II __last)
# 861 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return __first != __last; }
# 862 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 865 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 867 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI1, class _RAI2> static _RAI1
# 869 "/usr/include/c++/5/bits/stl_algobase.h" 3
__newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2
# 870 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _RAI2 __last2)
# 871 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 873 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI1> ::difference_type __diff1 = __last1 - __first1;
# 875 "/usr/include/c++/5/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI2> ::difference_type __diff2 = __last2 - __first2;
# 876 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__diff2 < __diff1) ? __first1 + __diff2 : __last1;
# 877 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 879 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _RAI> static bool
# 881 "/usr/include/c++/5/bits/stl_algobase.h" 3
__cnd2(_RAI, _RAI)
# 882 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return true; }
# 883 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 885 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> bool
# 887 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_impl(_II1 __first1, _II1 __last1, _II2
# 888 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare
# 889 "/usr/include/c++/5/bits/stl_algobase.h" 3
__comp)
# 890 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 891 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 892 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 893 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 895 "/usr/include/c++/5/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 896 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), (++__first2))
# 898 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 899 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first1, __first2)) {
# 900 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true; }
# 901 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__first2, __first1)) {
# 902 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; }
# 903 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 904 "/usr/include/c++/5/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 905 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 907 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 908 "/usr/include/c++/5/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 910 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool __lc(_II1, _II1, _II2, _II2);
# 912 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 914 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< bool _BoolType>
# 915 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> bool
# 918 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare< _BoolType> ::__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 919 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 920 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_less_iter());
# 923 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 926 "/usr/include/c++/5/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 928 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static bool
# 930 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lc(const _Tp *__first1, const _Tp *__last1, const _Up *
# 931 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 932 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 933 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len1 = __last1 - __first1;
# 934 "/usr/include/c++/5/bits/stl_algobase.h" 3
const size_t __len2 = __last2 - __first2;
# 935 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (const size_t __len = std::min(__len1, __len2)) {
# 936 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (int __result = __builtin_memcmp(__first1, __first2, __len)) {
# 937 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __result < 0; } }
# 938 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __len1 < __len2;
# 939 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 940 "/usr/include/c++/5/bits/stl_algobase.h" 3
};
# 942 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 944 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2
# 945 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 946 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 948 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 949 "/usr/include/c++/5/bits/stl_algobase.h" 3
const bool __simple = (__is_byte< typename iterator_traits< _II1> ::value_type> ::__value && __is_byte< typename iterator_traits< _II2> ::value_type> ::__value && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II1> ::value_type> ::__is_signed) && (!__gnu_cxx::__numeric_traits< typename iterator_traits< _II2> ::value_type> ::__is_signed) && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value);
# 956 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare< __simple> ::__lc(__first1, __last1, __first2, __last2);
# 958 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 960 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 962 "/usr/include/c++/5/bits/stl_algobase.h" 3
__lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 963 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val, _Compare __comp)
# 964 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 966 "/usr/include/c++/5/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 968 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __len = std::distance(__first, __last);
# 970 "/usr/include/c++/5/bits/stl_algobase.h" 3
while (__len > 0)
# 971 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 972 "/usr/include/c++/5/bits/stl_algobase.h" 3
_DistanceType __half = __len >> 1;
# 973 "/usr/include/c++/5/bits/stl_algobase.h" 3
_ForwardIterator __middle = __first;
# 974 "/usr/include/c++/5/bits/stl_algobase.h" 3
std::advance(__middle, __half);
# 975 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (__comp(__middle, __val))
# 976 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 977 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first = __middle;
# 978 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first;
# 979 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = ((__len - __half) - 1);
# 980 "/usr/include/c++/5/bits/stl_algobase.h" 3
} else {
# 982 "/usr/include/c++/5/bits/stl_algobase.h" 3
__len = __half; }
# 983 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 984 "/usr/include/c++/5/bits/stl_algobase.h" 3
return __first;
# 985 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 998 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline _ForwardIterator
# 1000 "/usr/include/c++/5/bits/stl_algobase.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1001 "/usr/include/c++/5/bits/stl_algobase.h" 3
__val)
# 1002 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1007 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1009 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lower_bound(__first, __last, __val, __gnu_cxx::__ops::__iter_less_val());
# 1011 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1016 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr int __lg(int __n)
# 1017 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1020 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned __lg(unsigned __n)
# 1021 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(int) * (8)) - (1)) - (__builtin_clz(__n)); }
# 1024 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr long __lg(long __n)
# 1025 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1028 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned long __lg(unsigned long __n)
# 1029 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long) * (8)) - (1)) - (__builtin_clzl(__n)); }
# 1032 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr long long __lg(long long __n)
# 1033 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1036 "/usr/include/c++/5/bits/stl_algobase.h" 3
constexpr unsigned long long __lg(unsigned long long __n)
# 1037 "/usr/include/c++/5/bits/stl_algobase.h" 3
{ return ((sizeof(long long) * (8)) - (1)) - (__builtin_clzll(__n)); }
# 1055 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1057 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1058 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1065 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1067 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__equal_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2));
# 1070 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1087 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1089 "/usr/include/c++/5/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1090 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1091 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1095 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1097 "/usr/include/c++/5/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), (++__first2)) {
# 1098 "/usr/include/c++/5/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1099 "/usr/include/c++/5/bits/stl_algobase.h" 3
return false; } }
# 1100 "/usr/include/c++/5/bits/stl_algobase.h" 3
return true;
# 1101 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1215 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1217 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1218 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1219 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1229 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1230 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1232 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2), std::__niter_base(__last2));
# 1236 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1251 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> inline bool
# 1253 "/usr/include/c++/5/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1254 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare __comp)
# 1255 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1259 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1260 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1262 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__comp));
# 1265 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1268 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1270 "/usr/include/c++/5/bits/stl_algobase.h" 3
__mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1271 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1272 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1273 "/usr/include/c++/5/bits/stl_algobase.h" 3
while ((__first1 != __last1) && __binary_pred(__first1, __first2))
# 1274 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1275 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first1;
# 1276 "/usr/include/c++/5/bits/stl_algobase.h" 3
++__first2;
# 1277 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1278 "/usr/include/c++/5/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1279 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1294 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> inline pair< _InputIterator1, _InputIterator2>
# 1296 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1297 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2)
# 1298 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1305 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1307 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 1309 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1327 "/usr/include/c++/5/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1328 "/usr/include/c++/5/bits/stl_algobase.h" 3
_BinaryPredicate> inline pair< _InputIterator1, _InputIterator2>
# 1330 "/usr/include/c++/5/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1331 "/usr/include/c++/5/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1332 "/usr/include/c++/5/bits/stl_algobase.h" 3
{
# 1336 "/usr/include/c++/5/bits/stl_algobase.h" 3
;
# 1338 "/usr/include/c++/5/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
# 1340 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 1428 "/usr/include/c++/5/bits/stl_algobase.h" 3
}
# 43 "/usr/include/c++/5/bits/char_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 58 "/usr/include/c++/5/bits/char_traits.h" 3
struct _Char_types {
# 60 "/usr/include/c++/5/bits/char_traits.h" 3
typedef unsigned long int_type;
# 61 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streampos pos_type;
# 62 "/usr/include/c++/5/bits/char_traits.h" 3
typedef std::streamoff off_type;
# 63 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 64 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 82 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 83 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits {
# 85 "/usr/include/c++/5/bits/char_traits.h" 3
typedef _CharT char_type;
# 86 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::int_type int_type;
# 87 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::pos_type pos_type;
# 88 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::off_type off_type;
# 89 "/usr/include/c++/5/bits/char_traits.h" 3
typedef typename _Char_types< _CharT> ::state_type state_type;
# 92 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2)
# 93 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 96 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2)
# 97 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 100 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2)
# 101 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 104 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type * __s1, const char_type * __s2, std::size_t __n);
# 107 "/usr/include/c++/5/bits/char_traits.h" 3
static std::size_t length(const char_type * __s);
# 110 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type * __s, std::size_t __n, const char_type & __a);
# 113 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type * __s1, const char_type * __s2, std::size_t __n);
# 116 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type * __s1, const char_type * __s2, std::size_t __n);
# 119 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type * __s, std::size_t __n, char_type __a);
# 122 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c)
# 123 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 126 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c)
# 127 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(__c); }
# 130 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2)
# 131 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 134 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof()
# 135 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 138 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c)
# 139 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (!(eq_int_type)(__c, (eof)())) ? __c : (to_int_type)(char_type()); }
# 140 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 142 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> int
# 145 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::compare(const char_type *__s1, const char_type *__s2, std::size_t __n)
# 146 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 147 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 148 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s1[__i], __s2[__i])) {
# 149 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 150 "/usr/include/c++/5/bits/char_traits.h" 3
if ((lt)(__s2[__i], __s1[__i])) {
# 151 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 152 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 153 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 155 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> std::size_t
# 158 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::length(const char_type *__p)
# 159 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 160 "/usr/include/c++/5/bits/char_traits.h" 3
std::size_t __i = (0);
# 161 "/usr/include/c++/5/bits/char_traits.h" 3
while (!(eq)(__p[__i], char_type())) {
# 162 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 163 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 164 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 166 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> const typename char_traits< _CharT> ::char_type *
# 169 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::find(const char_type *__s, std::size_t __n, const char_type &__a)
# 170 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 171 "/usr/include/c++/5/bits/char_traits.h" 3
for (std::size_t __i = (0); __i < __n; ++__i) {
# 172 "/usr/include/c++/5/bits/char_traits.h" 3
if ((eq)(__s[__i], __a)) {
# 173 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 174 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 175 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 177 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 180 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::move(char_type *__s1, const char_type *__s2, std::size_t __n)
# 181 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 182 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< _CharT *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 184 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 186 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 189 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::copy(char_type *__s1, const char_type *__s2, std::size_t __n)
# 190 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 192 "/usr/include/c++/5/bits/char_traits.h" 3
std::copy(__s2, __s2 + __n, __s1);
# 193 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1;
# 194 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 196 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT> typename char_traits< _CharT> ::char_type *
# 199 "/usr/include/c++/5/bits/char_traits.h" 3
char_traits< _CharT> ::assign(char_type *__s, std::size_t __n, char_type __a)
# 200 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 202 "/usr/include/c++/5/bits/char_traits.h" 3
std::fill_n(__s, __n, __a);
# 203 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 204 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 207 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 209 "/usr/include/c++/5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 226 "/usr/include/c++/5/bits/char_traits.h" 3
template< class _CharT>
# 227 "/usr/include/c++/5/bits/char_traits.h" 3
struct char_traits : public __gnu_cxx::char_traits< _CharT> {
# 228 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 233 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char> {
# 235 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char char_type;
# 236 "/usr/include/c++/5/bits/char_traits.h" 3
typedef int int_type;
# 237 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streampos pos_type;
# 238 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 239 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 242 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 243 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 246 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 247 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 250 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 251 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 253 "/usr/include/c++/5/bits/char_traits.h" 3
return (static_cast< unsigned char>(__c1)) < (static_cast< unsigned char>(__c2));
# 255 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 258 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 259 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 260 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 261 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 262 "/usr/include/c++/5/bits/char_traits.h" 3
return __builtin_memcmp(__s1, __s2, __n);
# 263 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 266 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 267 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __builtin_strlen(__s); }
# 270 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 271 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 272 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 273 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 274 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< const char_type *>(__builtin_memchr(__s, __a, __n));
# 275 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 278 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 279 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 280 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 281 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 282 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n));
# 283 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 286 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 287 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 288 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 289 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 290 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n));
# 291 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 294 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 295 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 296 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 297 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 298 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memset(__s, __a, __n));
# 299 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 302 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 303 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< char_type>(__c); }
# 308 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 309 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(static_cast< unsigned char>(__c)); }
# 312 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 313 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 316 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 317 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 320 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 321 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (__c == eof()) ? 0 : __c; }
# 322 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 328 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< wchar_t> {
# 330 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wchar_t char_type;
# 331 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wint_t int_type;
# 332 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 333 "/usr/include/c++/5/bits/char_traits.h" 3
typedef wstreampos pos_type;
# 334 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 337 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 338 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 341 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 342 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 345 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 346 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 349 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 350 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 351 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 352 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 353 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcmp(__s1, __s2, __n);
# 354 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 357 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 358 "/usr/include/c++/5/bits/char_traits.h" 3
{ return wcslen(__s); }
# 361 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 362 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 363 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 364 "/usr/include/c++/5/bits/char_traits.h" 3
return 0; }
# 365 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemchr(__s, __a, __n);
# 366 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 369 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 370 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 371 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 372 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 373 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemmove(__s1, __s2, __n);
# 374 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 377 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 378 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 379 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 380 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 381 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemcpy(__s1, __s2, __n);
# 382 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 385 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 386 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 387 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 388 "/usr/include/c++/5/bits/char_traits.h" 3
return __s; }
# 389 "/usr/include/c++/5/bits/char_traits.h" 3
return wmemset(__s, __a, __n);
# 390 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 393 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 394 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 397 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 398 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 401 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 402 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 405 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 406 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(4294967295U); }
# 409 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 410 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 411 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 415 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 46 "/usr/include/c++/5/cstdint" 3
namespace std {
# 48 "/usr/include/c++/5/cstdint" 3
using ::int8_t;
# 49 "/usr/include/c++/5/cstdint" 3
using ::int16_t;
# 50 "/usr/include/c++/5/cstdint" 3
using ::int32_t;
# 51 "/usr/include/c++/5/cstdint" 3
using ::int64_t;
# 53 "/usr/include/c++/5/cstdint" 3
using ::int_fast8_t;
# 54 "/usr/include/c++/5/cstdint" 3
using ::int_fast16_t;
# 55 "/usr/include/c++/5/cstdint" 3
using ::int_fast32_t;
# 56 "/usr/include/c++/5/cstdint" 3
using ::int_fast64_t;
# 58 "/usr/include/c++/5/cstdint" 3
using ::int_least8_t;
# 59 "/usr/include/c++/5/cstdint" 3
using ::int_least16_t;
# 60 "/usr/include/c++/5/cstdint" 3
using ::int_least32_t;
# 61 "/usr/include/c++/5/cstdint" 3
using ::int_least64_t;
# 63 "/usr/include/c++/5/cstdint" 3
using ::intmax_t;
# 64 "/usr/include/c++/5/cstdint" 3
using ::intptr_t;
# 66 "/usr/include/c++/5/cstdint" 3
using ::uint8_t;
# 67 "/usr/include/c++/5/cstdint" 3
using ::uint16_t;
# 68 "/usr/include/c++/5/cstdint" 3
using ::uint32_t;
# 69 "/usr/include/c++/5/cstdint" 3
using ::uint64_t;
# 71 "/usr/include/c++/5/cstdint" 3
using ::uint_fast8_t;
# 72 "/usr/include/c++/5/cstdint" 3
using ::uint_fast16_t;
# 73 "/usr/include/c++/5/cstdint" 3
using ::uint_fast32_t;
# 74 "/usr/include/c++/5/cstdint" 3
using ::uint_fast64_t;
# 76 "/usr/include/c++/5/cstdint" 3
using ::uint_least8_t;
# 79 "/usr/include/c++/5/cstdint" 3
using ::uint_least64_t;
# 81 "/usr/include/c++/5/cstdint" 3
using ::uintmax_t;
# 82 "/usr/include/c++/5/cstdint" 3
using ::uintptr_t;
# 83 "/usr/include/c++/5/cstdint" 3
}
# 422 "/usr/include/c++/5/bits/char_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 427 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char16_t> {
# 429 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char16_t char_type;
# 430 "/usr/include/c++/5/bits/char_traits.h" 3
typedef uint_least16_t int_type;
# 431 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 432 "/usr/include/c++/5/bits/char_traits.h" 3
typedef u16streampos pos_type;
# 433 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 436 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 437 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 440 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 441 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 444 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 445 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 448 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 449 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 450 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 451 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s1[__i], __s2[__i])) {
# 452 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 453 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s2[__i], __s1[__i])) {
# 454 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 455 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 456 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 459 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 460 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 461 "/usr/include/c++/5/bits/char_traits.h" 3
size_t __i = (0);
# 462 "/usr/include/c++/5/bits/char_traits.h" 3
while (!eq(__s[__i], char_type())) {
# 463 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 464 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 465 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 468 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 469 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 470 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 471 "/usr/include/c++/5/bits/char_traits.h" 3
if (eq(__s[__i], __a)) {
# 472 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 473 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 474 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 477 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 478 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 479 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 480 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 481 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 483 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 486 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 487 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 488 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 489 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 490 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type)));
# 492 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 495 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 496 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 497 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 498 "/usr/include/c++/5/bits/char_traits.h" 3
assign(__s[__i], __a); }
# 499 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 500 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 503 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 504 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 507 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 508 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 511 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 512 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 515 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 516 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 519 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 520 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : (__c); }
# 521 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 524 "/usr/include/c++/5/bits/char_traits.h" 3
template<> struct char_traits< char32_t> {
# 526 "/usr/include/c++/5/bits/char_traits.h" 3
typedef char32_t char_type;
# 527 "/usr/include/c++/5/bits/char_traits.h" 3
typedef uint_least32_t int_type;
# 528 "/usr/include/c++/5/bits/char_traits.h" 3
typedef streamoff off_type;
# 529 "/usr/include/c++/5/bits/char_traits.h" 3
typedef u32streampos pos_type;
# 530 "/usr/include/c++/5/bits/char_traits.h" 3
typedef mbstate_t state_type;
# 533 "/usr/include/c++/5/bits/char_traits.h" 3
static void assign(char_type &__c1, const char_type &__c2) noexcept
# 534 "/usr/include/c++/5/bits/char_traits.h" 3
{ __c1 = __c2; }
# 537 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq(const char_type &__c1, const char_type &__c2) noexcept
# 538 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 541 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool lt(const char_type &__c1, const char_type &__c2) noexcept
# 542 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 < __c2; }
# 545 "/usr/include/c++/5/bits/char_traits.h" 3
static int compare(const char_type *__s1, const char_type *__s2, size_t __n)
# 546 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 547 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 548 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s1[__i], __s2[__i])) {
# 549 "/usr/include/c++/5/bits/char_traits.h" 3
return -1; } else {
# 550 "/usr/include/c++/5/bits/char_traits.h" 3
if (lt(__s2[__i], __s1[__i])) {
# 551 "/usr/include/c++/5/bits/char_traits.h" 3
return 1; } } }
# 552 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 553 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 556 "/usr/include/c++/5/bits/char_traits.h" 3
static size_t length(const char_type *__s)
# 557 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 558 "/usr/include/c++/5/bits/char_traits.h" 3
size_t __i = (0);
# 559 "/usr/include/c++/5/bits/char_traits.h" 3
while (!eq(__s[__i], char_type())) {
# 560 "/usr/include/c++/5/bits/char_traits.h" 3
++__i; }
# 561 "/usr/include/c++/5/bits/char_traits.h" 3
return __i;
# 562 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 565 "/usr/include/c++/5/bits/char_traits.h" 3
static const char_type *find(const char_type *__s, size_t __n, const char_type &__a)
# 566 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 567 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 568 "/usr/include/c++/5/bits/char_traits.h" 3
if (eq(__s[__i], __a)) {
# 569 "/usr/include/c++/5/bits/char_traits.h" 3
return __s + __i; } }
# 570 "/usr/include/c++/5/bits/char_traits.h" 3
return 0;
# 571 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 574 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *move(char_type *__s1, const char_type *__s2, size_t __n)
# 575 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 576 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 577 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 578 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memmove(__s1, __s2, __n * sizeof(char_type)));
# 580 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 583 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *copy(char_type *__s1, const char_type *__s2, size_t __n)
# 584 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 585 "/usr/include/c++/5/bits/char_traits.h" 3
if (__n == (0)) {
# 586 "/usr/include/c++/5/bits/char_traits.h" 3
return __s1; }
# 587 "/usr/include/c++/5/bits/char_traits.h" 3
return static_cast< char_type *>(__builtin_memcpy(__s1, __s2, __n * sizeof(char_type)));
# 589 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 592 "/usr/include/c++/5/bits/char_traits.h" 3
static char_type *assign(char_type *__s, size_t __n, char_type __a)
# 593 "/usr/include/c++/5/bits/char_traits.h" 3
{
# 594 "/usr/include/c++/5/bits/char_traits.h" 3
for (size_t __i = (0); __i < __n; ++__i) {
# 595 "/usr/include/c++/5/bits/char_traits.h" 3
assign(__s[__i], __a); }
# 596 "/usr/include/c++/5/bits/char_traits.h" 3
return __s;
# 597 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 600 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr char_type to_char_type(const int_type &__c) noexcept
# 601 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (char_type)__c; }
# 604 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type to_int_type(const char_type &__c) noexcept
# 605 "/usr/include/c++/5/bits/char_traits.h" 3
{ return (int_type)__c; }
# 608 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr bool eq_int_type(const int_type &__c1, const int_type &__c2) noexcept
# 609 "/usr/include/c++/5/bits/char_traits.h" 3
{ return __c1 == __c2; }
# 612 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type eof() noexcept
# 613 "/usr/include/c++/5/bits/char_traits.h" 3
{ return static_cast< int_type>(-1); }
# 616 "/usr/include/c++/5/bits/char_traits.h" 3
static constexpr int_type not_eof(const int_type &__c) noexcept
# 617 "/usr/include/c++/5/bits/char_traits.h" 3
{ return eq_int_type(__c, eof()) ? 0 : __c; }
# 618 "/usr/include/c++/5/bits/char_traits.h" 3
};
# 621 "/usr/include/c++/5/bits/char_traits.h" 3
}
# 31 "/usr/include/locale.h" 3
extern "C" {
# 53 "/usr/include/locale.h" 3
struct lconv {
# 57 "/usr/include/locale.h" 3
char *decimal_point;
# 58 "/usr/include/locale.h" 3
char *thousands_sep;
# 64 "/usr/include/locale.h" 3
char *grouping;
# 70 "/usr/include/locale.h" 3
char *int_curr_symbol;
# 71 "/usr/include/locale.h" 3
char *currency_symbol;
# 72 "/usr/include/locale.h" 3
char *mon_decimal_point;
# 73 "/usr/include/locale.h" 3
char *mon_thousands_sep;
# 74 "/usr/include/locale.h" 3
char *mon_grouping;
# 75 "/usr/include/locale.h" 3
char *positive_sign;
# 76 "/usr/include/locale.h" 3
char *negative_sign;
# 77 "/usr/include/locale.h" 3
char int_frac_digits;
# 78 "/usr/include/locale.h" 3
char frac_digits;
# 80 "/usr/include/locale.h" 3
char p_cs_precedes;
# 82 "/usr/include/locale.h" 3
char p_sep_by_space;
# 84 "/usr/include/locale.h" 3
char n_cs_precedes;
# 86 "/usr/include/locale.h" 3
char n_sep_by_space;
# 93 "/usr/include/locale.h" 3
char p_sign_posn;
# 94 "/usr/include/locale.h" 3
char n_sign_posn;
# 97 "/usr/include/locale.h" 3
char int_p_cs_precedes;
# 99 "/usr/include/locale.h" 3
char int_p_sep_by_space;
# 101 "/usr/include/locale.h" 3
char int_n_cs_precedes;
# 103 "/usr/include/locale.h" 3
char int_n_sep_by_space;
# 110 "/usr/include/locale.h" 3
char int_p_sign_posn;
# 111 "/usr/include/locale.h" 3
char int_n_sign_posn;
# 120 "/usr/include/locale.h" 3
};
# 124 "/usr/include/locale.h" 3
extern char *setlocale(int __category, const char * __locale) throw();
# 127 "/usr/include/locale.h" 3
extern lconv *localeconv() throw();
# 151 "/usr/include/locale.h" 3
extern __locale_t newlocale(int __category_mask, const char * __locale, __locale_t __base) throw();
# 186 "/usr/include/locale.h" 3
extern __locale_t duplocale(__locale_t __dataset) throw();
# 190 "/usr/include/locale.h" 3
extern void freelocale(__locale_t __dataset) throw();
# 197 "/usr/include/locale.h" 3
extern __locale_t uselocale(__locale_t __dataset) throw();
# 205 "/usr/include/locale.h" 3
}
# 51 "/usr/include/c++/5/clocale" 3
namespace std {
# 53 "/usr/include/c++/5/clocale" 3
using ::lconv;
# 54 "/usr/include/c++/5/clocale" 3
using ::setlocale;
# 55 "/usr/include/c++/5/clocale" 3
using ::localeconv;
# 56 "/usr/include/c++/5/clocale" 3
}
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
extern "C" __typeof__(uselocale) __uselocale;
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
typedef __locale_t __c_locale;
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
inline int __convert_from_v(const __c_locale &__cloc __attribute((__unused__)), char *
# 70 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__out, const int
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__size __attribute((__unused__)), const char *
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__fmt, ...)
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
{
# 75 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__c_locale __old = __gnu_cxx::__uselocale(__cloc);
# 88 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_list __args;
# 89 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_start((__args),__fmt);
# 92 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
const int __ret = __builtin_vsnprintf(__out, __size, __fmt, __args);
# 97 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__builtin_va_end(__args);
# 100 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
__gnu_cxx::__uselocale(__old);
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
return __ret;
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 112 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h" 3
}
# 28 "/usr/include/ctype.h" 3
extern "C" {
# 47 "/usr/include/ctype.h" 3
enum {
# 48 "/usr/include/ctype.h" 3
_ISupper = 256,
# 49 "/usr/include/ctype.h" 3
_ISlower = 512,
# 50 "/usr/include/ctype.h" 3
_ISalpha = 1024,
# 51 "/usr/include/ctype.h" 3
_ISdigit = 2048,
# 52 "/usr/include/ctype.h" 3
_ISxdigit = 4096,
# 53 "/usr/include/ctype.h" 3
_ISspace = 8192,
# 54 "/usr/include/ctype.h" 3
_ISprint = 16384,
# 55 "/usr/include/ctype.h" 3
_ISgraph = 32768,
# 56 "/usr/include/ctype.h" 3
_ISblank = 1,
# 57 "/usr/include/ctype.h" 3
_IScntrl,
# 58 "/usr/include/ctype.h" 3
_ISpunct = 4,
# 59 "/usr/include/ctype.h" 3
_ISalnum = 8
# 60 "/usr/include/ctype.h" 3
};
# 79 "/usr/include/ctype.h" 3
extern const unsigned short **__ctype_b_loc() throw()
# 80 "/usr/include/ctype.h" 3
 __attribute((const));
# 81 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_tolower_loc() throw()
# 82 "/usr/include/ctype.h" 3
 __attribute((const));
# 83 "/usr/include/ctype.h" 3
extern const __int32_t **__ctype_toupper_loc() throw()
# 84 "/usr/include/ctype.h" 3
 __attribute((const));
# 110 "/usr/include/ctype.h" 3
extern int isalnum(int) throw();
# 111 "/usr/include/ctype.h" 3
extern int isalpha(int) throw();
# 112 "/usr/include/ctype.h" 3
extern int iscntrl(int) throw();
# 113 "/usr/include/ctype.h" 3
extern int isdigit(int) throw();
# 114 "/usr/include/ctype.h" 3
extern int islower(int) throw();
# 115 "/usr/include/ctype.h" 3
extern int isgraph(int) throw();
# 116 "/usr/include/ctype.h" 3
extern int isprint(int) throw();
# 117 "/usr/include/ctype.h" 3
extern int ispunct(int) throw();
# 118 "/usr/include/ctype.h" 3
extern int isspace(int) throw();
# 119 "/usr/include/ctype.h" 3
extern int isupper(int) throw();
# 120 "/usr/include/ctype.h" 3
extern int isxdigit(int) throw();
# 124 "/usr/include/ctype.h" 3
extern int tolower(int __c) throw();
# 127 "/usr/include/ctype.h" 3
extern int toupper(int __c) throw();
# 136 "/usr/include/ctype.h" 3
extern int isblank(int) throw();
# 143 "/usr/include/ctype.h" 3
extern int isctype(int __c, int __mask) throw();
# 150 "/usr/include/ctype.h" 3
extern int isascii(int __c) throw();
# 154 "/usr/include/ctype.h" 3
extern int toascii(int __c) throw();
# 158 "/usr/include/ctype.h" 3
extern int _toupper(int) throw();
# 159 "/usr/include/ctype.h" 3
extern int _tolower(int) throw();
# 271 "/usr/include/ctype.h" 3
extern int isalnum_l(int, __locale_t) throw();
# 272 "/usr/include/ctype.h" 3
extern int isalpha_l(int, __locale_t) throw();
# 273 "/usr/include/ctype.h" 3
extern int iscntrl_l(int, __locale_t) throw();
# 274 "/usr/include/ctype.h" 3
extern int isdigit_l(int, __locale_t) throw();
# 275 "/usr/include/ctype.h" 3
extern int islower_l(int, __locale_t) throw();
# 276 "/usr/include/ctype.h" 3
extern int isgraph_l(int, __locale_t) throw();
# 277 "/usr/include/ctype.h" 3
extern int isprint_l(int, __locale_t) throw();
# 278 "/usr/include/ctype.h" 3
extern int ispunct_l(int, __locale_t) throw();
# 279 "/usr/include/ctype.h" 3
extern int isspace_l(int, __locale_t) throw();
# 280 "/usr/include/ctype.h" 3
extern int isupper_l(int, __locale_t) throw();
# 281 "/usr/include/ctype.h" 3
extern int isxdigit_l(int, __locale_t) throw();
# 283 "/usr/include/ctype.h" 3
extern int isblank_l(int, __locale_t) throw();
# 287 "/usr/include/ctype.h" 3
extern int __tolower_l(int __c, __locale_t __l) throw();
# 288 "/usr/include/ctype.h" 3
extern int tolower_l(int __c, __locale_t __l) throw();
# 291 "/usr/include/ctype.h" 3
extern int __toupper_l(int __c, __locale_t __l) throw();
# 292 "/usr/include/ctype.h" 3
extern int toupper_l(int __c, __locale_t __l) throw();
# 347 "/usr/include/ctype.h" 3
}
# 62 "/usr/include/c++/5/cctype" 3
namespace std {
# 64 "/usr/include/c++/5/cctype" 3
using ::isalnum;
# 65 "/usr/include/c++/5/cctype" 3
using ::isalpha;
# 66 "/usr/include/c++/5/cctype" 3
using ::iscntrl;
# 67 "/usr/include/c++/5/cctype" 3
using ::isdigit;
# 68 "/usr/include/c++/5/cctype" 3
using ::isgraph;
# 69 "/usr/include/c++/5/cctype" 3
using ::islower;
# 70 "/usr/include/c++/5/cctype" 3
using ::isprint;
# 71 "/usr/include/c++/5/cctype" 3
using ::ispunct;
# 72 "/usr/include/c++/5/cctype" 3
using ::isspace;
# 73 "/usr/include/c++/5/cctype" 3
using ::isupper;
# 74 "/usr/include/c++/5/cctype" 3
using ::isxdigit;
# 75 "/usr/include/c++/5/cctype" 3
using ::tolower;
# 76 "/usr/include/c++/5/cctype" 3
using ::toupper;
# 77 "/usr/include/c++/5/cctype" 3
}
# 85 "/usr/include/c++/5/cctype" 3
namespace std {
# 87 "/usr/include/c++/5/cctype" 3
using ::isblank;
# 88 "/usr/include/c++/5/cctype" 3
}
# 44 "/usr/include/c++/5/bits/localefwd.h" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/5/bits/localefwd.h" 3
class locale;
# 57 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> bool has_facet(const locale &) throw();
# 61 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _Facet> const _Facet &use_facet(const locale &);
# 66 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isspace(_CharT, const locale &);
# 70 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isprint(_CharT, const locale &);
# 74 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool iscntrl(_CharT, const locale &);
# 78 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isupper(_CharT, const locale &);
# 82 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool islower(_CharT, const locale &);
# 86 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isalpha(_CharT, const locale &);
# 90 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isdigit(_CharT, const locale &);
# 94 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool ispunct(_CharT, const locale &);
# 98 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isxdigit(_CharT, const locale &);
# 102 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isalnum(_CharT, const locale &);
# 106 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isgraph(_CharT, const locale &);
# 111 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline bool isblank(_CharT, const locale &);
# 116 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline _CharT toupper(_CharT, const locale &);
# 120 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> inline _CharT tolower(_CharT, const locale &);
# 125 "/usr/include/c++/5/bits/localefwd.h" 3
struct ctype_base;
# 126 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype;
# 128 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< char> ;
# 130 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class ctype< wchar_t> ;
# 132 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class ctype_byname;
# 136 "/usr/include/c++/5/bits/localefwd.h" 3
class codecvt_base;
# 137 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt;
# 139 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< char, char, __mbstate_t> ;
# 141 "/usr/include/c++/5/bits/localefwd.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> ;
# 143 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _InternT, class _ExternT, class _StateT> class codecvt_byname;
# 148 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class num_get;
# 150 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class num_put;
# 153 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 154 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct;
# 155 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class numpunct_byname;
# 156 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 158 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 160 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate;
# 162 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class collate_byname;
# 164 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 167 "/usr/include/c++/5/bits/localefwd.h" 3
class time_base;
# 168 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 169 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get;
# 171 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class time_get_byname;
# 173 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 174 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put;
# 176 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class time_put_byname;
# 180 "/usr/include/c++/5/bits/localefwd.h" 3
class money_base;
# 181 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 182 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _InIter = istreambuf_iterator< _CharT, char_traits< _CharT> > > class money_get;
# 184 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, class _OutIter = ostreambuf_iterator< _CharT, char_traits< _CharT> > > class money_put;
# 186 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 187 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 188 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct;
# 190 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT, bool _Intl = false> class moneypunct_byname;
# 192 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 195 "/usr/include/c++/5/bits/localefwd.h" 3
class messages_base;
# 196 "/usr/include/c++/5/bits/localefwd.h" 3
inline namespace __cxx11 {
# 197 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages;
# 199 "/usr/include/c++/5/bits/localefwd.h" 3
template< class _CharT> class messages_byname;
# 201 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 204 "/usr/include/c++/5/bits/localefwd.h" 3
}
# 30 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility push ( default )
# 72 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct sched_param {
# 74 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 75 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 77 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 81 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int clone(int (* __fn)(void * __arg), void * __child_stack, int __flags, void * __arg, ...) throw();
# 85 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int unshare(int __flags) throw();
# 88 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int sched_getcpu() throw();
# 91 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int setns(int __fd, int __nstype) throw();
# 95 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 103 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct __sched_param {
# 105 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
int __sched_priority;
# 106 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
};
# 118 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef unsigned long __cpu_mask;
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
typedef
# 126 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
struct {
# 127 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
__cpu_mask __bits[(1024) / ((8) * sizeof(__cpu_mask))];
# 128 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
} cpu_set_t;
# 201 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern "C" {
# 203 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern int __sched_cpucount(::size_t __setsize, const cpu_set_t * __setp) throw();
# 205 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern cpu_set_t *__sched_cpualloc(::size_t __count) throw();
# 206 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
extern void __sched_cpufree(cpu_set_t * __set) throw();
# 208 "/usr/include/x86_64-linux-gnu/bits/sched.h" 3
}
# 48 "/usr/include/sched.h" 3
extern "C" {
# 51 "/usr/include/sched.h" 3
extern int sched_setparam(__pid_t __pid, const sched_param * __param) throw();
# 55 "/usr/include/sched.h" 3
extern int sched_getparam(__pid_t __pid, sched_param * __param) throw();
# 58 "/usr/include/sched.h" 3
extern int sched_setscheduler(__pid_t __pid, int __policy, const sched_param * __param) throw();
# 62 "/usr/include/sched.h" 3
extern int sched_getscheduler(__pid_t __pid) throw();
# 65 "/usr/include/sched.h" 3
extern int sched_yield() throw();
# 68 "/usr/include/sched.h" 3
extern int sched_get_priority_max(int __algorithm) throw();
# 71 "/usr/include/sched.h" 3
extern int sched_get_priority_min(int __algorithm) throw();
# 74 "/usr/include/sched.h" 3
extern int sched_rr_get_interval(__pid_t __pid, timespec * __t) throw();
# 118 "/usr/include/sched.h" 3
extern int sched_setaffinity(__pid_t __pid, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw();
# 122 "/usr/include/sched.h" 3
extern int sched_getaffinity(__pid_t __pid, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw();
# 126 "/usr/include/sched.h" 3
}
# 31 "/usr/include/x86_64-linux-gnu/bits/setjmp.h" 3
typedef long __jmp_buf[8];
# 33 "/usr/include/pthread.h" 3
enum {
# 34 "/usr/include/pthread.h" 3
PTHREAD_CREATE_JOINABLE,
# 36 "/usr/include/pthread.h" 3
PTHREAD_CREATE_DETACHED
# 38 "/usr/include/pthread.h" 3
};
# 43 "/usr/include/pthread.h" 3
enum {
# 44 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_TIMED_NP,
# 45 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE_NP,
# 46 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK_NP,
# 47 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ADAPTIVE_NP,
# 50 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_NORMAL = 0,
# 51 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_RECURSIVE,
# 52 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ERRORCHECK,
# 53 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_DEFAULT = 0,
# 57 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_FAST_NP = 0
# 59 "/usr/include/pthread.h" 3
};
# 65 "/usr/include/pthread.h" 3
enum {
# 66 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED,
# 67 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_STALLED_NP = 0,
# 68 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST,
# 69 "/usr/include/pthread.h" 3
PTHREAD_MUTEX_ROBUST_NP = 1
# 70 "/usr/include/pthread.h" 3
};
# 77 "/usr/include/pthread.h" 3
enum {
# 78 "/usr/include/pthread.h" 3
PTHREAD_PRIO_NONE,
# 79 "/usr/include/pthread.h" 3
PTHREAD_PRIO_INHERIT,
# 80 "/usr/include/pthread.h" 3
PTHREAD_PRIO_PROTECT
# 81 "/usr/include/pthread.h" 3
};
# 115 "/usr/include/pthread.h" 3
enum {
# 116 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_READER_NP,
# 117 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NP,
# 118 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP,
# 119 "/usr/include/pthread.h" 3
PTHREAD_RWLOCK_DEFAULT_NP = 0
# 120 "/usr/include/pthread.h" 3
};
# 156 "/usr/include/pthread.h" 3
enum {
# 157 "/usr/include/pthread.h" 3
PTHREAD_INHERIT_SCHED,
# 159 "/usr/include/pthread.h" 3
PTHREAD_EXPLICIT_SCHED
# 161 "/usr/include/pthread.h" 3
};
# 166 "/usr/include/pthread.h" 3
enum {
# 167 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_SYSTEM,
# 169 "/usr/include/pthread.h" 3
PTHREAD_SCOPE_PROCESS
# 171 "/usr/include/pthread.h" 3
};
# 176 "/usr/include/pthread.h" 3
enum {
# 177 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_PRIVATE,
# 179 "/usr/include/pthread.h" 3
PTHREAD_PROCESS_SHARED
# 181 "/usr/include/pthread.h" 3
};
# 190 "/usr/include/pthread.h" 3
struct _pthread_cleanup_buffer {
# 192 "/usr/include/pthread.h" 3
void (*__routine)(void *);
# 193 "/usr/include/pthread.h" 3
void *__arg;
# 194 "/usr/include/pthread.h" 3
int __canceltype;
# 195 "/usr/include/pthread.h" 3
_pthread_cleanup_buffer *__prev;
# 196 "/usr/include/pthread.h" 3
};
# 200 "/usr/include/pthread.h" 3
enum {
# 201 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ENABLE,
# 203 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DISABLE
# 205 "/usr/include/pthread.h" 3
};
# 207 "/usr/include/pthread.h" 3
enum {
# 208 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_DEFERRED,
# 210 "/usr/include/pthread.h" 3
PTHREAD_CANCEL_ASYNCHRONOUS
# 212 "/usr/include/pthread.h" 3
};
# 228 "/usr/include/pthread.h" 3
extern "C" {
# 233 "/usr/include/pthread.h" 3
extern int pthread_create(pthread_t *__restrict__ __newthread, const pthread_attr_t *__restrict__ __attr, void *(* __start_routine)(void *), void *__restrict__ __arg) throw()
# 236 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 242 "/usr/include/pthread.h" 3
extern void pthread_exit(void * __retval) __attribute((__noreturn__));
# 250 "/usr/include/pthread.h" 3
extern int pthread_join(pthread_t __th, void ** __thread_return);
# 255 "/usr/include/pthread.h" 3
extern int pthread_tryjoin_np(pthread_t __th, void ** __thread_return) throw();
# 263 "/usr/include/pthread.h" 3
extern int pthread_timedjoin_np(pthread_t __th, void ** __thread_return, const timespec * __abstime);
# 271 "/usr/include/pthread.h" 3
extern int pthread_detach(pthread_t __th) throw();
# 275 "/usr/include/pthread.h" 3
extern pthread_t pthread_self() throw() __attribute((const));
# 278 "/usr/include/pthread.h" 3
extern int pthread_equal(pthread_t __thread1, pthread_t __thread2) throw()
# 279 "/usr/include/pthread.h" 3
 __attribute((const));
# 287 "/usr/include/pthread.h" 3
extern int pthread_attr_init(pthread_attr_t * __attr) throw() __attribute((__nonnull__(1)));
# 290 "/usr/include/pthread.h" 3
extern int pthread_attr_destroy(pthread_attr_t * __attr) throw()
# 291 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 294 "/usr/include/pthread.h" 3
extern int pthread_attr_getdetachstate(const pthread_attr_t * __attr, int * __detachstate) throw()
# 296 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 299 "/usr/include/pthread.h" 3
extern int pthread_attr_setdetachstate(pthread_attr_t * __attr, int __detachstate) throw()
# 301 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 305 "/usr/include/pthread.h" 3
extern int pthread_attr_getguardsize(const pthread_attr_t * __attr, ::size_t * __guardsize) throw()
# 307 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 310 "/usr/include/pthread.h" 3
extern int pthread_attr_setguardsize(pthread_attr_t * __attr, ::size_t __guardsize) throw()
# 312 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 316 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedparam(const pthread_attr_t *__restrict__ __attr, sched_param *__restrict__ __param) throw()
# 318 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedparam(pthread_attr_t *__restrict__ __attr, const sched_param *__restrict__ __param) throw()
# 323 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 326 "/usr/include/pthread.h" 3
extern int pthread_attr_getschedpolicy(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __policy) throw()
# 328 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 331 "/usr/include/pthread.h" 3
extern int pthread_attr_setschedpolicy(pthread_attr_t * __attr, int __policy) throw()
# 332 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 335 "/usr/include/pthread.h" 3
extern int pthread_attr_getinheritsched(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __inherit) throw()
# 337 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 340 "/usr/include/pthread.h" 3
extern int pthread_attr_setinheritsched(pthread_attr_t * __attr, int __inherit) throw()
# 342 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 346 "/usr/include/pthread.h" 3
extern int pthread_attr_getscope(const pthread_attr_t *__restrict__ __attr, int *__restrict__ __scope) throw()
# 348 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 351 "/usr/include/pthread.h" 3
extern int pthread_attr_setscope(pthread_attr_t * __attr, int __scope) throw()
# 352 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 355 "/usr/include/pthread.h" 3
extern int pthread_attr_getstackaddr(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr) throw()
# 357 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__deprecated__));
# 363 "/usr/include/pthread.h" 3
extern int pthread_attr_setstackaddr(pthread_attr_t * __attr, void * __stackaddr) throw()
# 365 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1))) __attribute((__deprecated__));
# 368 "/usr/include/pthread.h" 3
extern int pthread_attr_getstacksize(const pthread_attr_t *__restrict__ __attr, ::size_t *__restrict__ __stacksize) throw()
# 370 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 375 "/usr/include/pthread.h" 3
extern int pthread_attr_setstacksize(pthread_attr_t * __attr, ::size_t __stacksize) throw()
# 377 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 381 "/usr/include/pthread.h" 3
extern int pthread_attr_getstack(const pthread_attr_t *__restrict__ __attr, void **__restrict__ __stackaddr, ::size_t *__restrict__ __stacksize) throw()
# 384 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 389 "/usr/include/pthread.h" 3
extern int pthread_attr_setstack(pthread_attr_t * __attr, void * __stackaddr, ::size_t __stacksize) throw()
# 390 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 396 "/usr/include/pthread.h" 3
extern int pthread_attr_setaffinity_np(pthread_attr_t * __attr, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 399 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 403 "/usr/include/pthread.h" 3
extern int pthread_attr_getaffinity_np(const pthread_attr_t * __attr, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 406 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 409 "/usr/include/pthread.h" 3
extern int pthread_getattr_default_np(pthread_attr_t * __attr) throw()
# 410 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 414 "/usr/include/pthread.h" 3
extern int pthread_setattr_default_np(const pthread_attr_t * __attr) throw()
# 415 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 420 "/usr/include/pthread.h" 3
extern int pthread_getattr_np(pthread_t __th, pthread_attr_t * __attr) throw()
# 421 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 429 "/usr/include/pthread.h" 3
extern int pthread_setschedparam(pthread_t __target_thread, int __policy, const sched_param * __param) throw()
# 431 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 434 "/usr/include/pthread.h" 3
extern int pthread_getschedparam(pthread_t __target_thread, int *__restrict__ __policy, sched_param *__restrict__ __param) throw()
# 437 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2, 3)));
# 440 "/usr/include/pthread.h" 3
extern int pthread_setschedprio(pthread_t __target_thread, int __prio) throw();
# 446 "/usr/include/pthread.h" 3
extern int pthread_getname_np(pthread_t __target_thread, char * __buf, ::size_t __buflen) throw()
# 448 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 451 "/usr/include/pthread.h" 3
extern int pthread_setname_np(pthread_t __target_thread, const char * __name) throw()
# 452 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 458 "/usr/include/pthread.h" 3
extern int pthread_getconcurrency() throw();
# 461 "/usr/include/pthread.h" 3
extern int pthread_setconcurrency(int __level) throw();
# 469 "/usr/include/pthread.h" 3
extern int pthread_yield() throw();
# 474 "/usr/include/pthread.h" 3
extern int pthread_setaffinity_np(pthread_t __th, ::size_t __cpusetsize, const cpu_set_t * __cpuset) throw()
# 476 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 479 "/usr/include/pthread.h" 3
extern int pthread_getaffinity_np(pthread_t __th, ::size_t __cpusetsize, cpu_set_t * __cpuset) throw()
# 481 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(3)));
# 494 "/usr/include/pthread.h" 3
extern int pthread_once(pthread_once_t * __once_control, void (* __init_routine)(void))
# 495 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 506 "/usr/include/pthread.h" 3
extern int pthread_setcancelstate(int __state, int * __oldstate);
# 510 "/usr/include/pthread.h" 3
extern int pthread_setcanceltype(int __type, int * __oldtype);
# 513 "/usr/include/pthread.h" 3
extern int pthread_cancel(pthread_t __th);
# 518 "/usr/include/pthread.h" 3
extern void pthread_testcancel();
# 531 "/usr/include/pthread.h" 3
typedef
# 524 "/usr/include/pthread.h" 3
struct {
# 526 "/usr/include/pthread.h" 3
struct {
# 527 "/usr/include/pthread.h" 3
__jmp_buf __cancel_jmp_buf;
# 528 "/usr/include/pthread.h" 3
int __mask_was_saved;
# 529 "/usr/include/pthread.h" 3
} __cancel_jmp_buf[1];
# 530 "/usr/include/pthread.h" 3
void *__pad[4];
# 531 "/usr/include/pthread.h" 3
} __pthread_unwind_buf_t __attribute((__aligned__));
# 540 "/usr/include/pthread.h" 3
struct __pthread_cleanup_frame {
# 542 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 543 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 544 "/usr/include/pthread.h" 3
int __do_it;
# 545 "/usr/include/pthread.h" 3
int __cancel_type;
# 546 "/usr/include/pthread.h" 3
};
# 551 "/usr/include/pthread.h" 3
class __pthread_cleanup_class {
# 553 "/usr/include/pthread.h" 3
void (*__cancel_routine)(void *);
# 554 "/usr/include/pthread.h" 3
void *__cancel_arg;
# 555 "/usr/include/pthread.h" 3
int __do_it;
# 556 "/usr/include/pthread.h" 3
int __cancel_type;
# 559 "/usr/include/pthread.h" 3
public: __pthread_cleanup_class(void (*__fct)(void *), void *__arg) : __cancel_routine(__fct), __cancel_arg(__arg), __do_it(1)
# 560 "/usr/include/pthread.h" 3
{ }
# 561 "/usr/include/pthread.h" 3
~__pthread_cleanup_class() { if (__do_it) { (__cancel_routine)(__cancel_arg); } }
# 562 "/usr/include/pthread.h" 3
void __setdoit(int __newval) { (__do_it) = __newval; }
# 563 "/usr/include/pthread.h" 3
void __defer() { pthread_setcanceltype(PTHREAD_CANCEL_DEFERRED, &(__cancel_type));
# 564 "/usr/include/pthread.h" 3
}
# 565 "/usr/include/pthread.h" 3
void __restore() const { pthread_setcanceltype(__cancel_type, 0); }
# 566 "/usr/include/pthread.h" 3
};
# 742 "/usr/include/pthread.h" 3
struct __jmp_buf_tag;
# 743 "/usr/include/pthread.h" 3
extern int __sigsetjmp(__jmp_buf_tag * __env, int __savemask) throw();
# 749 "/usr/include/pthread.h" 3
extern int pthread_mutex_init(pthread_mutex_t * __mutex, const pthread_mutexattr_t * __mutexattr) throw()
# 751 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 754 "/usr/include/pthread.h" 3
extern int pthread_mutex_destroy(pthread_mutex_t * __mutex) throw()
# 755 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 758 "/usr/include/pthread.h" 3
extern int pthread_mutex_trylock(pthread_mutex_t * __mutex) throw()
# 759 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 762 "/usr/include/pthread.h" 3
extern int pthread_mutex_lock(pthread_mutex_t * __mutex) throw()
# 763 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 767 "/usr/include/pthread.h" 3
extern int pthread_mutex_timedlock(pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime) throw()
# 769 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 773 "/usr/include/pthread.h" 3
extern int pthread_mutex_unlock(pthread_mutex_t * __mutex) throw()
# 774 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 778 "/usr/include/pthread.h" 3
extern int pthread_mutex_getprioceiling(const pthread_mutex_t *__restrict__ __mutex, int *__restrict__ __prioceiling) throw()
# 781 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 785 "/usr/include/pthread.h" 3
extern int pthread_mutex_setprioceiling(pthread_mutex_t *__restrict__ __mutex, int __prioceiling, int *__restrict__ __old_ceiling) throw()
# 788 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 3)));
# 793 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent(pthread_mutex_t * __mutex) throw()
# 794 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 796 "/usr/include/pthread.h" 3
extern int pthread_mutex_consistent_np(pthread_mutex_t * __mutex) throw()
# 797 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 806 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_init(pthread_mutexattr_t * __attr) throw()
# 807 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 810 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_destroy(pthread_mutexattr_t * __attr) throw()
# 811 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 814 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getpshared(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 817 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 820 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setpshared(pthread_mutexattr_t * __attr, int __pshared) throw()
# 822 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 826 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_gettype(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __kind) throw()
# 828 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 833 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_settype(pthread_mutexattr_t * __attr, int __kind) throw()
# 834 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 838 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprotocol(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __protocol) throw()
# 841 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 845 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprotocol(pthread_mutexattr_t * __attr, int __protocol) throw()
# 847 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 850 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *__restrict__ __attr, int *__restrict__ __prioceiling) throw()
# 853 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 856 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setprioceiling(pthread_mutexattr_t * __attr, int __prioceiling) throw()
# 858 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 862 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 864 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 866 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_getrobust_np(const pthread_mutexattr_t * __attr, int * __robustness) throw()
# 868 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 872 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust(pthread_mutexattr_t * __attr, int __robustness) throw()
# 874 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 876 "/usr/include/pthread.h" 3
extern int pthread_mutexattr_setrobust_np(pthread_mutexattr_t * __attr, int __robustness) throw()
# 878 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 888 "/usr/include/pthread.h" 3
extern int pthread_rwlock_init(pthread_rwlock_t *__restrict__ __rwlock, const pthread_rwlockattr_t *__restrict__ __attr) throw()
# 890 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 893 "/usr/include/pthread.h" 3
extern int pthread_rwlock_destroy(pthread_rwlock_t * __rwlock) throw()
# 894 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 897 "/usr/include/pthread.h" 3
extern int pthread_rwlock_rdlock(pthread_rwlock_t * __rwlock) throw()
# 898 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 901 "/usr/include/pthread.h" 3
extern int pthread_rwlock_tryrdlock(pthread_rwlock_t * __rwlock) throw()
# 902 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 906 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedrdlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 908 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 912 "/usr/include/pthread.h" 3
extern int pthread_rwlock_wrlock(pthread_rwlock_t * __rwlock) throw()
# 913 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 916 "/usr/include/pthread.h" 3
extern int pthread_rwlock_trywrlock(pthread_rwlock_t * __rwlock) throw()
# 917 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 921 "/usr/include/pthread.h" 3
extern int pthread_rwlock_timedwrlock(pthread_rwlock_t *__restrict__ __rwlock, const timespec *__restrict__ __abstime) throw()
# 923 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 927 "/usr/include/pthread.h" 3
extern int pthread_rwlock_unlock(pthread_rwlock_t * __rwlock) throw()
# 928 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 934 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_init(pthread_rwlockattr_t * __attr) throw()
# 935 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 938 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_destroy(pthread_rwlockattr_t * __attr) throw()
# 939 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 942 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 945 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 948 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setpshared(pthread_rwlockattr_t * __attr, int __pshared) throw()
# 950 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 953 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_getkind_np(const pthread_rwlockattr_t *__restrict__ __attr, int *__restrict__ __pref) throw()
# 956 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 959 "/usr/include/pthread.h" 3
extern int pthread_rwlockattr_setkind_np(pthread_rwlockattr_t * __attr, int __pref) throw()
# 960 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 968 "/usr/include/pthread.h" 3
extern int pthread_cond_init(pthread_cond_t *__restrict__ __cond, const pthread_condattr_t *__restrict__ __cond_attr) throw()
# 970 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 973 "/usr/include/pthread.h" 3
extern int pthread_cond_destroy(pthread_cond_t * __cond) throw()
# 974 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 977 "/usr/include/pthread.h" 3
extern int pthread_cond_signal(pthread_cond_t * __cond) throw()
# 978 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 981 "/usr/include/pthread.h" 3
extern int pthread_cond_broadcast(pthread_cond_t * __cond) throw()
# 982 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 989 "/usr/include/pthread.h" 3
extern int pthread_cond_wait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex)
# 991 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1000 "/usr/include/pthread.h" 3
extern int pthread_cond_timedwait(pthread_cond_t *__restrict__ __cond, pthread_mutex_t *__restrict__ __mutex, const timespec *__restrict__ __abstime)
# 1003 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1008 "/usr/include/pthread.h" 3
extern int pthread_condattr_init(pthread_condattr_t * __attr) throw()
# 1009 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1012 "/usr/include/pthread.h" 3
extern int pthread_condattr_destroy(pthread_condattr_t * __attr) throw()
# 1013 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1016 "/usr/include/pthread.h" 3
extern int pthread_condattr_getpshared(const pthread_condattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1019 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1022 "/usr/include/pthread.h" 3
extern int pthread_condattr_setpshared(pthread_condattr_t * __attr, int __pshared) throw()
# 1023 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1027 "/usr/include/pthread.h" 3
extern int pthread_condattr_getclock(const pthread_condattr_t *__restrict__ __attr, __clockid_t *__restrict__ __clock_id) throw()
# 1030 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1033 "/usr/include/pthread.h" 3
extern int pthread_condattr_setclock(pthread_condattr_t * __attr, __clockid_t __clock_id) throw()
# 1035 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1044 "/usr/include/pthread.h" 3
extern int pthread_spin_init(pthread_spinlock_t * __lock, int __pshared) throw()
# 1045 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1048 "/usr/include/pthread.h" 3
extern int pthread_spin_destroy(pthread_spinlock_t * __lock) throw()
# 1049 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1052 "/usr/include/pthread.h" 3
extern int pthread_spin_lock(pthread_spinlock_t * __lock) throw()
# 1053 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1056 "/usr/include/pthread.h" 3
extern int pthread_spin_trylock(pthread_spinlock_t * __lock) throw()
# 1057 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1060 "/usr/include/pthread.h" 3
extern int pthread_spin_unlock(pthread_spinlock_t * __lock) throw()
# 1061 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1068 "/usr/include/pthread.h" 3
extern int pthread_barrier_init(pthread_barrier_t *__restrict__ __barrier, const pthread_barrierattr_t *__restrict__ __attr, unsigned __count) throw()
# 1071 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1074 "/usr/include/pthread.h" 3
extern int pthread_barrier_destroy(pthread_barrier_t * __barrier) throw()
# 1075 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1078 "/usr/include/pthread.h" 3
extern int pthread_barrier_wait(pthread_barrier_t * __barrier) throw()
# 1079 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1083 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_init(pthread_barrierattr_t * __attr) throw()
# 1084 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1087 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_destroy(pthread_barrierattr_t * __attr) throw()
# 1088 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1091 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_getpshared(const pthread_barrierattr_t *__restrict__ __attr, int *__restrict__ __pshared) throw()
# 1094 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1, 2)));
# 1097 "/usr/include/pthread.h" 3
extern int pthread_barrierattr_setpshared(pthread_barrierattr_t * __attr, int __pshared) throw()
# 1099 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1111 "/usr/include/pthread.h" 3
extern int pthread_key_create(pthread_key_t * __key, void (* __destr_function)(void *)) throw()
# 1113 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(1)));
# 1116 "/usr/include/pthread.h" 3
extern int pthread_key_delete(pthread_key_t __key) throw();
# 1119 "/usr/include/pthread.h" 3
extern void *pthread_getspecific(pthread_key_t __key) throw();
# 1122 "/usr/include/pthread.h" 3
extern int pthread_setspecific(pthread_key_t __key, const void * __pointer) throw();
# 1128 "/usr/include/pthread.h" 3
extern int pthread_getcpuclockid(pthread_t __thread_id, __clockid_t * __clock_id) throw()
# 1130 "/usr/include/pthread.h" 3
 __attribute((__nonnull__(2)));
# 1145 "/usr/include/pthread.h" 3
extern int pthread_atfork(void (* __prepare)(void), void (* __parent)(void), void (* __child)(void)) throw();
# 1159 "/usr/include/pthread.h" 3
}
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_t __gthread_t;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_key_t __gthread_key_t;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_once_t __gthread_once_t;
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_mutex_t;
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_mutex_t __gthread_recursive_mutex_t;
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef pthread_cond_t __gthread_cond_t;
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
typedef timespec __gthread_time_t;
# 101 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_once) __gthrw_pthread_once __attribute((__weakref__("pthread_once")));
# 102 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_getspecific) __gthrw_pthread_getspecific __attribute((__weakref__("pthread_getspecific")));
# 103 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_setspecific) __gthrw_pthread_setspecific __attribute((__weakref__("pthread_setspecific")));
# 105 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_create) __gthrw_pthread_create __attribute((__weakref__("pthread_create")));
# 106 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_join) __gthrw_pthread_join __attribute((__weakref__("pthread_join")));
# 107 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_equal) __gthrw_pthread_equal __attribute((__weakref__("pthread_equal")));
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_self) __gthrw_pthread_self __attribute((__weakref__("pthread_self")));
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_detach) __gthrw_pthread_detach __attribute((__weakref__("pthread_detach")));
# 111 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cancel) __gthrw_pthread_cancel __attribute((__weakref__("pthread_cancel")));
# 113 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(sched_yield) __gthrw_sched_yield __attribute((__weakref__("sched_yield")));
# 115 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_lock) __gthrw_pthread_mutex_lock __attribute((__weakref__("pthread_mutex_lock")));
# 116 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_trylock) __gthrw_pthread_mutex_trylock __attribute((__weakref__("pthread_mutex_trylock")));
# 118 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_timedlock) __gthrw_pthread_mutex_timedlock __attribute((__weakref__("pthread_mutex_timedlock")));
# 120 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_unlock) __gthrw_pthread_mutex_unlock __attribute((__weakref__("pthread_mutex_unlock")));
# 121 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_init) __gthrw_pthread_mutex_init __attribute((__weakref__("pthread_mutex_init")));
# 122 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutex_destroy) __gthrw_pthread_mutex_destroy __attribute((__weakref__("pthread_mutex_destroy")));
# 124 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_init) __gthrw_pthread_cond_init __attribute((__weakref__("pthread_cond_init")));
# 125 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_broadcast) __gthrw_pthread_cond_broadcast __attribute((__weakref__("pthread_cond_broadcast")));
# 126 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_signal) __gthrw_pthread_cond_signal __attribute((__weakref__("pthread_cond_signal")));
# 127 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_wait) __gthrw_pthread_cond_wait __attribute((__weakref__("pthread_cond_wait")));
# 128 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_timedwait) __gthrw_pthread_cond_timedwait __attribute((__weakref__("pthread_cond_timedwait")));
# 129 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_cond_destroy) __gthrw_pthread_cond_destroy __attribute((__weakref__("pthread_cond_destroy")));
# 131 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw_pthread_key_create __attribute((__weakref__("pthread_key_create")));
# 132 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_delete) __gthrw_pthread_key_delete __attribute((__weakref__("pthread_key_delete")));
# 133 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_init) __gthrw_pthread_mutexattr_init __attribute((__weakref__("pthread_mutexattr_init")));
# 134 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_settype) __gthrw_pthread_mutexattr_settype __attribute((__weakref__("pthread_mutexattr_settype")));
# 135 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_mutexattr_destroy) __gthrw_pthread_mutexattr_destroy __attribute((__weakref__("pthread_mutexattr_destroy")));
# 236 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static __typeof__(pthread_key_create) __gthrw___pthread_key_create __attribute((__weakref__("__pthread_key_create")));
# 247 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_active_p()
# 248 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 249 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static void *const __gthread_active_ptr = __extension__ ((void *)(&__gthrw___pthread_key_create));
# 251 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_active_ptr != (0);
# 252 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 659 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_create(__gthread_t *__threadid, void *(*__func)(void *), void *
# 660 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__args)
# 661 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 662 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_create(__threadid, __null, __func, __args);
# 663 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 666 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_join(__gthread_t __threadid, void **__value_ptr)
# 667 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 668 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_join(__threadid, __value_ptr);
# 669 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 672 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_detach(__gthread_t __threadid)
# 673 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 674 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_detach(__threadid);
# 675 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 678 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_equal(__gthread_t __t1, __gthread_t __t2)
# 679 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 680 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_equal(__t1, __t2);
# 681 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 684 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline __gthread_t __gthread_self()
# 685 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 686 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_self();
# 687 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 690 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_yield()
# 691 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 692 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_sched_yield();
# 693 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 696 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_once(__gthread_once_t *__once, void (*__func)(void))
# 697 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 698 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 699 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_once(__once, __func); } else {
# 701 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return -1; }
# 702 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 705 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_create(__gthread_key_t *__key, void (*__dtor)(void *))
# 706 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 707 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_create(__key, __dtor);
# 708 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 711 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_key_delete(__gthread_key_t __key)
# 712 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 713 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_key_delete(__key);
# 714 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 717 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void *__gthread_getspecific(__gthread_key_t __key)
# 718 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 719 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_getspecific(__key);
# 720 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 723 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_setspecific(__gthread_key_t __key, const void *__ptr)
# 724 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 725 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_setspecific(__key, __ptr);
# 726 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 729 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline void __gthread_mutex_init_function(__gthread_mutex_t *__mutex)
# 730 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 731 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 732 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__gthrw_pthread_mutex_init(__mutex, __null); }
# 733 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 736 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_destroy(__gthread_mutex_t *__mutex)
# 737 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 738 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 739 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_destroy(__mutex); } else {
# 741 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 742 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 745 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_lock(__gthread_mutex_t *__mutex)
# 746 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 747 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 748 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_lock(__mutex); } else {
# 750 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 751 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 754 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_trylock(__gthread_mutex_t *__mutex)
# 755 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 756 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 757 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_trylock(__mutex); } else {
# 759 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 760 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 764 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_timedlock(__gthread_mutex_t *__mutex, const __gthread_time_t *
# 765 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 766 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 767 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 768 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_timedlock(__mutex, __abs_timeout); } else {
# 770 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 771 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 775 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_mutex_unlock(__gthread_mutex_t *__mutex)
# 776 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 777 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
if (__gthread_active_p()) {
# 778 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_mutex_unlock(__mutex); } else {
# 780 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return 0; }
# 781 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 808 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_lock(__gthread_recursive_mutex_t *__mutex)
# 809 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 810 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_lock(__mutex);
# 811 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 814 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_trylock(__gthread_recursive_mutex_t *__mutex)
# 815 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 816 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_trylock(__mutex);
# 817 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 821 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_timedlock(__gthread_recursive_mutex_t *__mutex, const __gthread_time_t *
# 822 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 823 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 824 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_timedlock(__mutex, __abs_timeout);
# 825 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 829 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_unlock(__gthread_recursive_mutex_t *__mutex)
# 830 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 831 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_unlock(__mutex);
# 832 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 835 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_recursive_mutex_destroy(__gthread_recursive_mutex_t *__mutex)
# 836 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 837 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_mutex_destroy(__mutex);
# 838 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 850 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_broadcast(__gthread_cond_t *__cond)
# 851 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 852 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_broadcast(__cond);
# 853 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 856 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_signal(__gthread_cond_t *__cond)
# 857 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 858 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_signal(__cond);
# 859 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 862 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex)
# 863 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 864 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_wait(__cond, __mutex);
# 865 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 868 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_timedwait(__gthread_cond_t *__cond, __gthread_mutex_t *__mutex, const __gthread_time_t *
# 869 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__abs_timeout)
# 870 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 871 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_timedwait(__cond, __mutex, __abs_timeout);
# 872 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 875 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_wait_recursive(__gthread_cond_t *__cond, __gthread_recursive_mutex_t *
# 876 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
__mutex)
# 877 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 878 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthread_cond_wait(__cond, __mutex);
# 879 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 882 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
static inline int __gthread_cond_destroy(__gthread_cond_t *__cond)
# 883 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
{
# 884 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
return __gthrw_pthread_cond_destroy(__cond);
# 885 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr-default.h" 3
}
# 151 "/usr/include/x86_64-linux-gnu/c++/5/bits/gthr.h" 3
#pragma GCC visibility pop
# 32 "/usr/include/x86_64-linux-gnu/c++/5/bits/atomic_word.h" 3
typedef int _Atomic_word;
# 38 "/usr/include/c++/5/ext/atomicity.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add(volatile _Atomic_word *__mem, int __val)
# 49 "/usr/include/c++/5/ext/atomicity.h" 3
{ return __atomic_fetch_add(__mem, __val, 4); }
# 52 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add(volatile _Atomic_word *__mem, int __val)
# 53 "/usr/include/c++/5/ext/atomicity.h" 3
{ __atomic_fetch_add(__mem, __val, 4); }
# 65 "/usr/include/c++/5/ext/atomicity.h" 3
static inline _Atomic_word __exchange_and_add_single(_Atomic_word *__mem, int __val)
# 66 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 67 "/usr/include/c++/5/ext/atomicity.h" 3
_Atomic_word __result = *__mem;
# 68 "/usr/include/c++/5/ext/atomicity.h" 3
(*__mem) += __val;
# 69 "/usr/include/c++/5/ext/atomicity.h" 3
return __result;
# 70 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 73 "/usr/include/c++/5/ext/atomicity.h" 3
static inline void __atomic_add_single(_Atomic_word *__mem, int __val)
# 74 "/usr/include/c++/5/ext/atomicity.h" 3
{ (*__mem) += __val; }
# 77 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline _Atomic_word
# 78 "/usr/include/c++/5/ext/atomicity.h" 3
__exchange_and_add_dispatch(_Atomic_word *__mem, int __val)
# 79 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 81 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 82 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add(__mem, __val); } else {
# 84 "/usr/include/c++/5/ext/atomicity.h" 3
return __exchange_and_add_single(__mem, __val); }
# 88 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 91 "/usr/include/c++/5/ext/atomicity.h" 3
__attribute((__unused__)) static inline void
# 92 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_dispatch(_Atomic_word *__mem, int __val)
# 93 "/usr/include/c++/5/ext/atomicity.h" 3
{
# 95 "/usr/include/c++/5/ext/atomicity.h" 3
if (__gthread_active_p()) {
# 96 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add(__mem, __val); } else {
# 98 "/usr/include/c++/5/ext/atomicity.h" 3
__atomic_add_single(__mem, __val); }
# 102 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 105 "/usr/include/c++/5/ext/atomicity.h" 3
}
# 42 "/usr/include/c++/5/new" 3
#pragma GCC visibility push ( default )
# 44 "/usr/include/c++/5/new" 3
extern "C++" {
# 46 "/usr/include/c++/5/new" 3
namespace std {
# 54 "/usr/include/c++/5/new" 3
class bad_alloc : public exception {
# 57 "/usr/include/c++/5/new" 3
public: bad_alloc() throw() { }
# 61 "/usr/include/c++/5/new" 3
virtual ~bad_alloc() throw();
# 64 "/usr/include/c++/5/new" 3
virtual const char *what() const throw();
# 65 "/usr/include/c++/5/new" 3
};
# 68 "/usr/include/c++/5/new" 3
class bad_array_new_length : public bad_alloc {
# 71 "/usr/include/c++/5/new" 3
public: bad_array_new_length() throw() { }
# 75 "/usr/include/c++/5/new" 3
virtual ~bad_array_new_length() throw();
# 78 "/usr/include/c++/5/new" 3
virtual const char *what() const throw();
# 79 "/usr/include/c++/5/new" 3
};
# 82 "/usr/include/c++/5/new" 3
struct nothrow_t { };
# 84 "/usr/include/c++/5/new" 3
extern const nothrow_t nothrow;
# 88 "/usr/include/c++/5/new" 3
typedef void (*new_handler)(void);
# 92 "/usr/include/c++/5/new" 3
new_handler set_new_handler(new_handler) throw();
# 96 "/usr/include/c++/5/new" 3
new_handler get_new_handler() noexcept;
# 98 "/usr/include/c++/5/new" 3
}
# 111 "/usr/include/c++/5/new" 3
void *operator new(std::size_t)
# 112 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 113 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t)
# 114 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 115 "/usr/include/c++/5/new" 3
void operator delete(void *) noexcept
# 116 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 117 "/usr/include/c++/5/new" 3
void operator delete[](void *) noexcept
# 118 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 119 "/usr/include/c++/5/new" 3
void *operator new(std::size_t, const std::nothrow_t &) noexcept
# 120 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 121 "/usr/include/c++/5/new" 3
void *operator new[](std::size_t, const std::nothrow_t &) noexcept
# 122 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 123 "/usr/include/c++/5/new" 3
void operator delete(void *, const std::nothrow_t &) noexcept
# 124 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 125 "/usr/include/c++/5/new" 3
void operator delete[](void *, const std::nothrow_t &) noexcept
# 126 "/usr/include/c++/5/new" 3
 __attribute((__externally_visible__));
# 129 "/usr/include/c++/5/new" 3
inline void *operator new(std::size_t, void *__p) noexcept
# 130 "/usr/include/c++/5/new" 3
{ return __p; }
# 131 "/usr/include/c++/5/new" 3
inline void *operator new[](std::size_t, void *__p) noexcept
# 132 "/usr/include/c++/5/new" 3
{ return __p; }
# 135 "/usr/include/c++/5/new" 3
inline void operator delete(void *, void *) noexcept { }
# 136 "/usr/include/c++/5/new" 3
inline void operator delete[](void *, void *) noexcept { }
# 138 "/usr/include/c++/5/new" 3
}
# 140 "/usr/include/c++/5/new" 3
#pragma GCC visibility pop
# 40 "/usr/include/c++/5/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::size_t;
# 45 "/usr/include/c++/5/ext/new_allocator.h" 3
using std::ptrdiff_t;
# 57 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp>
# 58 "/usr/include/c++/5/ext/new_allocator.h" 3
class new_allocator {
# 61 "/usr/include/c++/5/ext/new_allocator.h" 3
public: typedef std::size_t size_type;
# 62 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef std::ptrdiff_t difference_type;
# 63 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp *pointer;
# 64 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp *const_pointer;
# 65 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp &reference;
# 66 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef const _Tp &const_reference;
# 67 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef _Tp value_type;
# 69 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 70 "/usr/include/c++/5/ext/new_allocator.h" 3
struct rebind {
# 71 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef __gnu_cxx::new_allocator< _Tp1> other; };
# 76 "/usr/include/c++/5/ext/new_allocator.h" 3
typedef std::true_type propagate_on_container_move_assignment;
# 79 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator() noexcept { }
# 81 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const new_allocator &) noexcept { }
# 83 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp1>
# 84 "/usr/include/c++/5/ext/new_allocator.h" 3
new_allocator(const __gnu_cxx::new_allocator< _Tp1> &) noexcept { }
# 86 "/usr/include/c++/5/ext/new_allocator.h" 3
~new_allocator() noexcept { }
# 89 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer address(reference __x) const noexcept
# 90 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 93 "/usr/include/c++/5/ext/new_allocator.h" 3
const_pointer address(const_reference __x) const noexcept
# 94 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return std::__addressof(__x); }
# 99 "/usr/include/c++/5/ext/new_allocator.h" 3
pointer allocate(size_type __n, const void * = 0)
# 100 "/usr/include/c++/5/ext/new_allocator.h" 3
{
# 101 "/usr/include/c++/5/ext/new_allocator.h" 3
if (__n > this->max_size()) {
# 102 "/usr/include/c++/5/ext/new_allocator.h" 3
std::__throw_bad_alloc(); }
# 104 "/usr/include/c++/5/ext/new_allocator.h" 3
return static_cast< _Tp *>(::operator new(__n * sizeof(_Tp)));
# 105 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 109 "/usr/include/c++/5/ext/new_allocator.h" 3
void deallocate(pointer __p, size_type)
# 110 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::operator delete(__p); }
# 113 "/usr/include/c++/5/ext/new_allocator.h" 3
size_type max_size() const noexcept
# 114 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return ((std::size_t)(-1)) / sizeof(_Tp); }
# 117 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Up, class ..._Args> void
# 119 "/usr/include/c++/5/ext/new_allocator.h" 3
construct(_Up *__p, _Args &&...__args)
# 120 "/usr/include/c++/5/ext/new_allocator.h" 3
{ ::new ((void *)__p) (_Up)(std::forward< _Args> (__args)...); }
# 122 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Up> void
# 124 "/usr/include/c++/5/ext/new_allocator.h" 3
destroy(_Up *__p) { (__p->~_Up()); }
# 135 "/usr/include/c++/5/ext/new_allocator.h" 3
};
# 137 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 139 "/usr/include/c++/5/ext/new_allocator.h" 3
operator==(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 140 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return true; }
# 142 "/usr/include/c++/5/ext/new_allocator.h" 3
template< class _Tp> inline bool
# 144 "/usr/include/c++/5/ext/new_allocator.h" 3
operator!=(const new_allocator< _Tp> &, const new_allocator< _Tp> &)
# 145 "/usr/include/c++/5/ext/new_allocator.h" 3
{ return false; }
# 148 "/usr/include/c++/5/ext/new_allocator.h" 3
}
# 36 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
namespace std {
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
template< class _Tp> using __allocator_base = __gnu_cxx::new_allocator< _Tp> ;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++allocator.h" 3
}
# 52 "/usr/include/c++/5/bits/allocator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/allocator.h" 3
template<> class allocator< void> {
# 66 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef size_t size_type;
# 67 "/usr/include/c++/5/bits/allocator.h" 3
typedef ptrdiff_t difference_type;
# 68 "/usr/include/c++/5/bits/allocator.h" 3
typedef void *pointer;
# 69 "/usr/include/c++/5/bits/allocator.h" 3
typedef const void *const_pointer;
# 70 "/usr/include/c++/5/bits/allocator.h" 3
typedef void value_type;
# 72 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 73 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 74 "/usr/include/c++/5/bits/allocator.h" 3
typedef std::allocator< _Tp1> other; };
# 79 "/usr/include/c++/5/bits/allocator.h" 3
typedef true_type propagate_on_container_move_assignment;
# 81 "/usr/include/c++/5/bits/allocator.h" 3
};
# 91 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp>
# 92 "/usr/include/c++/5/bits/allocator.h" 3
class allocator : public __allocator_base< _Tp> {
# 95 "/usr/include/c++/5/bits/allocator.h" 3
public: typedef ::std::size_t size_type;
# 96 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::ptrdiff_t difference_type;
# 97 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp *pointer;
# 98 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp *const_pointer;
# 99 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp &reference;
# 100 "/usr/include/c++/5/bits/allocator.h" 3
typedef const _Tp &const_reference;
# 101 "/usr/include/c++/5/bits/allocator.h" 3
typedef _Tp value_type;
# 103 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 104 "/usr/include/c++/5/bits/allocator.h" 3
struct rebind {
# 105 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::allocator< _Tp1> other; };
# 110 "/usr/include/c++/5/bits/allocator.h" 3
typedef ::std::true_type propagate_on_container_move_assignment;
# 113 "/usr/include/c++/5/bits/allocator.h" 3
allocator() throw() { }
# 115 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const allocator &__a) throw() : ::std::__allocator_base< _Tp> (__a)
# 116 "/usr/include/c++/5/bits/allocator.h" 3
{ }
# 118 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp1>
# 119 "/usr/include/c++/5/bits/allocator.h" 3
allocator(const ::std::allocator< _Tp1> &) throw() { }
# 121 "/usr/include/c++/5/bits/allocator.h" 3
~allocator() throw() { }
# 124 "/usr/include/c++/5/bits/allocator.h" 3
};
# 126 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 128 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _T1> &, const allocator< _T2> &) noexcept
# 130 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 132 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 134 "/usr/include/c++/5/bits/allocator.h" 3
operator==(const allocator< _Tp> &, const allocator< _Tp> &) noexcept
# 136 "/usr/include/c++/5/bits/allocator.h" 3
{ return true; }
# 138 "/usr/include/c++/5/bits/allocator.h" 3
template< class _T1, class _T2> inline bool
# 140 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _T1> &, const allocator< _T2> &) noexcept
# 142 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 144 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp> inline bool
# 146 "/usr/include/c++/5/bits/allocator.h" 3
operator!=(const allocator< _Tp> &, const allocator< _Tp> &) noexcept
# 148 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 155 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< char> ;
# 156 "/usr/include/c++/5/bits/allocator.h" 3
extern template class allocator< wchar_t> ;
# 163 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 164 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap {
# 165 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &, _Alloc &) noexcept { } };
# 167 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 168 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_swap< _Alloc, false> {
# 171 "/usr/include/c++/5/bits/allocator.h" 3
static void _S_do_it(_Alloc &__one, _Alloc &__two) noexcept
# 172 "/usr/include/c++/5/bits/allocator.h" 3
{
# 174 "/usr/include/c++/5/bits/allocator.h" 3
if (__one != __two) {
# 175 "/usr/include/c++/5/bits/allocator.h" 3
swap(__one, __two); }
# 176 "/usr/include/c++/5/bits/allocator.h" 3
}
# 177 "/usr/include/c++/5/bits/allocator.h" 3
};
# 180 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc, bool = __is_empty(_Alloc)>
# 181 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq {
# 184 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &, const _Alloc &)
# 185 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 186 "/usr/include/c++/5/bits/allocator.h" 3
};
# 188 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Alloc>
# 189 "/usr/include/c++/5/bits/allocator.h" 3
struct __alloc_neq< _Alloc, false> {
# 192 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(const _Alloc &__one, const _Alloc &__two)
# 193 "/usr/include/c++/5/bits/allocator.h" 3
{ return __one != __two; }
# 194 "/usr/include/c++/5/bits/allocator.h" 3
};
# 197 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp, bool
# 198 "/usr/include/c++/5/bits/allocator.h" 3
 = __or_< is_copy_constructible< typename _Tp::value_type> , is_nothrow_move_constructible< typename _Tp::value_type> > ::value>
# 200 "/usr/include/c++/5/bits/allocator.h" 3
struct __shrink_to_fit_aux {
# 201 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(_Tp &) noexcept { return false; } };
# 203 "/usr/include/c++/5/bits/allocator.h" 3
template< class _Tp>
# 204 "/usr/include/c++/5/bits/allocator.h" 3
struct __shrink_to_fit_aux< _Tp, true> {
# 207 "/usr/include/c++/5/bits/allocator.h" 3
static bool _S_do_it(_Tp &__c) noexcept
# 208 "/usr/include/c++/5/bits/allocator.h" 3
{
# 210 "/usr/include/c++/5/bits/allocator.h" 3
try
# 211 "/usr/include/c++/5/bits/allocator.h" 3
{
# 212 "/usr/include/c++/5/bits/allocator.h" 3
(_Tp(__make_move_if_noexcept_iterator((__c.begin())), __make_move_if_noexcept_iterator((__c.end())), (__c.get_allocator())).swap(__c));
# 215 "/usr/include/c++/5/bits/allocator.h" 3
return true;
# 216 "/usr/include/c++/5/bits/allocator.h" 3
}
# 217 "/usr/include/c++/5/bits/allocator.h" 3
catch (...)
# 218 "/usr/include/c++/5/bits/allocator.h" 3
{ return false; }
# 222 "/usr/include/c++/5/bits/allocator.h" 3
}
# 223 "/usr/include/c++/5/bits/allocator.h" 3
};
# 227 "/usr/include/c++/5/bits/allocator.h" 3
}
# 36 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility push ( default )
# 39 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
namespace __cxxabiv1 {
# 48 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
class __forced_unwind {
# 50 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual ~__forced_unwind() throw();
# 53 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
virtual void __pure_dummy() = 0;
# 54 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
};
# 55 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
}
# 58 "/usr/include/c++/5/bits/cxxabi_forced.h" 3
#pragma GCC visibility pop
# 38 "/usr/include/c++/5/bits/ostream_insert.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 44 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 45 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 46 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 47 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 48 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 50 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __put = ((__out.rdbuf())->sputn(__s, __n));
# 51 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__put != __n) {
# 52 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit)); }
# 53 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 55 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> inline void
# 57 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(basic_ostream< _CharT, _Traits> &__out, streamsize __n)
# 58 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 59 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 60 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 62 "/usr/include/c++/5/bits/ostream_insert.h" 3
const _CharT __c = (__out.fill());
# 63 "/usr/include/c++/5/bits/ostream_insert.h" 3
for (; __n > (0); --__n)
# 64 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 65 "/usr/include/c++/5/bits/ostream_insert.h" 3
const typename _Traits::int_type __put = ((__out.rdbuf())->sputc(__c));
# 66 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (_Traits::eq_int_type(__put, _Traits::eof()))
# 67 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 68 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.setstate(__ios_base::badbit));
# 69 "/usr/include/c++/5/bits/ostream_insert.h" 3
break;
# 70 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 71 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 72 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 74 "/usr/include/c++/5/bits/ostream_insert.h" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 76 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_insert(basic_ostream< _CharT, _Traits> &__out, const _CharT *
# 77 "/usr/include/c++/5/bits/ostream_insert.h" 3
__s, streamsize __n)
# 78 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 79 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef basic_ostream< _CharT, _Traits> __ostream_type;
# 80 "/usr/include/c++/5/bits/ostream_insert.h" 3
typedef typename basic_ostream< _CharT, _Traits> ::ios_base __ios_base;
# 82 "/usr/include/c++/5/bits/ostream_insert.h" 3
typename basic_ostream< _CharT, _Traits> ::sentry __cerb(__out);
# 83 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__cerb)
# 84 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 85 "/usr/include/c++/5/bits/ostream_insert.h" 3
try
# 86 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 87 "/usr/include/c++/5/bits/ostream_insert.h" 3
const streamsize __w = (__out.width());
# 88 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__w > __n)
# 89 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 90 "/usr/include/c++/5/bits/ostream_insert.h" 3
const bool __left = ((__out.flags()) & __ios_base::adjustfield) == __ios_base::left;
# 93 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (!__left) {
# 94 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 95 "/usr/include/c++/5/bits/ostream_insert.h" 3
if ((__out.good())) {
# 96 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 97 "/usr/include/c++/5/bits/ostream_insert.h" 3
if (__left && (__out.good())) {
# 98 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_fill(__out, __w - __n); }
# 99 "/usr/include/c++/5/bits/ostream_insert.h" 3
} else {
# 101 "/usr/include/c++/5/bits/ostream_insert.h" 3
__ostream_write(__out, __s, __n); }
# 102 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out.width(0));
# 103 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 104 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (__cxxabiv1::__forced_unwind &)
# 105 "/usr/include/c++/5/bits/ostream_insert.h" 3
{
# 106 "/usr/include/c++/5/bits/ostream_insert.h" 3
(__out._M_setstate(__ios_base::badbit));
# 107 "/usr/include/c++/5/bits/ostream_insert.h" 3
throw;
# 108 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 109 "/usr/include/c++/5/bits/ostream_insert.h" 3
catch (...)
# 110 "/usr/include/c++/5/bits/ostream_insert.h" 3
{ (__out._M_setstate(__ios_base::badbit)); }
# 111 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 112 "/usr/include/c++/5/bits/ostream_insert.h" 3
return __out;
# 113 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 118 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< char> &__ostream_insert(basic_ostream< char> & __out, const char * __s, streamsize __n);
# 121 "/usr/include/c++/5/bits/ostream_insert.h" 3
extern template basic_ostream< wchar_t> &__ostream_insert(basic_ostream< wchar_t> & __out, const wchar_t * __s, streamsize __n);
# 127 "/usr/include/c++/5/bits/ostream_insert.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_function.h" 3
namespace std __attribute((__visibility__("default"))) {
# 104 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 105 "/usr/include/c++/5/bits/stl_function.h" 3
struct unary_function {
# 108 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg argument_type;
# 111 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 112 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 118 "/usr/include/c++/5/bits/stl_function.h" 3
struct binary_function {
# 121 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg1 first_argument_type;
# 124 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Arg2 second_argument_type;
# 127 "/usr/include/c++/5/bits/stl_function.h" 3
typedef _Result result_type;
# 128 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 166 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 167 "/usr/include/c++/5/bits/stl_function.h" 3
struct plus : public binary_function< _Tp, _Tp, _Tp> {
# 171 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 172 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x + __y; }
# 173 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 176 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 177 "/usr/include/c++/5/bits/stl_function.h" 3
struct minus : public binary_function< _Tp, _Tp, _Tp> {
# 181 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 182 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x - __y; }
# 183 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 186 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 187 "/usr/include/c++/5/bits/stl_function.h" 3
struct multiplies : public binary_function< _Tp, _Tp, _Tp> {
# 191 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 192 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x * __y; }
# 193 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 196 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 197 "/usr/include/c++/5/bits/stl_function.h" 3
struct divides : public binary_function< _Tp, _Tp, _Tp> {
# 201 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 202 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x / __y; }
# 203 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 206 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 207 "/usr/include/c++/5/bits/stl_function.h" 3
struct modulus : public binary_function< _Tp, _Tp, _Tp> {
# 211 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 212 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x % __y; }
# 213 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 216 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 217 "/usr/include/c++/5/bits/stl_function.h" 3
struct negate : public unary_function< _Tp, _Tp> {
# 221 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 222 "/usr/include/c++/5/bits/stl_function.h" 3
{ return -__x; }
# 223 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 351 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 352 "/usr/include/c++/5/bits/stl_function.h" 3
struct equal_to : public binary_function< _Tp, _Tp, bool> {
# 356 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 357 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x == __y; }
# 358 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 361 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 362 "/usr/include/c++/5/bits/stl_function.h" 3
struct not_equal_to : public binary_function< _Tp, _Tp, bool> {
# 366 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 367 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x != __y; }
# 368 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 371 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 372 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater : public binary_function< _Tp, _Tp, bool> {
# 376 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 377 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x > __y; }
# 378 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 381 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 382 "/usr/include/c++/5/bits/stl_function.h" 3
struct less : public binary_function< _Tp, _Tp, bool> {
# 386 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 387 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x < __y; }
# 388 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 391 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 392 "/usr/include/c++/5/bits/stl_function.h" 3
struct greater_equal : public binary_function< _Tp, _Tp, bool> {
# 396 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 397 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x >= __y; }
# 398 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 401 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 402 "/usr/include/c++/5/bits/stl_function.h" 3
struct less_equal : public binary_function< _Tp, _Tp, bool> {
# 406 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 407 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x <= __y; }
# 408 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 524 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 525 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_and : public binary_function< _Tp, _Tp, bool> {
# 529 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 530 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x && __y; }
# 531 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 534 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 535 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_or : public binary_function< _Tp, _Tp, bool> {
# 539 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x, const _Tp &__y) const
# 540 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x || __y; }
# 541 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 544 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 545 "/usr/include/c++/5/bits/stl_function.h" 3
struct logical_not : public unary_function< _Tp, bool> {
# 549 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const _Tp &__x) const
# 550 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !__x; }
# 551 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 617 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 618 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_and : public binary_function< _Tp, _Tp, _Tp> {
# 622 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 623 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x & __y; }
# 624 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 626 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 627 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_or : public binary_function< _Tp, _Tp, _Tp> {
# 631 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 632 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x | __y; }
# 633 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 635 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 636 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_xor : public binary_function< _Tp, _Tp, _Tp> {
# 640 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x, const _Tp &__y) const
# 641 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x ^ __y; }
# 642 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 644 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 645 "/usr/include/c++/5/bits/stl_function.h" 3
struct bit_not : public unary_function< _Tp, _Tp> {
# 649 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp operator()(const _Tp &__x) const
# 650 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ~__x; }
# 651 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 741 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 742 "/usr/include/c++/5/bits/stl_function.h" 3
class unary_negate : public unary_function< typename _Predicate::argument_type, bool> {
# 746 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 751 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit unary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 755 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::argument_type &__x) const
# 756 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x); }
# 757 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 760 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline unary_negate< _Predicate>
# 763 "/usr/include/c++/5/bits/stl_function.h" 3
not1(const _Predicate &__pred)
# 764 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((unary_negate< _Predicate> )(__pred)); }
# 767 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate>
# 768 "/usr/include/c++/5/bits/stl_function.h" 3
class binary_negate : public binary_function< typename _Predicate::first_argument_type, typename _Predicate::second_argument_type, bool> {
# 773 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Predicate _M_pred;
# 778 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit binary_negate(const _Predicate &__x) : _M_pred(__x) { }
# 782 "/usr/include/c++/5/bits/stl_function.h" 3
bool operator()(const typename _Predicate::first_argument_type &__x, const typename _Predicate::second_argument_type &
# 783 "/usr/include/c++/5/bits/stl_function.h" 3
__y) const
# 784 "/usr/include/c++/5/bits/stl_function.h" 3
{ return !(_M_pred)(__x, __y); }
# 785 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 788 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Predicate> inline binary_negate< _Predicate>
# 791 "/usr/include/c++/5/bits/stl_function.h" 3
not2(const _Predicate &__pred)
# 792 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((binary_negate< _Predicate> )(__pred)); }
# 818 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result>
# 819 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_unary_function : public unary_function< _Arg, _Result> {
# 822 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg);
# 825 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_unary_function() { }
# 828 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_unary_function(_Result (*__x)(_Arg)) : _M_ptr(__x)
# 829 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 832 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg __x) const
# 833 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x); }
# 834 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 837 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg, class _Result> inline pointer_to_unary_function< _Arg, _Result>
# 839 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg))
# 840 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_unary_function< _Arg, _Result> )(__x)); }
# 843 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result>
# 844 "/usr/include/c++/5/bits/stl_function.h" 3
class pointer_to_binary_function : public binary_function< _Arg1, _Arg2, _Result> {
# 848 "/usr/include/c++/5/bits/stl_function.h" 3
protected: _Result (*_M_ptr)(_Arg1, _Arg2);
# 851 "/usr/include/c++/5/bits/stl_function.h" 3
public: pointer_to_binary_function() { }
# 854 "/usr/include/c++/5/bits/stl_function.h" 3
explicit pointer_to_binary_function(_Result (*__x)(_Arg1, _Arg2)) : _M_ptr(__x)
# 855 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 858 "/usr/include/c++/5/bits/stl_function.h" 3
_Result operator()(_Arg1 __x, _Arg2 __y) const
# 859 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (_M_ptr)(__x, __y); }
# 860 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 863 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Arg1, class _Arg2, class _Result> inline pointer_to_binary_function< _Arg1, _Arg2, _Result>
# 865 "/usr/include/c++/5/bits/stl_function.h" 3
ptr_fun(_Result (*__x)(_Arg1, _Arg2))
# 866 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((pointer_to_binary_function< _Arg1, _Arg2, _Result> )(__x)); }
# 869 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Tp>
# 870 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Identity : public unary_function< _Tp, _Tp> {
# 874 "/usr/include/c++/5/bits/stl_function.h" 3
_Tp &operator()(_Tp &__x) const
# 875 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 878 "/usr/include/c++/5/bits/stl_function.h" 3
const _Tp &operator()(const _Tp &__x) const
# 879 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x; }
# 880 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 882 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 883 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select1st : public unary_function< _Pair, typename _Pair::first_type> {
# 887 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::first_type &operator()(_Pair &__x) const
# 888 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 891 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::first_type &operator()(const _Pair &__x) const
# 892 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 895 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair2> typename _Pair2::first_type &
# 897 "/usr/include/c++/5/bits/stl_function.h" 3
operator()(_Pair2 &__x) const
# 898 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 900 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair2> const typename _Pair2::first_type &
# 902 "/usr/include/c++/5/bits/stl_function.h" 3
operator()(const _Pair2 &__x) const
# 903 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.first; }
# 905 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 907 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Pair>
# 908 "/usr/include/c++/5/bits/stl_function.h" 3
struct _Select2nd : public unary_function< _Pair, typename _Pair::second_type> {
# 912 "/usr/include/c++/5/bits/stl_function.h" 3
typename _Pair::second_type &operator()(_Pair &__x) const
# 913 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 916 "/usr/include/c++/5/bits/stl_function.h" 3
const typename _Pair::second_type &operator()(const _Pair &__x) const
# 917 "/usr/include/c++/5/bits/stl_function.h" 3
{ return __x.second; }
# 918 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 938 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 939 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_t : public unary_function< _Tp *, _Ret> {
# 943 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 944 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 947 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p) const
# 948 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 951 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 952 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 956 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 957 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_t : public unary_function< const _Tp *, _Ret> {
# 961 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 962 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 965 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p) const
# 966 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(); }
# 969 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 970 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 974 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 975 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 979 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun_ref_t(_Ret (_Tp::*__pf)(void)) : _M_f(__pf)
# 980 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 983 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r) const
# 984 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 987 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void);
# 988 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 992 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp>
# 993 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun_ref_t : public unary_function< _Tp, _Ret> {
# 997 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun_ref_t(_Ret (_Tp::*__pf)(void) const) : _M_f(__pf)
# 998 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1001 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r) const
# 1002 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(); }
# 1005 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(void) const;
# 1006 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1010 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1011 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_t : public binary_function< _Tp *, _Arg, _Ret> {
# 1015 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1016 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1019 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp *__p, _Arg __x) const
# 1020 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1023 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1024 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1028 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1029 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_t : public binary_function< const _Tp *, _Arg, _Ret> {
# 1033 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1034 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1037 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp *__p, _Arg __x) const
# 1038 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__p->*(_M_f))(__x); }
# 1041 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1042 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1046 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1047 "/usr/include/c++/5/bits/stl_function.h" 3
class mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1051 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg)) : _M_f(__pf)
# 1052 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1055 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(_Tp &__r, _Arg __x) const
# 1056 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1059 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg);
# 1060 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1064 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg>
# 1065 "/usr/include/c++/5/bits/stl_function.h" 3
class const_mem_fun1_ref_t : public binary_function< _Tp, _Arg, _Ret> {
# 1069 "/usr/include/c++/5/bits/stl_function.h" 3
public: explicit const_mem_fun1_ref_t(_Ret (_Tp::*__pf)(_Arg) const) : _M_f(__pf)
# 1070 "/usr/include/c++/5/bits/stl_function.h" 3
{ }
# 1073 "/usr/include/c++/5/bits/stl_function.h" 3
_Ret operator()(const _Tp &__r, _Arg __x) const
# 1074 "/usr/include/c++/5/bits/stl_function.h" 3
{ return (__r.*(_M_f))(__x); }
# 1077 "/usr/include/c++/5/bits/stl_function.h" 3
private: _Ret (_Tp::*_M_f)(_Arg) const;
# 1078 "/usr/include/c++/5/bits/stl_function.h" 3
};
# 1082 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_t< _Ret, _Tp>
# 1084 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void))
# 1085 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_t< _Ret, _Tp> )(__f)); }
# 1087 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_t< _Ret, _Tp>
# 1089 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(void) const)
# 1090 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_t< _Ret, _Tp> )(__f)); }
# 1092 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline mem_fun_ref_t< _Ret, _Tp>
# 1094 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void))
# 1095 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1097 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp> inline const_mem_fun_ref_t< _Ret, _Tp>
# 1099 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(void) const)
# 1100 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun_ref_t< _Ret, _Tp> )(__f)); }
# 1102 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_t< _Ret, _Tp, _Arg>
# 1104 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg))
# 1105 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1107 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_t< _Ret, _Tp, _Arg>
# 1109 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun(_Ret (_Tp::*__f)(_Arg) const)
# 1110 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_t< _Ret, _Tp, _Arg> )(__f)); }
# 1112 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1114 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg))
# 1115 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1117 "/usr/include/c++/5/bits/stl_function.h" 3
template< class _Ret, class _Tp, class _Arg> inline const_mem_fun1_ref_t< _Ret, _Tp, _Arg>
# 1119 "/usr/include/c++/5/bits/stl_function.h" 3
mem_fun_ref(_Ret (_Tp::*__f)(_Arg) const)
# 1120 "/usr/include/c++/5/bits/stl_function.h" 3
{ return ((const_mem_fun1_ref_t< _Ret, _Tp, _Arg> )(__f)); }
# 1125 "/usr/include/c++/5/bits/stl_function.h" 3
}
# 60 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
# 63 "/usr/include/c++/5/backward/binders.h" 3
namespace std __attribute((__visibility__("default"))) {
# 107 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 108 "/usr/include/c++/5/backward/binders.h" 3
class binder1st : public unary_function< typename _Operation::second_argument_type, typename _Operation::result_type> {
# 113 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 114 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::first_argument_type value;
# 117 "/usr/include/c++/5/backward/binders.h" 3
public: binder1st(const _Operation &__x, const typename _Operation::first_argument_type &
# 118 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 119 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 122 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::second_argument_type &__x) const
# 123 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 128 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::second_argument_type &__x) const
# 129 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(value, __x); }
# 130 "/usr/include/c++/5/backward/binders.h" 3
} __attribute((__deprecated__));
# 133 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder1st< _Operation>
# 135 "/usr/include/c++/5/backward/binders.h" 3
bind1st(const _Operation &__fn, const _Tp &__x)
# 136 "/usr/include/c++/5/backward/binders.h" 3
{
# 137 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::first_argument_type _Arg1_type;
# 138 "/usr/include/c++/5/backward/binders.h" 3
return binder1st< _Operation> (__fn, (_Arg1_type)__x);
# 139 "/usr/include/c++/5/backward/binders.h" 3
}
# 142 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation>
# 143 "/usr/include/c++/5/backward/binders.h" 3
class binder2nd : public unary_function< typename _Operation::first_argument_type, typename _Operation::result_type> {
# 148 "/usr/include/c++/5/backward/binders.h" 3
protected: _Operation op;
# 149 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::second_argument_type value;
# 152 "/usr/include/c++/5/backward/binders.h" 3
public: binder2nd(const _Operation &__x, const typename _Operation::second_argument_type &
# 153 "/usr/include/c++/5/backward/binders.h" 3
__y) : op(__x), value(__y)
# 154 "/usr/include/c++/5/backward/binders.h" 3
{ }
# 157 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(const typename _Operation::first_argument_type &__x) const
# 158 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 163 "/usr/include/c++/5/backward/binders.h" 3
typename _Operation::result_type operator()(typename _Operation::first_argument_type &__x) const
# 164 "/usr/include/c++/5/backward/binders.h" 3
{ return (op)(__x, value); }
# 165 "/usr/include/c++/5/backward/binders.h" 3
} __attribute((__deprecated__));
# 168 "/usr/include/c++/5/backward/binders.h" 3
template< class _Operation, class _Tp> inline binder2nd< _Operation>
# 170 "/usr/include/c++/5/backward/binders.h" 3
bind2nd(const _Operation &__fn, const _Tp &__x)
# 171 "/usr/include/c++/5/backward/binders.h" 3
{
# 172 "/usr/include/c++/5/backward/binders.h" 3
typedef typename _Operation::second_argument_type _Arg2_type;
# 173 "/usr/include/c++/5/backward/binders.h" 3
return binder2nd< _Operation> (__fn, (_Arg2_type)__x);
# 174 "/usr/include/c++/5/backward/binders.h" 3
}
# 178 "/usr/include/c++/5/backward/binders.h" 3
}
# 180 "/usr/include/c++/5/backward/binders.h" 3
#pragma GCC diagnostic pop
# 39 "/usr/include/c++/5/initializer_list" 3
#pragma GCC visibility push ( default )
# 43 "/usr/include/c++/5/initializer_list" 3
namespace std {
# 46 "/usr/include/c++/5/initializer_list" 3
template< class _E>
# 47 "/usr/include/c++/5/initializer_list" 3
class initializer_list {
# 50 "/usr/include/c++/5/initializer_list" 3
public: typedef _E value_type;
# 51 "/usr/include/c++/5/initializer_list" 3
typedef const _E &reference;
# 52 "/usr/include/c++/5/initializer_list" 3
typedef const _E &const_reference;
# 53 "/usr/include/c++/5/initializer_list" 3
typedef size_t size_type;
# 54 "/usr/include/c++/5/initializer_list" 3
typedef const _E *iterator;
# 55 "/usr/include/c++/5/initializer_list" 3
typedef const _E *const_iterator;
# 58 "/usr/include/c++/5/initializer_list" 3
private: iterator _M_array;
# 59 "/usr/include/c++/5/initializer_list" 3
size_type _M_len;
# 62 "/usr/include/c++/5/initializer_list" 3
constexpr initializer_list(const_iterator __a, size_type __l) : _M_array(__a), _M_len(__l)
# 63 "/usr/include/c++/5/initializer_list" 3
{ }
# 66 "/usr/include/c++/5/initializer_list" 3
public: constexpr initializer_list() noexcept : _M_array((0)), _M_len((0))
# 67 "/usr/include/c++/5/initializer_list" 3
{ }
# 71 "/usr/include/c++/5/initializer_list" 3
constexpr size_type size() const noexcept { return _M_len; }
# 75 "/usr/include/c++/5/initializer_list" 3
constexpr const_iterator begin() const noexcept { return _M_array; }
# 79 "/usr/include/c++/5/initializer_list" 3
constexpr const_iterator end() const noexcept { return begin() + size(); }
# 80 "/usr/include/c++/5/initializer_list" 3
};
# 87 "/usr/include/c++/5/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 89 "/usr/include/c++/5/initializer_list" 3
begin(initializer_list< _Tp> __ils) noexcept
# 90 "/usr/include/c++/5/initializer_list" 3
{ return (__ils.begin()); }
# 97 "/usr/include/c++/5/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 99 "/usr/include/c++/5/initializer_list" 3
end(initializer_list< _Tp> __ils) noexcept
# 100 "/usr/include/c++/5/initializer_list" 3
{ return (__ils.end()); }
# 101 "/usr/include/c++/5/initializer_list" 3
}
# 103 "/usr/include/c++/5/initializer_list" 3
#pragma GCC visibility pop
# 37 "/usr/include/c++/5/bits/range_access.h" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 48 "/usr/include/c++/5/bits/range_access.h" 3
begin(_Container &__cont)->__decltype(((__cont.begin())))
# 49 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.begin()); }
# 56 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 58 "/usr/include/c++/5/bits/range_access.h" 3
begin(const _Container &__cont)->__decltype(((__cont.begin())))
# 59 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.begin()); }
# 66 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 68 "/usr/include/c++/5/bits/range_access.h" 3
end(_Container &__cont)->__decltype(((__cont.end())))
# 69 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.end()); }
# 76 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Container> inline auto
# 78 "/usr/include/c++/5/bits/range_access.h" 3
end(const _Container &__cont)->__decltype(((__cont.end())))
# 79 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__cont.end()); }
# 85 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Tp, size_t _Nm> inline _Tp *
# 87 "/usr/include/c++/5/bits/range_access.h" 3
begin(_Tp (&__arr)[_Nm])
# 88 "/usr/include/c++/5/bits/range_access.h" 3
{ return __arr; }
# 95 "/usr/include/c++/5/bits/range_access.h" 3
template< class _Tp, size_t _Nm> inline _Tp *
# 97 "/usr/include/c++/5/bits/range_access.h" 3
end(_Tp (&__arr)[_Nm])
# 98 "/usr/include/c++/5/bits/range_access.h" 3
{ return (__arr) + _Nm; }
# 234 "/usr/include/c++/5/bits/range_access.h" 3
}
# 39 "/usr/include/c++/5/bits/alloc_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp>
# 44 "/usr/include/c++/5/bits/alloc_traits.h" 3
class __alloctr_rebind_helper {
# 46 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class _Tp2> static constexpr true_type _S_chk(typename _Alloc2::template rebind< _Tp2> ::other *);
# 50 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class , class > static constexpr false_type _S_chk(...);
# 55 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: using __type = __decltype((_S_chk< _Alloc, _Tp> (nullptr)));
# 56 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 58 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp, bool
# 59 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __alloctr_rebind_helper< _Alloc, _Tp> ::__type::value> struct __alloctr_rebind;
# 62 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp>
# 63 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __alloctr_rebind< _Alloc, _Tp, true> {
# 65 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename _Alloc::template rebind< _Tp> ::other __type;
# 66 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 68 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< template< class , class ...> class _Alloc, class _Tp, class
# 69 "/usr/include/c++/5/bits/alloc_traits.h" 3
_Up, class ..._Args>
# 70 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __alloctr_rebind< _Alloc< _Up, _Args...> , _Tp, false> {
# 72 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef _Alloc< _Tp, _Args...> __type;
# 73 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 75 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc, class _Tp> using __alloc_rebind = typename __alloctr_rebind< _Alloc, _Tp> ::__type;
# 82 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 83 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct allocator_traits {
# 86 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 88 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename _Alloc::value_type value_type;
# 98 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::pointer _S_pointer_helper(_Tp *); static value_type *_S_pointer_helper(...); typedef __decltype((_S_pointer_helper((_Alloc *)0))) __pointer;
# 105 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __pointer pointer;
# 107 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::const_pointer _S_const_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< const typename _Alloc::value_type> _S_const_pointer_helper(...); typedef __decltype((_S_const_pointer_helper((_Alloc *)0))) __const_pointer;
# 116 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __const_pointer const_pointer;
# 118 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::void_pointer _S_void_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< void> _S_void_pointer_helper(...); typedef __decltype((_S_void_pointer_helper((_Alloc *)0))) __void_pointer;
# 127 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __void_pointer void_pointer;
# 129 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::const_void_pointer _S_const_void_pointer_helper(_Tp *); static typename pointer_traits< __pointer> ::template rebind< const void> _S_const_void_pointer_helper(...); typedef __decltype((_S_const_void_pointer_helper((_Alloc *)0))) __const_void_pointer;
# 138 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __const_void_pointer const_void_pointer;
# 140 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::difference_type _S_difference_type_helper(_Tp *); static typename pointer_traits< __pointer> ::difference_type _S_difference_type_helper(...); typedef __decltype((_S_difference_type_helper((_Alloc *)0))) __difference_type;
# 149 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __difference_type difference_type;
# 151 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::size_type _S_size_type_helper(_Tp *); static typename make_unsigned< __difference_type> ::type _S_size_type_helper(...); typedef __decltype((_S_size_type_helper((_Alloc *)0))) __size_type;
# 160 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __size_type size_type;
# 162 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_copy_assignment _S_propagate_on_container_copy_assignment_helper(_Tp *); static false_type _S_propagate_on_container_copy_assignment_helper(...); typedef __decltype((_S_propagate_on_container_copy_assignment_helper((_Alloc *)0))) __propagate_on_container_copy_assignment;
# 172 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_copy_assignment propagate_on_container_copy_assignment;
# 174 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_move_assignment _S_propagate_on_container_move_assignment_helper(_Tp *); static false_type _S_propagate_on_container_move_assignment_helper(...); typedef __decltype((_S_propagate_on_container_move_assignment_helper((_Alloc *)0))) __propagate_on_container_move_assignment;
# 184 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_move_assignment propagate_on_container_move_assignment;
# 186 "/usr/include/c++/5/bits/alloc_traits.h" 3
private: template< class _Tp> static typename _Tp::propagate_on_container_swap _S_propagate_on_container_swap_helper(_Tp *); static false_type _S_propagate_on_container_swap_helper(...); typedef __decltype((_S_propagate_on_container_swap_helper((_Alloc *)0))) __propagate_on_container_swap;
# 195 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __propagate_on_container_swap propagate_on_container_swap;
# 199 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using rebind_alloc = typename __alloctr_rebind< _Alloc, _Tp> ::__type;
# 201 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using rebind_traits = std::allocator_traits< rebind_alloc< _Tp> > ;
# 206 "/usr/include/c++/5/bits/alloc_traits.h" 3
private:
# 205 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 206 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __allocate_helper {
# 208 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 209 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->allocate(std::declval< size_type> (), std::declval< const_void_pointer> ()))))> static true_type
# 208 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 214 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 217 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 218 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 220 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_allocate = typename __allocate_helper< _Alloc2> ::type;
# 223 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 224 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_allocate< _Alloc2> > > static pointer
# 226 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_allocate(_Alloc2 &__a, size_type __n, const_void_pointer __hint)
# 227 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n, __hint)); }
# 229 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class _UnusedHint, class
# 230 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_allocate< _Alloc2> > > > static pointer
# 232 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_allocate(_Alloc2 &__a, size_type __n, _UnusedHint)
# 233 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 235 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args>
# 236 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __construct_helper {
# 238 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 239 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc2 *> ()->construct(std::declval< _Tp *> (), std::declval< _Args> ()...))))> static true_type
# 238 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 243 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 246 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 247 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 249 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> using __has_construct = typename __construct_helper< _Tp, _Args...> ::type;
# 253 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static _Require< __has_construct< _Tp, _Args...> >
# 255 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_construct(_Alloc &__a, _Tp *__p, _Args &&...__args)
# 256 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.construct(__p, std::forward< _Args> (__args)...)); }
# 258 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static _Require< __and_< __not_< __has_construct< _Tp, _Args...> > , is_constructible< _Tp, _Args...> > >
# 262 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_construct(_Alloc &, _Tp *__p, _Args &&...__args)
# 263 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ ::new ((void *)__p) (_Tp)(std::forward< _Args> (__args)...); }
# 265 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 266 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __destroy_helper {
# 268 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 269 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc2 *> ()->destroy(std::declval< _Tp *> ()))))> static true_type
# 268 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 273 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 276 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc> (0)));
# 277 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 279 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> using __has_destroy = typename __destroy_helper< _Tp> ::type;
# 282 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static _Require< __has_destroy< _Tp> >
# 284 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_destroy(_Alloc &__a, _Tp *__p)
# 285 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 287 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static _Require< __not_< __has_destroy< _Tp> > >
# 289 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_destroy(_Alloc &, _Tp *__p)
# 290 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__p->~_Tp()); }
# 292 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 293 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __maxsize_helper {
# 295 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 296 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->max_size())))> static true_type
# 295 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 299 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 302 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc2> (0)));
# 303 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 305 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_max_size = typename __maxsize_helper< _Alloc2> ::type;
# 308 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 309 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_max_size< _Alloc2> > > static size_type
# 311 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_max_size(_Alloc2 &__a, int)
# 312 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.max_size()); }
# 314 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 315 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_max_size< _Alloc2> > > > static size_type
# 317 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_max_size(_Alloc2 &, ...)
# 318 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __gnu_cxx::__numeric_traits< __size_type> ::__max; }
# 320 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2>
# 321 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __select_helper {
# 323 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc3, class
# 324 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype(((std::declval< _Alloc3 *> ()->select_on_container_copy_construction())))> static true_type
# 323 "/usr/include/c++/5/bits/alloc_traits.h" 3
__test(int);
# 328 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class > static false_type __test(...);
# 331 "/usr/include/c++/5/bits/alloc_traits.h" 3
using type = __decltype((__test< _Alloc2> (0)));
# 332 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 334 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2> using __has_soccc = typename __select_helper< _Alloc2> ::type;
# 337 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 338 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __has_soccc< _Alloc2> > > static _Alloc2
# 340 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_select(_Alloc2 &__a, int)
# 341 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.select_on_container_copy_construction()); }
# 343 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc2, class
# 344 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = _Require< __not_< __has_soccc< _Alloc2> > > > static _Alloc2
# 346 "/usr/include/c++/5/bits/alloc_traits.h" 3
_S_select(_Alloc2 &__a, ...)
# 347 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __a; }
# 359 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: static pointer allocate(_Alloc &__a, size_type __n)
# 360 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 374 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(_Alloc &__a, size_type __n, const_void_pointer __hint)
# 375 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_allocate(__a, __n, __hint); }
# 385 "/usr/include/c++/5/bits/alloc_traits.h" 3
static void deallocate(_Alloc &__a, pointer __p, size_type __n)
# 386 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 399 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp, class ..._Args> static auto
# 400 "/usr/include/c++/5/bits/alloc_traits.h" 3
construct(_Alloc &__a, _Tp *__p, _Args &&...__args)->__decltype((_S_construct(__a, __p, std::forward< _Args> (__args)...)))
# 402 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ _S_construct(__a, __p, std::forward< _Args> (__args)...); }
# 412 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp> static void
# 413 "/usr/include/c++/5/bits/alloc_traits.h" 3
destroy(_Alloc &__a, _Tp *__p)
# 414 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ _S_destroy(__a, __p); }
# 424 "/usr/include/c++/5/bits/alloc_traits.h" 3
static size_type max_size(const _Alloc &__a) noexcept
# 425 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_max_size(__a, 0); }
# 436 "/usr/include/c++/5/bits/alloc_traits.h" 3
static _Alloc select_on_container_copy_construction(const _Alloc &__rhs)
# 437 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return _S_select(__rhs, 0); }
# 438 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 441 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 442 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct allocator_traits< allocator< _Tp> > {
# 445 "/usr/include/c++/5/bits/alloc_traits.h" 3
using allocator_type = allocator< _Tp> ;
# 447 "/usr/include/c++/5/bits/alloc_traits.h" 3
using value_type = _Tp;
# 450 "/usr/include/c++/5/bits/alloc_traits.h" 3
using pointer = _Tp *;
# 453 "/usr/include/c++/5/bits/alloc_traits.h" 3
using const_pointer = const _Tp *;
# 456 "/usr/include/c++/5/bits/alloc_traits.h" 3
using void_pointer = void *;
# 459 "/usr/include/c++/5/bits/alloc_traits.h" 3
using const_void_pointer = const void *;
# 462 "/usr/include/c++/5/bits/alloc_traits.h" 3
using difference_type = ptrdiff_t;
# 465 "/usr/include/c++/5/bits/alloc_traits.h" 3
using size_type = size_t;
# 468 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_copy_assignment = false_type;
# 471 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_move_assignment = true_type;
# 474 "/usr/include/c++/5/bits/alloc_traits.h" 3
using propagate_on_container_swap = false_type;
# 476 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> using rebind_alloc = allocator< _Up> ;
# 479 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> using rebind_traits = std::allocator_traits< allocator< _Up> > ;
# 490 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(allocator_type &__a, size_type __n)
# 491 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n)); }
# 504 "/usr/include/c++/5/bits/alloc_traits.h" 3
static pointer allocate(allocator_type &__a, size_type __n, const_void_pointer __hint)
# 505 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.allocate(__n, __hint)); }
# 516 "/usr/include/c++/5/bits/alloc_traits.h" 3
static void deallocate(allocator_type &__a, pointer __p, size_type __n)
# 517 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.deallocate(__p, __n)); }
# 527 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up, class ..._Args> static void
# 529 "/usr/include/c++/5/bits/alloc_traits.h" 3
construct(allocator_type &__a, _Up *__p, _Args &&...__args)
# 530 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.construct(__p, std::forward< _Args> (__args)...)); }
# 539 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> static void
# 541 "/usr/include/c++/5/bits/alloc_traits.h" 3
destroy(allocator_type &__a, _Up *__p)
# 542 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ (__a.destroy(__p)); }
# 550 "/usr/include/c++/5/bits/alloc_traits.h" 3
static size_type max_size(const allocator_type &__a) noexcept
# 551 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return (__a.max_size()); }
# 559 "/usr/include/c++/5/bits/alloc_traits.h" 3
static allocator_type select_on_container_copy_construction(const allocator_type &__rhs)
# 560 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ return __rhs; }
# 561 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 564 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 566 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(_Alloc &__one, const _Alloc &__two, true_type)
# 567 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ __one = __two; }
# 569 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 571 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(_Alloc &, const _Alloc &, false_type)
# 572 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 574 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 575 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_copy(_Alloc &__one, const _Alloc &__two)
# 576 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 577 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 578 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_copy_assignment __pocca;
# 579 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_copy(__one, __two, __pocca());
# 580 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 582 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline _Alloc
# 583 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_copy(const _Alloc &__a)
# 584 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 585 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 586 "/usr/include/c++/5/bits/alloc_traits.h" 3
return __traits::select_on_container_copy_construction(__a);
# 587 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 589 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 590 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(_Alloc &__one, _Alloc &__two, true_type)
# 591 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ __one = std::move(__two); }
# 593 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 594 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(_Alloc &, _Alloc &, false_type)
# 595 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 597 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 598 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_move(_Alloc &__one, _Alloc &__two)
# 599 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 600 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 601 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_move_assignment __pocma;
# 602 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_move(__one, __two, __pocma());
# 603 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 605 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 606 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(_Alloc &__one, _Alloc &__two, true_type)
# 607 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 608 "/usr/include/c++/5/bits/alloc_traits.h" 3
using std::swap;
# 609 "/usr/include/c++/5/bits/alloc_traits.h" 3
swap(__one, __two);
# 610 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 612 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 613 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(_Alloc &, _Alloc &, false_type)
# 614 "/usr/include/c++/5/bits/alloc_traits.h" 3
{ }
# 616 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc> inline void
# 617 "/usr/include/c++/5/bits/alloc_traits.h" 3
__alloc_on_swap(_Alloc &__one, _Alloc &__two)
# 618 "/usr/include/c++/5/bits/alloc_traits.h" 3
{
# 619 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> __traits;
# 620 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef typename allocator_traits< _Alloc> ::propagate_on_container_swap __pocs;
# 621 "/usr/include/c++/5/bits/alloc_traits.h" 3
__do_alloc_on_swap(__one, __two, __pocs());
# 622 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 624 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 625 "/usr/include/c++/5/bits/alloc_traits.h" 3
class __is_copy_insertable_impl {
# 627 "/usr/include/c++/5/bits/alloc_traits.h" 3
typedef allocator_traits< _Alloc> _Traits;
# 629 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up, class
# 630 "/usr/include/c++/5/bits/alloc_traits.h" 3
 = __decltype((_Traits::construct(std::declval< _Alloc &> (), std::declval< _Up *> (), std::declval< const _Up &> ())))> static true_type
# 629 "/usr/include/c++/5/bits/alloc_traits.h" 3
_M_select(int);
# 636 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Up> static false_type _M_select(...);
# 641 "/usr/include/c++/5/bits/alloc_traits.h" 3
public: typedef __decltype((_M_select< typename _Alloc::value_type> (0))) type;
# 642 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 645 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Alloc>
# 646 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __is_copy_insertable : public __is_copy_insertable_impl< _Alloc> ::type {
# 648 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 651 "/usr/include/c++/5/bits/alloc_traits.h" 3
template< class _Tp>
# 652 "/usr/include/c++/5/bits/alloc_traits.h" 3
struct __is_copy_insertable< allocator< _Tp> > : public is_copy_constructible< _Tp> {
# 654 "/usr/include/c++/5/bits/alloc_traits.h" 3
};
# 657 "/usr/include/c++/5/bits/alloc_traits.h" 3
}
# 41 "/usr/include/c++/5/ext/alloc_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Alloc>
# 47 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal : public std::false_type { };
# 49 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 50 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< std::allocator< _Tp> > : public std::true_type {
# 51 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 53 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class , class > struct array_allocator;
# 55 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp, class _Array>
# 56 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< array_allocator< _Tp, _Array> > : public std::true_type {
# 57 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 59 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct bitmap_allocator;
# 61 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 62 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< bitmap_allocator< _Tp> > : public std::true_type {
# 63 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 65 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct malloc_allocator;
# 67 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 68 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< malloc_allocator< _Tp> > : public std::true_type {
# 69 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 71 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct mt_allocator;
# 73 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 74 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< mt_allocator< _Tp> > : public std::true_type {
# 75 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 77 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > class new_allocator;
# 79 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 80 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< new_allocator< _Tp> > : public std::true_type {
# 81 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 83 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class > struct pool_allocator;
# 85 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 86 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __allocator_always_compares_equal< pool_allocator< _Tp> > : public std::true_type {
# 87 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 94 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Alloc>
# 95 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct __alloc_traits : public std::allocator_traits< _Alloc> {
# 100 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef _Alloc allocator_type;
# 102 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef ::std::allocator_traits< _Alloc> _Base_type;
# 103 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::value_type value_type;
# 104 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::pointer pointer;
# 105 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::const_pointer const_pointer;
# 106 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::size_type size_type;
# 107 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::difference_type difference_type;
# 109 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef value_type &reference;
# 110 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef const value_type &const_reference;
# 111 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::allocate;
# 112 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::deallocate;
# 113 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::construct;
# 114 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::destroy;
# 115 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::allocator_traits< _Alloc> ::max_size;
# 119 "/usr/include/c++/5/ext/alloc_traits.h" 3
private:
# 118 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr> using __is_custom_pointer = ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ;
# 127 "/usr/include/c++/5/ext/alloc_traits.h" 3
public:
# 125 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr, class ..._Args> static typename ::std::enable_if< ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ::value> ::type
# 127 "/usr/include/c++/5/ext/alloc_traits.h" 3
construct(_Alloc &__a, _Ptr __p, _Args &&...__args)
# 128 "/usr/include/c++/5/ext/alloc_traits.h" 3
{
# 129 "/usr/include/c++/5/ext/alloc_traits.h" 3
_Base_type::construct(__a, ::std::addressof(*__p), ::std::forward< _Args> (__args)...);
# 131 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 134 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Ptr> static typename ::std::enable_if< ::std::__and_< ::std::is_same< typename ::std::allocator_traits< _Alloc> ::pointer, _Ptr> , ::std::__not_< ::std::is_pointer< _Ptr> > > ::value> ::type
# 136 "/usr/include/c++/5/ext/alloc_traits.h" 3
destroy(_Alloc &__a, _Ptr __p)
# 137 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ _Base_type::destroy(__a, ::std::addressof(*__p)); }
# 139 "/usr/include/c++/5/ext/alloc_traits.h" 3
static _Alloc _S_select_on_copy(const _Alloc &__a)
# 140 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::select_on_container_copy_construction(__a); }
# 142 "/usr/include/c++/5/ext/alloc_traits.h" 3
static void _S_on_swap(_Alloc &__a, _Alloc &__b)
# 143 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ ::std::__alloc_on_swap(__a, __b); }
# 145 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_copy_assign()
# 146 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_copy_assignment::value; }
# 148 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_move_assign()
# 149 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_move_assignment::value; }
# 151 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_propagate_on_swap()
# 152 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return _Base_type::propagate_on_container_swap::value; }
# 154 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_always_equal()
# 155 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return __allocator_always_compares_equal< _Alloc> ::value; }
# 157 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_nothrow_move()
# 158 "/usr/include/c++/5/ext/alloc_traits.h" 3
{ return (_S_propagate_on_move_assign)() || (_S_always_equal)(); }
# 160 "/usr/include/c++/5/ext/alloc_traits.h" 3
static constexpr bool _S_nothrow_swap()
# 161 "/usr/include/c++/5/ext/alloc_traits.h" 3
{
# 162 "/usr/include/c++/5/ext/alloc_traits.h" 3
using ::std::swap;
# 163 "/usr/include/c++/5/ext/alloc_traits.h" 3
return (!(_S_propagate_on_swap)()) || noexcept(swap(::std::declval< _Alloc &> (), ::std::declval< _Alloc &> ()));
# 165 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 167 "/usr/include/c++/5/ext/alloc_traits.h" 3
template< class _Tp>
# 168 "/usr/include/c++/5/ext/alloc_traits.h" 3
struct rebind {
# 169 "/usr/include/c++/5/ext/alloc_traits.h" 3
typedef typename ::std::allocator_traits< _Alloc> ::template rebind_alloc< _Tp> other; };
# 210 "/usr/include/c++/5/ext/alloc_traits.h" 3
};
# 213 "/usr/include/c++/5/ext/alloc_traits.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/bits/basic_string.h" 3
inline namespace __cxx11 {
# 70 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc>
# 71 "/usr/include/c++/5/bits/basic_string.h" 3
class basic_string {
# 74 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other _Char_alloc_type;
# 75 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> _Alloc_traits;
# 79 "/usr/include/c++/5/bits/basic_string.h" 3
public: typedef _Traits traits_type;
# 80 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename _Traits::char_type value_type;
# 81 "/usr/include/c++/5/bits/basic_string.h" 3
typedef _Char_alloc_type allocator_type;
# 82 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type size_type;
# 83 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::difference_type difference_type;
# 84 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::reference reference;
# 85 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_reference const_reference;
# 86 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer pointer;
# 87 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer const_pointer;
# 88 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> iterator;
# 90 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> const_iterator;
# 91 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer, basic_string> > const_reverse_iterator;
# 92 "/usr/include/c++/5/bits/basic_string.h" 3
typedef std::reverse_iterator< __gnu_cxx::__normal_iterator< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer, basic_string> > reverse_iterator;
# 95 "/usr/include/c++/5/bits/basic_string.h" 3
static const size_type npos = (static_cast< size_type>(-1));
# 102 "/usr/include/c++/5/bits/basic_string.h" 3
private: typedef const_iterator __const_iterator;
# 106 "/usr/include/c++/5/bits/basic_string.h" 3
struct _Alloc_hider : public allocator_type {
# 108 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider(typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer __dat, const _Alloc &__a = _Alloc()) : ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::allocator_type(__a), _M_p(__dat)
# 109 "/usr/include/c++/5/bits/basic_string.h" 3
{ }
# 111 "/usr/include/c++/5/bits/basic_string.h" 3
typename ::std::__cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer _M_p;
# 112 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 114 "/usr/include/c++/5/bits/basic_string.h" 3
_Alloc_hider _M_dataplus;
# 115 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_string_length;
# 117 "/usr/include/c++/5/bits/basic_string.h" 3
enum { _S_local_capacity = (15) / sizeof(_CharT)};
# 120 "/usr/include/c++/5/bits/basic_string.h" 3
union {
# 121 "/usr/include/c++/5/bits/basic_string.h" 3
_CharT _M_local_buf[(_S_local_capacity) + 1];
# 122 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_allocated_capacity;
# 123 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 126 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_data(pointer __p)
# 127 "/usr/include/c++/5/bits/basic_string.h" 3
{ ((_M_dataplus)._M_p) = __p; }
# 130 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_length(size_type __length)
# 131 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_M_string_length) = __length; }
# 134 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_data() const
# 135 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_M_dataplus)._M_p; }
# 138 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_local_data()
# 139 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 141 "/usr/include/c++/5/bits/basic_string.h" 3
return std::pointer_traits< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::pointer> ::pointer_to(*(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 145 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 148 "/usr/include/c++/5/bits/basic_string.h" 3
const_pointer _M_local_data() const
# 149 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 151 "/usr/include/c++/5/bits/basic_string.h" 3
return std::pointer_traits< typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::const_pointer> ::pointer_to(*(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 155 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 158 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_capacity(size_type __capacity)
# 159 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity) = __capacity; }
# 162 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_set_length(size_type __n)
# 163 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 164 "/usr/include/c++/5/bits/basic_string.h" 3
_M_length(__n);
# 165 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(_M_data()[__n], _CharT());
# 166 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 169 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_is_local() const
# 170 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data() == this->_M_local_data(); }
# 174 "/usr/include/c++/5/bits/basic_string.h" 3
pointer _M_create(size_type &, size_type);
# 177 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_dispose()
# 178 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 179 "/usr/include/c++/5/bits/basic_string.h" 3
if (!_M_is_local()) {
# 180 "/usr/include/c++/5/bits/basic_string.h" 3
_M_destroy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity); }
# 181 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 184 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_destroy(size_type __size) throw()
# 185 "/usr/include/c++/5/bits/basic_string.h" 3
{ _Alloc_traits::deallocate(this->_M_get_allocator(), _M_data(), __size + 1); }
# 189 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 191 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_InIterator __beg, _InIterator __end, __false_type)
# 193 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 194 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename iterator_traits< _InIterator> ::iterator_category _Tag;
# 195 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__beg, __end, _Tag());
# 196 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 200 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> void
# 202 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(_Integer __beg, _Integer __end, __true_type)
# 203 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct_aux_2(static_cast< size_type>(__beg), __end); }
# 206 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct_aux_2(size_type __req, _CharT __c)
# 207 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__req, __c); }
# 209 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(_InIterator __beg, _InIterator __end)
# 212 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 213 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __is_integer< _InIterator> ::__type _Integral;
# 214 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct_aux(__beg, __end, _Integral());
# 215 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 218 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InIterator> void _M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag);
# 225 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _FwdIterator> void _M_construct(_FwdIterator __beg, _FwdIterator __end, forward_iterator_tag);
# 231 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_construct(size_type __req, _CharT __c);
# 234 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type &_M_get_allocator()
# 235 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 238 "/usr/include/c++/5/bits/basic_string.h" 3
const allocator_type &_M_get_allocator() const
# 239 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_dataplus; }
# 258 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_check(size_type __pos, const char *__s) const
# 259 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 260 "/usr/include/c++/5/bits/basic_string.h" 3
if (__pos > this->size()) {
# 261 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("%s: __pos (which is %zu) > this->size() (which is %zu)", __s, __pos, this->size()); }
# 264 "/usr/include/c++/5/bits/basic_string.h" 3
return __pos;
# 265 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 268 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_check_length(size_type __n1, size_type __n2, const char *__s) const
# 269 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 270 "/usr/include/c++/5/bits/basic_string.h" 3
if ((this->max_size() - (this->size() - __n1)) < __n2) {
# 271 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_length_error(__s); }
# 272 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type _M_limit(size_type __pos, size_type __off) const noexcept
# 278 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 279 "/usr/include/c++/5/bits/basic_string.h" 3
const bool __testoff = __off < (this->size() - __pos);
# 280 "/usr/include/c++/5/bits/basic_string.h" 3
return __testoff ? __off : (this->size() - __pos);
# 281 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 285 "/usr/include/c++/5/bits/basic_string.h" 3
bool _M_disjunct(const _CharT *__s) const noexcept
# 286 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 287 "/usr/include/c++/5/bits/basic_string.h" 3
return less< const _CharT *> ()(__s, _M_data()) || less< const _CharT *> ()(_M_data() + this->size(), __s);
# 289 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 294 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy(_CharT *__d, const _CharT *__s, size_type __n)
# 295 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 296 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 297 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 299 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::copy(__d, __s, __n); }
# 300 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 303 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_move(_CharT *__d, const _CharT *__s, size_type __n)
# 304 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 306 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, *__s); } else {
# 308 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::move(__d, __s, __n); }
# 309 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_assign(_CharT *__d, size_type __n, _CharT __c)
# 313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 314 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n == 1) {
# 315 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__d, __c); } else {
# 317 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(__d, __n, __c); }
# 318 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 322 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Iterator> static void
# 324 "/usr/include/c++/5/bits/basic_string.h" 3
_S_copy_chars(_CharT *__p, _Iterator __k1, _Iterator __k2)
# 325 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 326 "/usr/include/c++/5/bits/basic_string.h" 3
for (; __k1 != __k2; (++__k1), (++__p)) {
# 327 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign(*__p, *__k1); }
# 328 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 331 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, iterator __k1, iterator __k2) noexcept
# 332 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 335 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const_iterator __k1, const_iterator __k2) noexcept
# 337 "/usr/include/c++/5/bits/basic_string.h" 3
{ _S_copy_chars(__p, (__k1.base()), (__k2.base())); }
# 340 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, _CharT *__k1, _CharT *__k2) noexcept
# 341 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 344 "/usr/include/c++/5/bits/basic_string.h" 3
static void _S_copy_chars(_CharT *__p, const _CharT *__k1, const _CharT *__k2) noexcept
# 346 "/usr/include/c++/5/bits/basic_string.h" 3
{ (_S_copy)(__p, __k1, __k2 - __k1); }
# 349 "/usr/include/c++/5/bits/basic_string.h" 3
static int _S_compare(size_type __n1, size_type __n2) noexcept
# 350 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 351 "/usr/include/c++/5/bits/basic_string.h" 3
const difference_type __d = (difference_type)(__n1 - __n2);
# 353 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d > __gnu_cxx::__numeric_traits< int> ::__max) {
# 354 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__max; } else {
# 355 "/usr/include/c++/5/bits/basic_string.h" 3
if (__d < __gnu_cxx::__numeric_traits< int> ::__min) {
# 356 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__numeric_traits_integer< int> ::__min; } else {
# 358 "/usr/include/c++/5/bits/basic_string.h" 3
return (int)__d; } }
# 359 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 362 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_assign(const basic_string & __rcs);
# 365 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_mutate(size_type __pos, size_type __len1, const _CharT * __s, size_type __len2);
# 369 "/usr/include/c++/5/bits/basic_string.h" 3
void _M_erase(size_type __pos, size_type __n);
# 379 "/usr/include/c++/5/bits/basic_string.h" 3
public: basic_string() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _M_dataplus(this->_M_local_data())
# 384 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 390 "/usr/include/c++/5/bits/basic_string.h" 3
explicit basic_string(const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 392 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 398 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str) : _M_dataplus(this->_M_local_data(), __str._M_get_allocator())
# 400 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct((__str._M_data()), (__str._M_data()) + __str.length()); }
# 410 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 411 "/usr/include/c++/5/bits/basic_string.h" 3
__n = npos) : _M_dataplus(this->_M_local_data())
# 413 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 414 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "basic_string::basic_string");
# 416 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 417 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 426 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, size_type __pos, size_type
# 427 "/usr/include/c++/5/bits/basic_string.h" 3
__n, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 429 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 430 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *__start = (__str._M_data()) + __str._M_check(__pos, "string::string");
# 432 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__start, __start + __str._M_limit(__pos, __n));
# 433 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 444 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, size_type __n, const _Alloc &
# 445 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 447 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, __s + __n); }
# 454 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const _CharT *__s, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 456 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__s, (__s) ? __s + traits_type::length(__s) : (__s + npos)); }
# 464 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(size_type __n, _CharT __c, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 466 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__n, __c); }
# 476 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(basic_string &&__str) noexcept : _M_dataplus(this->_M_local_data(), std::move(__str._M_get_allocator()))
# 478 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 479 "/usr/include/c++/5/bits/basic_string.h" 3
if (__str._M_is_local())
# 480 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 481 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __str.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 483 "/usr/include/c++/5/bits/basic_string.h" 3
} else
# 485 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 486 "/usr/include/c++/5/bits/basic_string.h" 3
_M_data((__str._M_data()));
# 487 "/usr/include/c++/5/bits/basic_string.h" 3
_M_capacity(__str.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 488 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 493 "/usr/include/c++/5/bits/basic_string.h" 3
_M_length(__str.length());
# 494 "/usr/include/c++/5/bits/basic_string.h" 3
(__str._M_data(__str._M_local_data()));
# 495 "/usr/include/c++/5/bits/basic_string.h" 3
__str._M_set_length(0);
# 496 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 503 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(initializer_list< _CharT> __l, const _Alloc &__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 505 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct((__l.begin()), (__l.end())); }
# 507 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(const basic_string &__str, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 509 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__str.begin(), __str.end()); }
# 511 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(basic_string &&__str, const _Alloc &__a) : _M_dataplus(this->_M_local_data(), __a)
# 513 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 514 "/usr/include/c++/5/bits/basic_string.h" 3
if (__str.get_allocator() == __a) {
# 515 "/usr/include/c++/5/bits/basic_string.h" 3
(*this) = std::move(__str); } else {
# 517 "/usr/include/c++/5/bits/basic_string.h" 3
_M_construct(__str.begin(), __str.end()); }
# 518 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 529 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 530 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> >
# 534 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc &
# 535 "/usr/include/c++/5/bits/basic_string.h" 3
__a = _Alloc()) : _M_dataplus(this->_M_local_data(), __a)
# 537 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_construct(__beg, __end); }
# 542 "/usr/include/c++/5/bits/basic_string.h" 3
~basic_string()
# 543 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_dispose(); }
# 550 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const basic_string &__str)
# 551 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__str)); }
# 558 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(const _CharT *__s)
# 559 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign(__s)); }
# 569 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(_CharT __c)
# 570 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 571 "/usr/include/c++/5/bits/basic_string.h" 3
(this->assign(1, __c));
# 572 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 573 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 587 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(basic_string &&__str)
# 588 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 589 "/usr/include/c++/5/bits/basic_string.h" 3
this->swap(__str);
# 590 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 591 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 598 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator=(initializer_list< _CharT> __l)
# 599 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 600 "/usr/include/c++/5/bits/basic_string.h" 3
(this->assign((__l.begin()), (__l.size())));
# 601 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 602 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 611 "/usr/include/c++/5/bits/basic_string.h" 3
iterator begin() noexcept
# 612 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data())); }
# 619 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator begin() const noexcept
# 620 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data())); }
# 627 "/usr/include/c++/5/bits/basic_string.h" 3
iterator end() noexcept
# 628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((iterator)(_M_data() + this->size())); }
# 635 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator end() const noexcept
# 636 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)(_M_data() + this->size())); }
# 644 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rbegin() noexcept
# 645 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->end())); }
# 653 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rbegin() const noexcept
# 654 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 662 "/usr/include/c++/5/bits/basic_string.h" 3
reverse_iterator rend() noexcept
# 663 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 671 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator rend() const noexcept
# 672 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 680 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator cbegin() const noexcept
# 681 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)((this->_M_data()))); }
# 688 "/usr/include/c++/5/bits/basic_string.h" 3
const_iterator cend() const noexcept
# 689 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_iterator)((this->_M_data()) + this->size())); }
# 697 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator crbegin() const noexcept
# 698 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 706 "/usr/include/c++/5/bits/basic_string.h" 3
const_reverse_iterator crend() const noexcept
# 707 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 715 "/usr/include/c++/5/bits/basic_string.h" 3
size_type size() const noexcept
# 716 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 721 "/usr/include/c++/5/bits/basic_string.h" 3
size_type length() const noexcept
# 722 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_string_length; }
# 726 "/usr/include/c++/5/bits/basic_string.h" 3
size_type max_size() const noexcept
# 727 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (_Alloc_traits::max_size(this->_M_get_allocator()) - 1) / 2; }
# 740 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n, _CharT __c);
# 753 "/usr/include/c++/5/bits/basic_string.h" 3
void resize(size_type __n)
# 754 "/usr/include/c++/5/bits/basic_string.h" 3
{ (this->resize(__n, _CharT())); }
# 759 "/usr/include/c++/5/bits/basic_string.h" 3
void shrink_to_fit() noexcept
# 760 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 762 "/usr/include/c++/5/bits/basic_string.h" 3
if (capacity() > size())
# 763 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 764 "/usr/include/c++/5/bits/basic_string.h" 3
try
# 765 "/usr/include/c++/5/bits/basic_string.h" 3
{ reserve(0); }
# 766 "/usr/include/c++/5/bits/basic_string.h" 3
catch (...)
# 767 "/usr/include/c++/5/bits/basic_string.h" 3
{ }
# 768 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 770 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 778 "/usr/include/c++/5/bits/basic_string.h" 3
size_type capacity() const noexcept
# 779 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 780 "/usr/include/c++/5/bits/basic_string.h" 3
return (_M_is_local()) ? (size_type)(_S_local_capacity) : (__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 782 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 802 "/usr/include/c++/5/bits/basic_string.h" 3
void reserve(size_type __res_arg = 0);
# 808 "/usr/include/c++/5/bits/basic_string.h" 3
void clear() noexcept
# 809 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_set_length(0); }
# 816 "/usr/include/c++/5/bits/basic_string.h" 3
bool empty() const noexcept
# 817 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->size() == 0; }
# 831 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference operator[](size_type __pos) const noexcept
# 832 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 833 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 834 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 835 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 848 "/usr/include/c++/5/bits/basic_string.h" 3
reference operator[](size_type __pos)
# 849 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 852 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 854 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 855 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__pos];
# 856 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 869 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference at(size_type __n) const
# 870 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 871 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 877 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 890 "/usr/include/c++/5/bits/basic_string.h" 3
reference at(size_type __n)
# 891 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 892 "/usr/include/c++/5/bits/basic_string.h" 3
if (__n >= size()) {
# 893 "/usr/include/c++/5/bits/basic_string.h" 3
__throw_out_of_range_fmt("basic_string::at: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 897 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_data()[__n];
# 898 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 906 "/usr/include/c++/5/bits/basic_string.h" 3
reference front() noexcept
# 907 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](0); }
# 914 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference front() const noexcept
# 915 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](0); }
# 922 "/usr/include/c++/5/bits/basic_string.h" 3
reference back() noexcept
# 923 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](this->size() - 1); }
# 930 "/usr/include/c++/5/bits/basic_string.h" 3
const_reference back() const noexcept
# 931 "/usr/include/c++/5/bits/basic_string.h" 3
{ return operator[](this->size() - 1); }
# 941 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const basic_string &__str)
# 942 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__str)); }
# 950 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(const _CharT *__s)
# 951 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append(__s)); }
# 959 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(_CharT __c)
# 960 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 961 "/usr/include/c++/5/bits/basic_string.h" 3
this->push_back(__c);
# 962 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 963 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 972 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &operator+=(initializer_list< _CharT> __l)
# 973 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append((__l.begin()), (__l.size()))); }
# 982 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str)
# 983 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()), __str.size()); }
# 999 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const basic_string &__str, size_type __pos, size_type __n)
# 1000 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_append((__str._M_data()) + __str._M_check(__pos, "basic_string::append"), __str._M_limit(__pos, __n));
# 1002 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1011 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s, size_type __n)
# 1012 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1013 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1014 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1015 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1016 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1024 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(const _CharT *__s)
# 1025 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1026 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1027 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __n = traits_type::length(__s);
# 1028 "/usr/include/c++/5/bits/basic_string.h" 3
_M_check_length((size_type)0, __n, "basic_string::append");
# 1029 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_append(__s, __n);
# 1030 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1041 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(size_type __n, _CharT __c)
# 1042 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(this->size(), (size_type)0, __n, __c); }
# 1051 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &append(initializer_list< _CharT> __l)
# 1052 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->append((__l.begin()), (__l.size()))); }
# 1064 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1065 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1070 "/usr/include/c++/5/bits/basic_string.h" 3
append(_InputIterator __first, _InputIterator __last)
# 1071 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->end(), this->end(), __first, __last)); }
# 1078 "/usr/include/c++/5/bits/basic_string.h" 3
void push_back(_CharT __c)
# 1079 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1080 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 1081 "/usr/include/c++/5/bits/basic_string.h" 3
if ((__size + 1) > this->capacity()) {
# 1082 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_mutate(__size, (size_type)0, 0, (size_type)1); }
# 1083 "/usr/include/c++/5/bits/basic_string.h" 3
traits_type::assign((this->_M_data())[__size], __c);
# 1084 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_set_length(__size + 1);
# 1085 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1093 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str)
# 1094 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1095 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_assign(__str);
# 1096 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1097 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1109 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(basic_string &&__str)
# 1110 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1113 "/usr/include/c++/5/bits/basic_string.h" 3
return (*this) = std::move(__str);
# 1114 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1131 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const basic_string &__str, size_type __pos, size_type __n)
# 1132 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace((size_type)0, this->size(), (__str._M_data()) + __str._M_check(__pos, "basic_string::assign"), __str._M_limit(__pos, __n));
# 1134 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1147 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s, size_type __n)
# 1148 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1149 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1150 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, __n);
# 1151 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1163 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(const _CharT *__s)
# 1164 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1165 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1166 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace((size_type)0, this->size(), __s, traits_type::length(__s));
# 1168 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1180 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(size_type __n, _CharT __c)
# 1181 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux((size_type)0, this->size(), __n, __c); }
# 1192 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1193 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1198 "/usr/include/c++/5/bits/basic_string.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 1199 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(this->begin(), this->end(), __first, __last)); }
# 1208 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &assign(initializer_list< _CharT> __l)
# 1209 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->assign((__l.begin()), (__l.size()))); }
# 1229 "/usr/include/c++/5/bits/basic_string.h" 3
iterator insert(const_iterator __p, size_type __n, _CharT __c)
# 1230 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1231 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1232 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1233 "/usr/include/c++/5/bits/basic_string.h" 3
(this->replace(__p, __p, __n, __c));
# 1234 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1235 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1270 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1271 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > iterator
# 1273 "/usr/include/c++/5/bits/basic_string.h" 3
insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
# 1274 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1275 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1276 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1277 "/usr/include/c++/5/bits/basic_string.h" 3
(this->replace(__p, __p, __beg, __end));
# 1278 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1279 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1307 "/usr/include/c++/5/bits/basic_string.h" 3
void insert(iterator __p, initializer_list< _CharT> __l)
# 1308 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1309 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1310 "/usr/include/c++/5/bits/basic_string.h" 3
(this->insert(__p - this->begin(), (__l.begin()), (__l.size())));
# 1311 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1327 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str)
# 1328 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()), __str.size()));
# 1329 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1350 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos1, const basic_string &__str, size_type
# 1351 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n)
# 1352 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, (size_type)0, (__str._M_data()) + __str._M_check(__pos2, "basic_string::insert"), __str._M_limit(__pos2, __n)));
# 1354 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s, size_type __n)
# 1374 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, (size_type)0, __s, __n)); }
# 1392 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, const _CharT *__s)
# 1393 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1394 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1395 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, (size_type)0, __s, traits_type::length(__s)));
# 1397 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1416 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &insert(size_type __pos, size_type __n, _CharT __c)
# 1417 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::insert"), (size_type)0, __n, __c);
# 1418 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1434 "/usr/include/c++/5/bits/basic_string.h" 3
iterator insert(__const_iterator __p, _CharT __c)
# 1435 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1436 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1437 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __p - this->begin();
# 1438 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_aux(__pos, (size_type)0, (size_type)1, __c);
# 1439 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1440 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1458 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &erase(size_type __pos = 0, size_type __n = npos)
# 1459 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(_M_check(__pos, "basic_string::erase"), _M_limit(__pos, __n));
# 1462 "/usr/include/c++/5/bits/basic_string.h" 3
return *this;
# 1463 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1474 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __position)
# 1475 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1478 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __position - this->begin();
# 1479 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, (size_type)1);
# 1480 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)(_M_data() + __pos));
# 1481 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1493 "/usr/include/c++/5/bits/basic_string.h" 3
iterator erase(__const_iterator __first, __const_iterator __last)
# 1494 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1496 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1497 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __pos = __first - this->begin();
# 1498 "/usr/include/c++/5/bits/basic_string.h" 3
this->_M_erase(__pos, __last - __first);
# 1499 "/usr/include/c++/5/bits/basic_string.h" 3
return ((iterator)((this->_M_data()) + __pos));
# 1500 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1509 "/usr/include/c++/5/bits/basic_string.h" 3
void pop_back() noexcept
# 1510 "/usr/include/c++/5/bits/basic_string.h" 3
{ _M_erase(size() - 1, 1); }
# 1531 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n, const basic_string &__str)
# 1532 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos, __n, (__str._M_data()), __str.size())); }
# 1553 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1554 "/usr/include/c++/5/bits/basic_string.h" 3
__pos2, size_type __n2)
# 1555 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__pos1, __n1, (__str._M_data()) + __str._M_check(__pos2, "basic_string::replace"), __str._M_limit(__pos2, __n2)));
# 1557 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1578 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1579 "/usr/include/c++/5/bits/basic_string.h" 3
__n2)
# 1580 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1581 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1582 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __s, __n2);
# 1584 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1603 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, const _CharT *__s)
# 1604 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1605 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1606 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__pos, __n1, __s, traits_type::length(__s)));
# 1607 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1627 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
# 1628 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(_M_check(__pos, "basic_string::replace"), _M_limit(__pos, __n1), __n2, __c);
# 1629 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1645 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const basic_string &
# 1646 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 1647 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__str._M_data()), __str.size())); }
# 1665 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1666 "/usr/include/c++/5/bits/basic_string.h" 3
__s, size_type __n)
# 1667 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1669 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1670 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __s, __n));
# 1671 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1687 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *__s)
# 1688 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1689 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1690 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1, __i2, __s, traits_type::length(__s)));
# 1691 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1708 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, size_type __n, _CharT
# 1709 "/usr/include/c++/5/bits/basic_string.h" 3
__c)
# 1710 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1712 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1713 "/usr/include/c++/5/bits/basic_string.h" 3
return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __c);
# 1714 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1732 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator, class
# 1733 "/usr/include/c++/5/bits/basic_string.h" 3
 = _RequireInputIter< _InputIterator> > basic_string &
# 1735 "/usr/include/c++/5/bits/basic_string.h" 3
replace(const_iterator __i1, const_iterator __i2, _InputIterator
# 1736 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _InputIterator __k2)
# 1737 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1739 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1740 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1741 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->_M_replace_dispatch(__i1, __i2, __k1, __k2, __false_type()));
# 1743 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1765 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, _CharT *
# 1766 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, _CharT *__k2)
# 1767 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1769 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1770 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1771 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1773 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1776 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const _CharT *
# 1777 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const _CharT *__k2)
# 1778 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1780 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1781 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1782 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, __k1, __k2 - __k1));
# 1784 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1787 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, iterator
# 1788 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, iterator __k2)
# 1789 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1791 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1792 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1793 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1795 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1798 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(__const_iterator __i1, __const_iterator __i2, const_iterator
# 1799 "/usr/include/c++/5/bits/basic_string.h" 3
__k1, const_iterator __k2)
# 1800 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1802 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1803 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1804 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->replace(__i1 - this->begin(), __i2 - __i1, (__k1.base()), __k2 - __k1));
# 1806 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1823 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &replace(const_iterator __i1, const_iterator __i2, initializer_list< _CharT>
# 1824 "/usr/include/c++/5/bits/basic_string.h" 3
__l)
# 1825 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->replace(__i1, __i2, (__l.begin()), (__l.end()))); }
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
private:
# 1829 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _Integer> basic_string &
# 1831 "/usr/include/c++/5/bits/basic_string.h" 3
_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _Integer
# 1832 "/usr/include/c++/5/bits/basic_string.h" 3
__n, _Integer __val, __true_type)
# 1833 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_replace_aux(__i1 - this->begin(), __i2 - __i1, __n, __val); }
# 1835 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _InputIterator> basic_string &_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator __k1, _InputIterator __k2, __false_type);
# 1842 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT __c);
# 1846 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_replace(size_type __pos, size_type __len1, const _CharT * __s, const size_type __len2);
# 1850 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string &_M_append(const _CharT * __s, size_type __n);
# 1867 "/usr/include/c++/5/bits/basic_string.h" 3
public: size_type copy(_CharT * __s, size_type __n, size_type __pos = 0) const;
# 1877 "/usr/include/c++/5/bits/basic_string.h" 3
void swap(basic_string & __s) noexcept;
# 1887 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *c_str() const noexcept
# 1888 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1897 "/usr/include/c++/5/bits/basic_string.h" 3
const _CharT *data() const noexcept
# 1898 "/usr/include/c++/5/bits/basic_string.h" 3
{ return _M_data(); }
# 1904 "/usr/include/c++/5/bits/basic_string.h" 3
allocator_type get_allocator() const noexcept
# 1905 "/usr/include/c++/5/bits/basic_string.h" 3
{ return this->_M_get_allocator(); }
# 1920 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT * __s, size_type __pos, size_type __n) const;
# 1933 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const basic_string &__str, size_type __pos = 0) const noexcept
# 1935 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__str.data(), __pos, __str.size())); }
# 1948 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(const _CharT *__s, size_type __pos = 0) const
# 1949 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 1950 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 1951 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find(__s, __pos, traits_type::length(__s)));
# 1952 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 1965 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find(_CharT __c, size_type __pos = 0) const noexcept;
# 1978 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const basic_string &__str, size_type __pos = npos) const noexcept
# 1980 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__str.data(), __pos, __str.size())); }
# 1995 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT * __s, size_type __pos, size_type __n) const;
# 2008 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(const _CharT *__s, size_type __pos = npos) const
# 2009 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2010 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2011 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->rfind(__s, __pos, traits_type::length(__s)));
# 2012 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2025 "/usr/include/c++/5/bits/basic_string.h" 3
size_type rfind(_CharT __c, size_type __pos = npos) const noexcept;
# 2039 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const basic_string &__str, size_type __pos = 0) const noexcept
# 2041 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_of(__str.data(), __pos, __str.size())); }
# 2056 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2069 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(const _CharT *__s, size_type __pos = 0) const
# 2070 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2071 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2072 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_of(__s, __pos, traits_type::length(__s)));
# 2073 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2088 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_of(_CharT __c, size_type __pos = 0) const noexcept
# 2089 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find(__c, __pos)); }
# 2103 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const basic_string &__str, size_type __pos = npos) const noexcept
# 2105 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_of(__str.data(), __pos, __str.size())); }
# 2120 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2133 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(const _CharT *__s, size_type __pos = npos) const
# 2134 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2135 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2136 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_of(__s, __pos, traits_type::length(__s)));
# 2137 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2152 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_of(_CharT __c, size_type __pos = npos) const noexcept
# 2153 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->rfind(__c, __pos)); }
# 2166 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const basic_string &__str, size_type __pos = 0) const noexcept
# 2168 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_first_not_of(__str.data(), __pos, __str.size())); }
# 2183 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2197 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(const _CharT *__s, size_type __pos = 0) const
# 2198 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2199 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2200 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_first_not_of(__s, __pos, traits_type::length(__s)));
# 2201 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2214 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_first_not_of(_CharT __c, size_type __pos = 0) const noexcept;
# 2229 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const basic_string &__str, size_type __pos = npos) const noexcept
# 2231 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (this->find_last_not_of(__str.data(), __pos, __str.size())); }
# 2246 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT * __s, size_type __pos, size_type __n) const;
# 2260 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(const _CharT *__s, size_type __pos = npos) const
# 2261 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2262 "/usr/include/c++/5/bits/basic_string.h" 3
;
# 2263 "/usr/include/c++/5/bits/basic_string.h" 3
return (this->find_last_not_of(__s, __pos, traits_type::length(__s)));
# 2264 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2277 "/usr/include/c++/5/bits/basic_string.h" 3
size_type find_last_not_of(_CharT __c, size_type __pos = npos) const noexcept;
# 2293 "/usr/include/c++/5/bits/basic_string.h" 3
basic_string substr(size_type __pos = 0, size_type __n = npos) const
# 2294 "/usr/include/c++/5/bits/basic_string.h" 3
{ return basic_string(*this, _M_check(__pos, "basic_string::substr"), __n);
# 2295 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2312 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const basic_string &__str) const
# 2313 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 2314 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __size = this->size();
# 2315 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __osize = __str.size();
# 2316 "/usr/include/c++/5/bits/basic_string.h" 3
const size_type __len = std::min(__size, __osize);
# 2318 "/usr/include/c++/5/bits/basic_string.h" 3
int __r = traits_type::compare(_M_data(), __str.data(), __len);
# 2319 "/usr/include/c++/5/bits/basic_string.h" 3
if (!__r) {
# 2320 "/usr/include/c++/5/bits/basic_string.h" 3
__r = (_S_compare)(__size, __osize); }
# 2321 "/usr/include/c++/5/bits/basic_string.h" 3
return __r;
# 2322 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 2344 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n, const basic_string & __str) const;
# 2370 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos1, size_type __n1, const basic_string & __str, size_type __pos2, size_type __n2) const;
# 2388 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(const _CharT * __s) const;
# 2412 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s) const;
# 2439 "/usr/include/c++/5/bits/basic_string.h" 3
int compare(size_type __pos, size_type __n1, const _CharT * __s, size_type __n2) const;
# 2441 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 2442 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4781 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4783 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4784 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4785 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4786 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4787 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4788 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4789 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4797 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(const _CharT * __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4808 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> & __rhs);
# 4818 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4820 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4821 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4822 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4823 "/usr/include/c++/5/bits/basic_string.h" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> __str(__lhs);
# 4824 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append(__rhs));
# 4825 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4826 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4834 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4836 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, _CharT __rhs)
# 4837 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4838 "/usr/include/c++/5/bits/basic_string.h" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 4839 "/usr/include/c++/5/bits/basic_string.h" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 4840 "/usr/include/c++/5/bits/basic_string.h" 3
__string_type __str(__lhs);
# 4841 "/usr/include/c++/5/bits/basic_string.h" 3
(__str.append((__size_type)1, __rhs));
# 4842 "/usr/include/c++/5/bits/basic_string.h" 3
return __str;
# 4843 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4846 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4848 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4849 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4850 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(__rhs))); }
# 4852 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4854 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4855 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4856 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, __lhs))); }
# 4858 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4860 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4861 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4862 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 4863 "/usr/include/c++/5/bits/basic_string.h" 3
const auto __size = (__lhs.size()) + (__rhs.size());
# 4864 "/usr/include/c++/5/bits/basic_string.h" 3
const bool __cond = (__size > (__lhs.capacity())) && (__size <= (__rhs.capacity()));
# 4866 "/usr/include/c++/5/bits/basic_string.h" 3
return __cond ? std::move((__rhs.insert(0, __lhs))) : std::move((__lhs.append(__rhs)));
# 4868 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4870 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4872 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(const _CharT *__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4873 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4874 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, __lhs))); }
# 4876 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4878 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(_CharT __lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &&
# 4879 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4880 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__rhs.insert(0, 1, __lhs))); }
# 4882 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4884 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, const _CharT *
# 4885 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4886 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(__rhs))); }
# 4888 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 4890 "/usr/include/c++/5/bits/basic_string.h" 3
operator+(__cxx11::basic_string< _CharT, _Traits, _Alloc> &&__lhs, _CharT
# 4891 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4892 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::move((__lhs.append(1, __rhs))); }
# 4902 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4904 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4905 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4906 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4908 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT> inline typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, bool> ::__type
# 4911 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__lhs, const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &
# 4912 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4913 "/usr/include/c++/5/bits/basic_string.h" 3
{ return ((__lhs.size()) == (__rhs.size())) && (!std::char_traits< _CharT> ::compare((__lhs.data()), (__rhs.data()), (__lhs.size())));
# 4915 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 4923 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4925 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4926 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4927 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) == 0; }
# 4935 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4937 "/usr/include/c++/5/bits/basic_string.h" 3
operator==(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4938 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4939 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) == 0; }
# 4948 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4950 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4951 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4952 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4960 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4962 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4963 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4964 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4972 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4974 "/usr/include/c++/5/bits/basic_string.h" 3
operator!=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 4975 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4976 "/usr/include/c++/5/bits/basic_string.h" 3
{ return !(__lhs == __rhs); }
# 4985 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4987 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 4988 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 4989 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 4997 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 4999 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5000 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5001 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) < 0; }
# 5009 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5011 "/usr/include/c++/5/bits/basic_string.h" 3
operator<(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5012 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5013 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) > 0; }
# 5022 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5024 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5025 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5026 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5034 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5036 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5037 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5038 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) > 0; }
# 5046 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5048 "/usr/include/c++/5/bits/basic_string.h" 3
operator>(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5049 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5050 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) < 0; }
# 5059 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5061 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5062 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5063 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5071 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5073 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5074 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5075 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) <= 0; }
# 5083 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5085 "/usr/include/c++/5/bits/basic_string.h" 3
operator<=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5086 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5087 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) >= 0; }
# 5096 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5098 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5099 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5100 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5108 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5110 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, const _CharT *
# 5111 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5112 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__lhs.compare(__rhs)) >= 0; }
# 5120 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline bool
# 5122 "/usr/include/c++/5/bits/basic_string.h" 3
operator>=(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5123 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5124 "/usr/include/c++/5/bits/basic_string.h" 3
{ return (__rhs.compare(__lhs)) <= 0; }
# 5133 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline void
# 5135 "/usr/include/c++/5/bits/basic_string.h" 3
swap(__cxx11::basic_string< _CharT, _Traits, _Alloc> &__lhs, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5136 "/usr/include/c++/5/bits/basic_string.h" 3
__rhs)
# 5137 "/usr/include/c++/5/bits/basic_string.h" 3
{ (__lhs.swap(__rhs)); }
# 5152 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str);
# 5159 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 5170 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_ostream< _CharT, _Traits> &
# 5172 "/usr/include/c++/5/bits/basic_string.h" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5173 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5174 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5177 "/usr/include/c++/5/bits/basic_string.h" 3
return __ostream_insert(__os, (__str.data()), (__str.size()));
# 5178 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5193 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &getline(basic_istream< _CharT, _Traits> & __is, __cxx11::basic_string< _CharT, _Traits, _Alloc> & __str, _CharT __delim);
# 5210 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5212 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5213 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5214 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str, (__is.widen('\n'))); }
# 5218 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5220 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &&__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5221 "/usr/include/c++/5/bits/basic_string.h" 3
__str, _CharT __delim)
# 5222 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str, __delim); }
# 5225 "/usr/include/c++/5/bits/basic_string.h" 3
template< class _CharT, class _Traits, class _Alloc> inline basic_istream< _CharT, _Traits> &
# 5227 "/usr/include/c++/5/bits/basic_string.h" 3
getline(basic_istream< _CharT, _Traits> &&__is, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 5228 "/usr/include/c++/5/bits/basic_string.h" 3
__str)
# 5229 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::getline(__is, __str); }
# 5234 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< char> &getline(basic_istream< char> & __in, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 5240 "/usr/include/c++/5/bits/basic_string.h" 3
template<> basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __in, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 5245 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 96 "/usr/include/c++/5/cstdio" 3
namespace std {
# 98 "/usr/include/c++/5/cstdio" 3
using ::FILE;
# 99 "/usr/include/c++/5/cstdio" 3
using ::fpos_t;
# 101 "/usr/include/c++/5/cstdio" 3
using ::clearerr;
# 102 "/usr/include/c++/5/cstdio" 3
using ::fclose;
# 103 "/usr/include/c++/5/cstdio" 3
using ::feof;
# 104 "/usr/include/c++/5/cstdio" 3
using ::ferror;
# 105 "/usr/include/c++/5/cstdio" 3
using ::fflush;
# 106 "/usr/include/c++/5/cstdio" 3
using ::fgetc;
# 107 "/usr/include/c++/5/cstdio" 3
using ::fgetpos;
# 108 "/usr/include/c++/5/cstdio" 3
using ::fgets;
# 109 "/usr/include/c++/5/cstdio" 3
using ::fopen;
# 110 "/usr/include/c++/5/cstdio" 3
using ::fprintf;
# 111 "/usr/include/c++/5/cstdio" 3
using ::fputc;
# 112 "/usr/include/c++/5/cstdio" 3
using ::fputs;
# 113 "/usr/include/c++/5/cstdio" 3
using ::fread;
# 114 "/usr/include/c++/5/cstdio" 3
using ::freopen;
# 115 "/usr/include/c++/5/cstdio" 3
using ::fscanf;
# 116 "/usr/include/c++/5/cstdio" 3
using ::fseek;
# 117 "/usr/include/c++/5/cstdio" 3
using ::fsetpos;
# 118 "/usr/include/c++/5/cstdio" 3
using ::ftell;
# 119 "/usr/include/c++/5/cstdio" 3
using ::fwrite;
# 120 "/usr/include/c++/5/cstdio" 3
using ::getc;
# 121 "/usr/include/c++/5/cstdio" 3
using ::getchar;
# 124 "/usr/include/c++/5/cstdio" 3
using ::gets;
# 126 "/usr/include/c++/5/cstdio" 3
using ::perror;
# 127 "/usr/include/c++/5/cstdio" 3
using ::printf;
# 128 "/usr/include/c++/5/cstdio" 3
using ::putc;
# 129 "/usr/include/c++/5/cstdio" 3
using ::putchar;
# 130 "/usr/include/c++/5/cstdio" 3
using ::puts;
# 131 "/usr/include/c++/5/cstdio" 3
using ::remove;
# 132 "/usr/include/c++/5/cstdio" 3
using ::rename;
# 133 "/usr/include/c++/5/cstdio" 3
using ::rewind;
# 134 "/usr/include/c++/5/cstdio" 3
using ::scanf;
# 135 "/usr/include/c++/5/cstdio" 3
using ::setbuf;
# 136 "/usr/include/c++/5/cstdio" 3
using ::setvbuf;
# 137 "/usr/include/c++/5/cstdio" 3
using ::sprintf;
# 138 "/usr/include/c++/5/cstdio" 3
using ::sscanf;
# 139 "/usr/include/c++/5/cstdio" 3
using ::tmpfile;
# 141 "/usr/include/c++/5/cstdio" 3
using ::tmpnam;
# 143 "/usr/include/c++/5/cstdio" 3
using ::ungetc;
# 144 "/usr/include/c++/5/cstdio" 3
using ::vfprintf;
# 145 "/usr/include/c++/5/cstdio" 3
using ::vprintf;
# 146 "/usr/include/c++/5/cstdio" 3
using ::vsprintf;
# 147 "/usr/include/c++/5/cstdio" 3
}
# 157 "/usr/include/c++/5/cstdio" 3
namespace __gnu_cxx {
# 175 "/usr/include/c++/5/cstdio" 3
using ::snprintf;
# 176 "/usr/include/c++/5/cstdio" 3
using ::vfscanf;
# 177 "/usr/include/c++/5/cstdio" 3
using ::vscanf;
# 178 "/usr/include/c++/5/cstdio" 3
using ::vsnprintf;
# 179 "/usr/include/c++/5/cstdio" 3
using ::vsscanf;
# 181 "/usr/include/c++/5/cstdio" 3
}
# 183 "/usr/include/c++/5/cstdio" 3
namespace std {
# 185 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::snprintf;
# 186 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vfscanf;
# 187 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vscanf;
# 188 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsnprintf;
# 189 "/usr/include/c++/5/cstdio" 3
using __gnu_cxx::vsscanf;
# 190 "/usr/include/c++/5/cstdio" 3
}
# 31 "/usr/include/errno.h" 3
extern "C" {
# 50 "/usr/include/x86_64-linux-gnu/bits/errno.h" 3
extern int *__errno_location() throw() __attribute((const));
# 54 "/usr/include/errno.h" 3
extern char *program_invocation_name, *program_invocation_short_name;
# 58 "/usr/include/errno.h" 3
}
# 68 "/usr/include/errno.h" 3
typedef int error_t;
# 46 "/usr/include/c++/5/ext/string_conversions.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 51 "/usr/include/c++/5/ext/string_conversions.h" 3
template< class _TRet, class _Ret = _TRet, class _CharT, class ...
# 52 "/usr/include/c++/5/ext/string_conversions.h" 3
_Base> _Ret
# 54 "/usr/include/c++/5/ext/string_conversions.h" 3
__stoa(_TRet (*__convf)(const _CharT *, _CharT **, _Base ...), const char *
# 55 "/usr/include/c++/5/ext/string_conversions.h" 3
__name, const _CharT *__str, std::size_t *__idx, _Base ...
# 56 "/usr/include/c++/5/ext/string_conversions.h" 3
__base)
# 57 "/usr/include/c++/5/ext/string_conversions.h" 3
{
# 58 "/usr/include/c++/5/ext/string_conversions.h" 3
_Ret __ret;
# 60 "/usr/include/c++/5/ext/string_conversions.h" 3
_CharT *__endptr;
# 61 "/usr/include/c++/5/ext/string_conversions.h" 3
(*__errno_location()) = 0;
# 62 "/usr/include/c++/5/ext/string_conversions.h" 3
const _TRet __tmp = __convf(__str, &__endptr, __base...);
# 64 "/usr/include/c++/5/ext/string_conversions.h" 3
if (__endptr == __str) {
# 65 "/usr/include/c++/5/ext/string_conversions.h" 3
std::__throw_invalid_argument(__name); } else {
# 66 "/usr/include/c++/5/ext/string_conversions.h" 3
if (((*__errno_location()) == 34) || (std::__are_same< _Ret, int> ::__value && ((__tmp < __numeric_traits< int> ::__min) || (__tmp > __numeric_traits< int> ::__max)))) {
# 70 "/usr/include/c++/5/ext/string_conversions.h" 3
std::__throw_out_of_range(__name); } else {
# 72 "/usr/include/c++/5/ext/string_conversions.h" 3
__ret = __tmp; } }
# 74 "/usr/include/c++/5/ext/string_conversions.h" 3
if (__idx) {
# 75 "/usr/include/c++/5/ext/string_conversions.h" 3
(*__idx) = (__endptr - __str); }
# 77 "/usr/include/c++/5/ext/string_conversions.h" 3
return __ret;
# 78 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 81 "/usr/include/c++/5/ext/string_conversions.h" 3
template< class _String, class _CharT = typename _String::value_type> _String
# 83 "/usr/include/c++/5/ext/string_conversions.h" 3
__to_xstring(int (*__convf)(_CharT *, std::size_t, const _CharT *, __builtin_va_list), std::size_t
# 84 "/usr/include/c++/5/ext/string_conversions.h" 3
__n, const _CharT *
# 85 "/usr/include/c++/5/ext/string_conversions.h" 3
__fmt, ...)
# 86 "/usr/include/c++/5/ext/string_conversions.h" 3
{
# 89 "/usr/include/c++/5/ext/string_conversions.h" 3
_CharT *__s = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __n));
# 92 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_list __args;
# 93 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_start((__args),__fmt);
# 95 "/usr/include/c++/5/ext/string_conversions.h" 3
const int __len = __convf(__s, __n, __fmt, __args);
# 97 "/usr/include/c++/5/ext/string_conversions.h" 3
__builtin_va_end(__args);
# 99 "/usr/include/c++/5/ext/string_conversions.h" 3
return _String(__s, __s + __len);
# 100 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 103 "/usr/include/c++/5/ext/string_conversions.h" 3
}
# 5251 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 5254 "/usr/include/c++/5/bits/basic_string.h" 3
inline namespace __cxx11 {
# 5258 "/usr/include/c++/5/bits/basic_string.h" 3
inline int stoi(const string &__str, size_t *__idx = 0, int __base = 10)
# 5259 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa< long, int> (&std::strtol, "stoi", __str.c_str(), __idx, __base);
# 5260 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5263 "/usr/include/c++/5/bits/basic_string.h" 3
inline long stol(const string &__str, size_t *__idx = 0, int __base = 10)
# 5264 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(), __idx, __base);
# 5265 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5268 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long stoul(const string &__str, size_t *__idx = 0, int __base = 10)
# 5269 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(), __idx, __base);
# 5270 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5273 "/usr/include/c++/5/bits/basic_string.h" 3
inline long long stoll(const string &__str, size_t *__idx = 0, int __base = 10)
# 5274 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(), __idx, __base);
# 5275 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5278 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long long stoull(const string &__str, size_t *__idx = 0, int __base = 10)
# 5279 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(), __idx, __base);
# 5280 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5284 "/usr/include/c++/5/bits/basic_string.h" 3
inline float stof(const string &__str, size_t *__idx = 0)
# 5285 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
# 5288 "/usr/include/c++/5/bits/basic_string.h" 3
inline double stod(const string &__str, size_t *__idx = 0)
# 5289 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
# 5292 "/usr/include/c++/5/bits/basic_string.h" 3
inline long double stold(const string &__str, size_t *__idx = 0)
# 5293 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
# 5299 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(int __val)
# 5300 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(int), "%d", __val);
# 5301 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5304 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned __val)
# 5305 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned), "%u", __val);
# 5307 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5310 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long __val)
# 5311 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(long), "%ld", __val);
# 5312 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5315 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned long __val)
# 5316 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned long), "%lu", __val);
# 5318 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5321 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long long __val)
# 5322 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(long long), "%lld", __val);
# 5324 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5327 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(unsigned long long __val)
# 5328 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, (4) * sizeof(unsigned long long), "%llu", __val);
# 5330 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5333 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(float __val)
# 5334 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5335 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< float> ::__max_exponent10 + 20);
# 5337 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%f", __val);
# 5339 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5342 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(double __val)
# 5343 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5344 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< double> ::__max_exponent10 + 20);
# 5346 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%f", __val);
# 5348 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5351 "/usr/include/c++/5/bits/basic_string.h" 3
inline string to_string(long double __val)
# 5352 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5353 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< long double> ::__max_exponent10 + 20);
# 5355 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< char, char_traits< char> , allocator< char> > > (&std::vsnprintf, __n, "%Lf", __val);
# 5357 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5361 "/usr/include/c++/5/bits/basic_string.h" 3
inline int stoi(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5362 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa< long, int> (&std::wcstol, "stoi", __str.c_str(), __idx, __base);
# 5363 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5366 "/usr/include/c++/5/bits/basic_string.h" 3
inline long stol(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5367 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstol, "stol", __str.c_str(), __idx, __base);
# 5368 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5371 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long stoul(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5372 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoul, "stoul", __str.c_str(), __idx, __base);
# 5373 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5376 "/usr/include/c++/5/bits/basic_string.h" 3
inline long long stoll(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5377 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoll, "stoll", __str.c_str(), __idx, __base);
# 5378 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5381 "/usr/include/c++/5/bits/basic_string.h" 3
inline unsigned long long stoull(const wstring &__str, size_t *__idx = 0, int __base = 10)
# 5382 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstoull, "stoull", __str.c_str(), __idx, __base);
# 5383 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5387 "/usr/include/c++/5/bits/basic_string.h" 3
inline float stof(const wstring &__str, size_t *__idx = 0)
# 5388 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstof, "stof", __str.c_str(), __idx); }
# 5391 "/usr/include/c++/5/bits/basic_string.h" 3
inline double stod(const wstring &__str, size_t *__idx = 0)
# 5392 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstod, "stod", __str.c_str(), __idx); }
# 5395 "/usr/include/c++/5/bits/basic_string.h" 3
inline long double stold(const wstring &__str, size_t *__idx = 0)
# 5396 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__stoa(&std::wcstold, "stold", __str.c_str(), __idx); }
# 5401 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(int __val)
# 5402 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(int), L"\x25\x64", __val);
# 5403 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5406 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned __val)
# 5407 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned), L"\x25\x75", __val);
# 5409 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5412 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long __val)
# 5413 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(long), L"\x25\x6c\x64", __val);
# 5414 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5417 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned long __val)
# 5418 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned long), L"\x25\x6c\x75", __val);
# 5420 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5423 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long long __val)
# 5424 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(long long), L"\x25\x6c\x6c\x64", __val);
# 5426 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5429 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(unsigned long long __val)
# 5430 "/usr/include/c++/5/bits/basic_string.h" 3
{ return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, (4) * sizeof(unsigned long long), L"\x25\x6c\x6c\x75", __val);
# 5432 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5435 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(float __val)
# 5436 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5437 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< float> ::__max_exponent10 + 20);
# 5439 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x66", __val);
# 5441 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5444 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(double __val)
# 5445 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5446 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< double> ::__max_exponent10 + 20);
# 5448 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x66", __val);
# 5450 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5453 "/usr/include/c++/5/bits/basic_string.h" 3
inline wstring to_wstring(long double __val)
# 5454 "/usr/include/c++/5/bits/basic_string.h" 3
{
# 5455 "/usr/include/c++/5/bits/basic_string.h" 3
const int __n = (__gnu_cxx::__numeric_traits_floating< long double> ::__max_exponent10 + 20);
# 5457 "/usr/include/c++/5/bits/basic_string.h" 3
return __gnu_cxx::__to_xstring< basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > (&std::vswprintf, __n, L"\x25\x4c\x66", __val);
# 5459 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5463 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5465 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 37 "/usr/include/c++/5/bits/hash_bytes.h" 3
namespace std {
# 47 "/usr/include/c++/5/bits/hash_bytes.h" 3
size_t _Hash_bytes(const void * __ptr, size_t __len, size_t __seed);
# 54 "/usr/include/c++/5/bits/hash_bytes.h" 3
size_t _Fnv_hash_bytes(const void * __ptr, size_t __len, size_t __seed);
# 57 "/usr/include/c++/5/bits/hash_bytes.h" 3
}
# 37 "/usr/include/c++/5/bits/functional_hash.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Result, class _Arg>
# 50 "/usr/include/c++/5/bits/functional_hash.h" 3
struct __hash_base {
# 52 "/usr/include/c++/5/bits/functional_hash.h" 3
typedef _Result result_type;
# 53 "/usr/include/c++/5/bits/functional_hash.h" 3
typedef _Arg argument_type;
# 54 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 57 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> struct hash;
# 61 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp>
# 62 "/usr/include/c++/5/bits/functional_hash.h" 3
struct hash< _Tp *> : public __hash_base< unsigned long, _Tp *> {
# 65 "/usr/include/c++/5/bits/functional_hash.h" 3
::std::size_t operator()(_Tp *__p) const noexcept
# 66 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return reinterpret_cast< ::std::size_t>(__p); }
# 67 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 80 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< bool> : public __hash_base< unsigned long, bool> { size_t operator()(bool __val) const noexcept { return static_cast< size_t>(__val); } };
# 83 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char> : public __hash_base< unsigned long, char> { size_t operator()(char __val) const noexcept { return static_cast< size_t>(__val); } };
# 86 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< signed char> : public __hash_base< unsigned long, signed char> { size_t operator()(signed char __val) const noexcept { return static_cast< size_t>(__val); } };
# 89 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned char> : public __hash_base< unsigned long, unsigned char> { size_t operator()(unsigned char __val) const noexcept { return static_cast< size_t>(__val); } };
# 92 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< wchar_t> : public __hash_base< unsigned long, wchar_t> { size_t operator()(wchar_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 95 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char16_t> : public __hash_base< unsigned long, char16_t> { size_t operator()(char16_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 98 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< char32_t> : public __hash_base< unsigned long, char32_t> { size_t operator()(char32_t __val) const noexcept { return static_cast< size_t>(__val); } };
# 101 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< short> : public __hash_base< unsigned long, short> { size_t operator()(short __val) const noexcept { return static_cast< size_t>(__val); } };
# 104 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< int> : public __hash_base< unsigned long, int> { size_t operator()(int __val) const noexcept { return static_cast< size_t>(__val); } };
# 107 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long> : public __hash_base< unsigned long, long> { size_t operator()(long __val) const noexcept { return static_cast< size_t>(__val); } };
# 110 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long long> : public __hash_base< unsigned long, long long> { size_t operator()(long long __val) const noexcept { return static_cast< size_t>(__val); } };
# 113 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned short> : public __hash_base< unsigned long, unsigned short> { size_t operator()(unsigned short __val) const noexcept { return static_cast< size_t>(__val); } };
# 116 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned> : public __hash_base< unsigned long, unsigned> { size_t operator()(unsigned __val) const noexcept { return static_cast< size_t>(__val); } };
# 119 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned long> : public __hash_base< unsigned long, unsigned long> { size_t operator()(unsigned long __val) const noexcept { return static_cast< size_t>(__val); } };
# 122 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< unsigned long long> : public __hash_base< unsigned long, unsigned long long> { size_t operator()(unsigned long long __val) const noexcept { return static_cast< size_t>(__val); } };
# 126 "/usr/include/c++/5/bits/functional_hash.h" 3
struct _Hash_impl {
# 129 "/usr/include/c++/5/bits/functional_hash.h" 3
static size_t hash(const void *__ptr, size_t __clength, size_t
# 130 "/usr/include/c++/5/bits/functional_hash.h" 3
__seed = static_cast< size_t>(3339675911UL))
# 131 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return _Hash_bytes(__ptr, __clength, __seed); }
# 133 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 135 "/usr/include/c++/5/bits/functional_hash.h" 3
hash(const _Tp &__val)
# 136 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val)); }
# 138 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 140 "/usr/include/c++/5/bits/functional_hash.h" 3
__hash_combine(const _Tp &__val, size_t __hash)
# 141 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val), __hash); }
# 142 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 144 "/usr/include/c++/5/bits/functional_hash.h" 3
struct _Fnv_hash_impl {
# 147 "/usr/include/c++/5/bits/functional_hash.h" 3
static size_t hash(const void *__ptr, size_t __clength, size_t
# 148 "/usr/include/c++/5/bits/functional_hash.h" 3
__seed = static_cast< size_t>(2166136261UL))
# 149 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return _Fnv_hash_bytes(__ptr, __clength, __seed); }
# 151 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 153 "/usr/include/c++/5/bits/functional_hash.h" 3
hash(const _Tp &__val)
# 154 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val)); }
# 156 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Tp> static size_t
# 158 "/usr/include/c++/5/bits/functional_hash.h" 3
__hash_combine(const _Tp &__val, size_t __hash)
# 159 "/usr/include/c++/5/bits/functional_hash.h" 3
{ return hash(&__val, sizeof(__val), __hash); }
# 160 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 164 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< float> : public __hash_base< unsigned long, float> {
# 167 "/usr/include/c++/5/bits/functional_hash.h" 3
size_t operator()(float __val) const noexcept
# 168 "/usr/include/c++/5/bits/functional_hash.h" 3
{
# 170 "/usr/include/c++/5/bits/functional_hash.h" 3
return (__val != (0.0F)) ? std::_Hash_impl::hash(__val) : (0);
# 171 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 172 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 176 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< double> : public __hash_base< unsigned long, double> {
# 179 "/usr/include/c++/5/bits/functional_hash.h" 3
size_t operator()(double __val) const noexcept
# 180 "/usr/include/c++/5/bits/functional_hash.h" 3
{
# 182 "/usr/include/c++/5/bits/functional_hash.h" 3
return (__val != (0.0)) ? std::_Hash_impl::hash(__val) : (0);
# 183 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 184 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 188 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct hash< long double> : public __hash_base< unsigned long, long double> {
# 191 "/usr/include/c++/5/bits/functional_hash.h" 3
__attribute((__pure__)) size_t
# 192 "/usr/include/c++/5/bits/functional_hash.h" 3
operator()(long double __val) const noexcept;
# 193 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 201 "/usr/include/c++/5/bits/functional_hash.h" 3
template< class _Hash>
# 202 "/usr/include/c++/5/bits/functional_hash.h" 3
struct __is_fast_hash : public true_type {
# 203 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 206 "/usr/include/c++/5/bits/functional_hash.h" 3
template<> struct __is_fast_hash< hash< long double> > : public false_type {
# 207 "/usr/include/c++/5/bits/functional_hash.h" 3
};
# 210 "/usr/include/c++/5/bits/functional_hash.h" 3
}
# 5473 "/usr/include/c++/5/bits/basic_string.h" 3
namespace std __attribute((__visibility__("default"))) {
# 5482 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char, char_traits< char> , allocator< char> > > : public __hash_base< unsigned long, __cxx11::basic_string< char, char_traits< char> , allocator< char> > > {
# 5486 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::string &__s) const noexcept
# 5487 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length()); }
# 5488 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5491 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char, char_traits< char> , allocator< char> > > > : public false_type {
# 5492 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5497 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > {
# 5501 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::wstring &__s) const noexcept
# 5502 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(wchar_t));
# 5503 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5504 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5507 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > > > : public false_type {
# 5508 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5515 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > {
# 5519 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::u16string &__s) const noexcept
# 5520 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(char16_t));
# 5521 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5522 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5525 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char16_t, char_traits< char16_t> , allocator< char16_t> > > > : public false_type {
# 5526 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5530 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct hash< __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > : public __hash_base< unsigned long, __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > {
# 5534 "/usr/include/c++/5/bits/basic_string.h" 3
size_t operator()(const __cxx11::u32string &__s) const noexcept
# 5535 "/usr/include/c++/5/bits/basic_string.h" 3
{ return std::_Hash_impl::hash(__s.data(), __s.length() * sizeof(char32_t));
# 5536 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 5537 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5540 "/usr/include/c++/5/bits/basic_string.h" 3
template<> struct __is_fast_hash< hash< __cxx11::basic_string< char32_t, char_traits< char32_t> , allocator< char32_t> > > > : public false_type {
# 5541 "/usr/include/c++/5/bits/basic_string.h" 3
};
# 5583 "/usr/include/c++/5/bits/basic_string.h" 3
}
# 46 "/usr/include/c++/5/bits/basic_string.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> const typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 54 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::npos;
# 56 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 59 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::swap(basic_string &__s) noexcept
# 60 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 61 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this == (&__s)) {
# 62 "/usr/include/c++/5/bits/basic_string.tcc" 3
return; }
# 67 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__alloc_swap< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::_S_do_it(this->_M_get_allocator(), __s._M_get_allocator());
# 70 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_is_local()) {
# 71 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 72 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 73 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length() && __s.length())
# 74 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 75 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __tmp_data[(_S_local_capacity) + 1];
# 76 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__tmp_data, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 78 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 80 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __tmp_data, (_S_local_capacity) + 1);
# 82 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 83 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s.length())
# 84 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 85 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 87 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 88 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_set_length(0);
# 89 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 90 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 91 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (length())
# 92 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 93 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 95 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(length());
# 96 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(0);
# 97 "/usr/include/c++/5/bits/basic_string.tcc" 3
return;
# 98 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } }
# 99 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 101 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 102 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 103 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 105 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 106 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf));
# 107 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__tmp_capacity);
# 108 "/usr/include/c++/5/bits/basic_string.tcc" 3
} } else
# 110 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 111 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_capacity = __cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity;
# 112 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s._M_is_local())
# 113 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 114 "/usr/include/c++/5/bits/basic_string.tcc" 3
traits_type::copy(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, __s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf, (_S_local_capacity) + 1);
# 116 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(_M_data()));
# 117 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_local_buf);
# 118 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 120 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 121 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp_ptr = _M_data();
# 122 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data((__s._M_data()));
# 123 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__s._M_data(__tmp_ptr));
# 124 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__s.__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_allocated_capacity);
# 125 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 126 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_capacity(__tmp_capacity);
# 127 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 129 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __tmp_length = length();
# 130 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_length(__s.length());
# 131 "/usr/include/c++/5/bits/basic_string.tcc" 3
__s._M_length(__tmp_length);
# 132 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 134 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::pointer
# 137 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_create(size_type &__capacity, size_type __old_capacity)
# 138 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 141 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 142 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_length_error("basic_string::_M_create"); }
# 147 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__capacity > __old_capacity) && (__capacity < (2 * __old_capacity)))
# 148 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 149 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (2 * __old_capacity);
# 151 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__capacity > max_size()) {
# 152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = max_size(); }
# 153 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 157 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _Alloc_traits::allocate(this->_M_get_allocator(), __capacity + 1);
# 158 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 164 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 168 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, input_iterator_tag)
# 170 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 171 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __len = (0);
# 172 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __capacity = ((size_type)(_S_local_capacity));
# 174 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__beg != __end) && (__len < __capacity))
# 175 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 176 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 177 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 178 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 180 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 181 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 182 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__beg != __end)
# 183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 184 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == __capacity)
# 185 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 187 "/usr/include/c++/5/bits/basic_string.tcc" 3
__capacity = (__len + 1);
# 188 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __another = _M_create(__capacity, __len);
# 189 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__another, _M_data(), __len));
# 190 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 191 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__another);
# 192 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__capacity);
# 193 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 194 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_M_data()[__len++]) = (*__beg);
# 195 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__beg;
# 196 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 197 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 198 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 199 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 200 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 201 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 202 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 204 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__len);
# 205 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 207 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 208 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InIterator> void
# 211 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(_InIterator __beg, _InIterator __end, forward_iterator_tag)
# 213 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 215 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__gnu_cxx::__is_null_pointer(__beg) && (__beg != __end)) {
# 216 "/usr/include/c++/5/bits/basic_string.tcc" 3
std::__throw_logic_error("basic_string::_M_construct null not valid"); }
# 219 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __dnew = static_cast< size_type>(std::distance(__beg, __end));
# 221 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__dnew > ((size_type)(_S_local_capacity)))
# 222 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 223 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__dnew, (size_type)0));
# 224 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__dnew);
# 225 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 228 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 229 "/usr/include/c++/5/bits/basic_string.tcc" 3
{ (this->_S_copy_chars(_M_data(), __beg, __end)); }
# 230 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 231 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 232 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 233 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 234 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 236 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__dnew);
# 237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 239 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 242 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_construct(size_type __n, _CharT __c)
# 243 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 244 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n > ((size_type)(_S_local_capacity)))
# 245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 246 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(_M_create(__n, (size_type)0));
# 247 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__n);
# 248 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 250 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 251 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign(_M_data(), __n, __c)); }
# 253 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__n);
# 254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 256 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 259 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_assign(const basic_string &__str)
# 260 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 261 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (this != (&__str))
# 262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 263 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __rsize = __str.length();
# 264 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 266 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize > __capacity)
# 267 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 268 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = __rsize;
# 269 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__new_capacity, __capacity);
# 270 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 271 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 272 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 273 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 275 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__rsize) {
# 276 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(_M_data(), (__str._M_data()), __rsize)); }
# 278 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(__rsize);
# 279 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 280 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 282 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 285 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::reserve(size_type __res)
# 286 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 288 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res < length()) {
# 289 "/usr/include/c++/5/bits/basic_string.tcc" 3
__res = length(); }
# 291 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __capacity = capacity();
# 292 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__res != __capacity)
# 293 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 294 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__res > __capacity) || (__res > ((size_type)(_S_local_capacity))))
# 296 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 297 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __tmp = _M_create(__res, __capacity);
# 298 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__tmp, _M_data(), length() + 1));
# 299 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 300 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__tmp);
# 301 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__res);
# 302 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 303 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!_M_is_local())
# 304 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 305 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(this->_M_local_data(), _M_data(), length() + 1));
# 306 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_destroy(__capacity);
# 307 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(this->_M_local_data());
# 308 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 309 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 310 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 312 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 315 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_mutate(size_type __pos, size_type __len1, const _CharT *__s, size_type
# 316 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 317 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 318 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __len1;
# 320 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __new_capacity = (length() + __len2) - __len1;
# 321 "/usr/include/c++/5/bits/basic_string.tcc" 3
pointer __r = _M_create(__new_capacity, capacity());
# 323 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos) {
# 324 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r, _M_data(), __pos)); }
# 325 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s && __len2) {
# 326 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__r + __pos, __s, __len2)); }
# 327 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much) {
# 328 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((__r + __pos) + __len2, (_M_data() + __pos) + __len1, __how_much)); }
# 331 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_dispose();
# 332 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_data(__r);
# 333 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_capacity(__new_capacity);
# 334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 336 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 339 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_erase(size_type __pos, size_type __n)
# 340 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 341 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (length() - __pos) - __n;
# 343 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && __n) {
# 344 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(_M_data() + __pos, (_M_data() + __pos) + __n, __how_much)); }
# 346 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_set_length(length() - __n);
# 347 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 349 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> void
# 352 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::resize(size_type __n, _CharT __c)
# 353 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 354 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 355 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size < __n) {
# 356 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->append(__n - __size, __c)); } else {
# 357 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n < __size) {
# 358 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_erase(__n, __size - __n); } }
# 359 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 361 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_append(const _CharT *__s, size_type __n)
# 365 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = __n + this->size();
# 368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len <= this->capacity())
# 369 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 370 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 371 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy((this->_M_data()) + this->size(), __s, __n)); }
# 372 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 374 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(this->size(), (size_type)0, __s, __n); }
# 376 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__len);
# 377 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 378 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 380 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc>
# 381 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _InputIterator> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 384 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_dispatch(const_iterator __i1, const_iterator __i2, _InputIterator
# 385 "/usr/include/c++/5/bits/basic_string.tcc" 3
__k1, _InputIterator __k2, __false_type)
# 387 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 388 "/usr/include/c++/5/bits/basic_string.tcc" 3
const basic_string __s(__k1, __k2);
# 389 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n1 = __i2 - __i1;
# 390 "/usr/include/c++/5/bits/basic_string.tcc" 3
return _M_replace(__i1 - this->begin(), __n1, (__s._M_data()), __s.size());
# 392 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 394 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 397 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace_aux(size_type __pos1, size_type __n1, size_type __n2, _CharT
# 398 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c)
# 399 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 400 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
# 402 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 403 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __n2) - __n1;
# 405 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 406 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 407 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos1;
# 409 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos1) - __n1;
# 410 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__n1 != __n2)) {
# 411 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __n2, __p + __n1, __how_much)); }
# 412 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 414 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos1, __n1, 0, __n2); }
# 416 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n2) {
# 417 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_assign((this->_M_data()) + __pos1, __n2, __c)); }
# 419 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 420 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 421 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 423 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::_M_replace(size_type __pos, size_type __len1, const _CharT *__s, const typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _CharT> ::other> ::size_type
# 427 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len2)
# 428 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check_length(__len1, __len2, "basic_string::_M_replace");
# 431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __old_size = this->size();
# 432 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __new_size = (__old_size + __len2) - __len1;
# 434 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__new_size <= this->capacity())
# 435 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 436 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT *__p = (this->_M_data()) + __pos;
# 438 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __how_much = (__old_size - __pos) - __len1;
# 439 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_M_disjunct(__s))
# 440 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 441 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 442 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 443 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2) {
# 444 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, __s, __len2)); }
# 445 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else
# 447 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 449 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 && (__len2 <= __len1)) {
# 450 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); }
# 451 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__how_much && (__len1 != __len2)) {
# 452 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p + __len2, __p + __len1, __how_much)); }
# 453 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len2 > __len1)
# 454 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((__s + __len2) <= (__p + __len1)) {
# 456 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __len2)); } else {
# 457 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__s >= (__p + __len1)) {
# 458 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p, (__s + __len2) - __len1, __len2)); } else
# 460 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 461 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __nleft = (__p + __len1) - __s;
# 462 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_move(__p, __s, __nleft));
# 463 "/usr/include/c++/5/bits/basic_string.tcc" 3
(this->_S_copy(__p + __nleft, __p + __len2, __len2 - __nleft));
# 465 "/usr/include/c++/5/bits/basic_string.tcc" 3
} }
# 466 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 467 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 468 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 470 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_mutate(__pos, __len1, __s, __len2); }
# 472 "/usr/include/c++/5/bits/basic_string.tcc" 3
this->_M_set_length(__new_size);
# 473 "/usr/include/c++/5/bits/basic_string.tcc" 3
return *this;
# 474 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 476 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 479 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::copy(_CharT *__s, size_type __n, size_type __pos) const
# 480 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 481 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::copy");
# 482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 483 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 484 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n) {
# 485 "/usr/include/c++/5/bits/basic_string.tcc" 3
(_S_copy)(__s, _M_data() + __pos, __n); }
# 487 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __n;
# 488 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1149 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1151 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(const _CharT *__lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1152 "/usr/include/c++/5/bits/basic_string.tcc" 3
__rhs)
# 1153 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1154 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1155 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1156 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1157 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = _Traits::length(__lhs);
# 1158 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1159 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + (__rhs.size())));
# 1160 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__lhs, __len));
# 1161 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1162 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1163 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1165 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> __cxx11::basic_string< _CharT, _Traits, _Alloc>
# 1167 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator+(_CharT __lhs, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__rhs)
# 1168 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1169 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1170 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1171 "/usr/include/c++/5/bits/basic_string.tcc" 3
__string_type __str;
# 1172 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __len = (__rhs.size());
# 1173 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.reserve(__len + 1));
# 1174 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append((__size_type)1, __lhs));
# 1175 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__rhs));
# 1176 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __str;
# 1177 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1179 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1182 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(const _CharT *__s, size_type __pos, size_type __n) const
# 1183 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1184 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1185 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1186 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1188 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n == 0) {
# 1189 "/usr/include/c++/5/bits/basic_string.tcc" 3
return (__pos <= __size) ? __pos : npos; }
# 1191 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1192 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1193 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos <= (__size - __n); ++__pos) {
# 1194 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(__data[__pos], __s[0]) && (traits_type::compare((__data + __pos) + 1, __s + 1, __n - 1) == 0)) {
# 1197 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1198 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1199 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1200 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1202 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1205 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find(_CharT __c, size_type __pos) const noexcept
# 1206 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1207 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __ret = npos;
# 1208 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1209 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__pos < __size)
# 1210 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1211 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1212 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __n = __size - __pos;
# 1213 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__data + __pos, __n, __c);
# 1214 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1215 "/usr/include/c++/5/bits/basic_string.tcc" 3
__ret = (__p - __data); }
# 1216 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1217 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __ret;
# 1218 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1220 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1223 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(const _CharT *__s, size_type __pos, size_type __n) const
# 1224 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1225 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1226 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1227 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__n <= __size)
# 1228 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1229 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos = std::min((size_type)(__size - __n), __pos);
# 1230 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__data = _M_data();
# 1231 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1232 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1233 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::compare(__data + __pos, __s, __n) == 0) {
# 1234 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1235 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1236 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__pos--) > 0);
# 1237 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1238 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1239 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1241 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1244 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::rfind(_CharT __c, size_type __pos) const noexcept
# 1245 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1246 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1247 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1248 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1249 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1250 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1251 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (++__size; (__size--) > 0;) {
# 1252 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::eq(_M_data()[__size], __c)) {
# 1253 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; } }
# 1254 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1255 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1256 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1258 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1261 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1262 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1263 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1264 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __n && (__pos < this->size()); ++__pos)
# 1265 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1266 "/usr/include/c++/5/bits/basic_string.tcc" 3
const _CharT *__p = traits_type::find(__s, __n, _M_data()[__pos]);
# 1267 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__p) {
# 1268 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; }
# 1269 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1270 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1271 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1273 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1276 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1277 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1278 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1279 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1280 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size && __n)
# 1281 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1282 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1283 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1284 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1285 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1286 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (traits_type::find(__s, __n, _M_data()[__size])) {
# 1287 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1288 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1289 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__size--) != 0);
# 1290 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1291 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1292 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1294 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1297 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1298 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1299 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1300 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1301 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__pos])) {
# 1302 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1303 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1304 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1306 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1309 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_first_not_of(_CharT __c, size_type __pos) const noexcept
# 1310 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1311 "/usr/include/c++/5/bits/basic_string.tcc" 3
for (; __pos < this->size(); ++__pos) {
# 1312 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__pos], __c)) {
# 1313 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __pos; } }
# 1314 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1315 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1317 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1320 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(const _CharT *__s, size_type __pos, size_type __n) const
# 1321 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1322 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1323 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1324 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1325 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1326 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1327 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1328 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1329 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1330 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::find(__s, __n, _M_data()[__size])) {
# 1331 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1332 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1333 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1334 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1335 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1336 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1338 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type
# 1341 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::find_last_not_of(_CharT __c, size_type __pos) const noexcept
# 1342 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1343 "/usr/include/c++/5/bits/basic_string.tcc" 3
size_type __size = this->size();
# 1344 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__size)
# 1345 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1346 "/usr/include/c++/5/bits/basic_string.tcc" 3
if ((--__size) > __pos) {
# 1347 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size = __pos; }
# 1348 "/usr/include/c++/5/bits/basic_string.tcc" 3
do
# 1349 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1350 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!traits_type::eq(_M_data()[__size], __c)) {
# 1351 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __size; }
# 1352 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1353 "/usr/include/c++/5/bits/basic_string.tcc" 3
while (__size--);
# 1354 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1355 "/usr/include/c++/5/bits/basic_string.tcc" 3
return npos;
# 1356 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1358 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1361 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n, const basic_string &__str) const
# 1362 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1363 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1364 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n = _M_limit(__pos, __n);
# 1365 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = __str.size();
# 1366 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n, __osize);
# 1367 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
# 1368 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1369 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n, __osize); }
# 1370 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1371 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1373 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1376 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos1, size_type __n1, const basic_string &__str, size_type
# 1377 "/usr/include/c++/5/bits/basic_string.tcc" 3
__pos2, size_type __n2) const
# 1378 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1379 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos1, "basic_string::compare");
# 1380 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str._M_check(__pos2, "basic_string::compare");
# 1381 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos1, __n1);
# 1382 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2 = __str._M_limit(__pos2, __n2);
# 1383 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1384 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos1, __str.data() + __pos2, __len);
# 1386 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1387 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1388 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1389 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1391 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1394 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(const _CharT *__s) const
# 1395 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1396 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1397 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __size = this->size();
# 1398 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1399 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__size, __osize);
# 1400 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data(), __s, __len);
# 1401 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1402 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__size, __osize); }
# 1403 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1404 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1406 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1409 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s) const
# 1410 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1411 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1412 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1413 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1414 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __osize = traits_type::length(__s);
# 1415 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __osize);
# 1416 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1417 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1418 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __osize); }
# 1419 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1420 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1422 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> int
# 1425 "/usr/include/c++/5/bits/basic_string.tcc" 3
__cxx11::basic_string< _CharT, _Traits, _Alloc> ::compare(size_type __pos, size_type __n1, const _CharT *__s, size_type
# 1426 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n2) const
# 1427 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1428 "/usr/include/c++/5/bits/basic_string.tcc" 3
;
# 1429 "/usr/include/c++/5/bits/basic_string.tcc" 3
_M_check(__pos, "basic_string::compare");
# 1430 "/usr/include/c++/5/bits/basic_string.tcc" 3
__n1 = _M_limit(__pos, __n1);
# 1431 "/usr/include/c++/5/bits/basic_string.tcc" 3
const size_type __len = std::min(__n1, __n2);
# 1432 "/usr/include/c++/5/bits/basic_string.tcc" 3
int __r = traits_type::compare(_M_data() + __pos, __s, __len);
# 1433 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__r) {
# 1434 "/usr/include/c++/5/bits/basic_string.tcc" 3
__r = (_S_compare)(__n1, __n2); }
# 1435 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __r;
# 1436 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1439 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1441 "/usr/include/c++/5/bits/basic_string.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1442 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str)
# 1443 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1444 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1445 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1446 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1447 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1448 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1449 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1450 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename ctype< _CharT> ::ctype_base __ctype_base;
# 1452 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1453 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1454 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 1455 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1456 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1457 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1458 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1460 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1461 "/usr/include/c++/5/bits/basic_string.tcc" 3
_CharT __buf[128];
# 1462 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __len = (0);
# 1463 "/usr/include/c++/5/bits/basic_string.tcc" 3
const streamsize __w = (__in.width());
# 1464 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__w > (0)) ? static_cast< __size_type>(__w) : (__str.max_size());
# 1466 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1467 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1468 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1470 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(__ctype_base::space, _Traits::to_char_type(__c)))))
# 1474 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1475 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__len == (sizeof(__buf) / sizeof(_CharT)))
# 1476 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1477 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, sizeof(__buf) / sizeof(_CharT)));
# 1478 "/usr/include/c++/5/bits/basic_string.tcc" 3
__len = 0;
# 1479 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1480 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__buf[__len++]) = _Traits::to_char_type(__c);
# 1481 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1482 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1483 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1484 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.append(__buf, __len));
# 1486 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1487 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; }
# 1488 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.width(0));
# 1489 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1490 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1491 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1492 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1493 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1494 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1495 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1496 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1500 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1501 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1502 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1504 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1505 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1506 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1507 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1508 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1509 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1511 "/usr/include/c++/5/bits/basic_string.tcc" 3
template< class _CharT, class _Traits, class _Alloc> basic_istream< _CharT, _Traits> &
# 1513 "/usr/include/c++/5/bits/basic_string.tcc" 3
getline(basic_istream< _CharT, _Traits> &__in, __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 1514 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str, _CharT __delim)
# 1515 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1516 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1517 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef __cxx11::basic_string< _CharT, _Traits, _Alloc> __string_type;
# 1518 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::ios_base __ios_base;
# 1519 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1520 "/usr/include/c++/5/bits/basic_string.tcc" 3
typedef typename __cxx11::basic_string< _CharT, _Traits, _Alloc> ::size_type __size_type;
# 1522 "/usr/include/c++/5/bits/basic_string.tcc" 3
__size_type __extracted = (0);
# 1523 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __size_type __n = (__str.max_size());
# 1524 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::ios_base::iostate __err = (__ios_base::goodbit);
# 1525 "/usr/include/c++/5/bits/basic_string.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, true);
# 1526 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__cerb)
# 1527 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1528 "/usr/include/c++/5/bits/basic_string.tcc" 3
try
# 1529 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1530 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__str.erase());
# 1531 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __idelim = _Traits::to_int_type(__delim);
# 1532 "/usr/include/c++/5/bits/basic_string.tcc" 3
const __int_type __eof = _Traits::eof();
# 1533 "/usr/include/c++/5/bits/basic_string.tcc" 3
__int_type __c = ((__in.rdbuf())->sgetc());
# 1535 "/usr/include/c++/5/bits/basic_string.tcc" 3
while ((__extracted < __n) && (!_Traits::eq_int_type(__c, __eof)) && (!_Traits::eq_int_type(__c, __idelim)))
# 1538 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1539 "/usr/include/c++/5/bits/basic_string.tcc" 3
__str += _Traits::to_char_type(__c);
# 1540 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1541 "/usr/include/c++/5/bits/basic_string.tcc" 3
__c = ((__in.rdbuf())->snextc());
# 1542 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1544 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1545 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::eofbit; } else {
# 1546 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (_Traits::eq_int_type(__c, __idelim))
# 1547 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1548 "/usr/include/c++/5/bits/basic_string.tcc" 3
++__extracted;
# 1549 "/usr/include/c++/5/bits/basic_string.tcc" 3
((__in.rdbuf())->sbumpc());
# 1550 "/usr/include/c++/5/bits/basic_string.tcc" 3
} else {
# 1552 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; } }
# 1553 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1554 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 1555 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1556 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1557 "/usr/include/c++/5/bits/basic_string.tcc" 3
throw;
# 1558 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1559 "/usr/include/c++/5/bits/basic_string.tcc" 3
catch (...)
# 1560 "/usr/include/c++/5/bits/basic_string.tcc" 3
{
# 1564 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in._M_setstate(__ios_base::badbit));
# 1565 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1566 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1567 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (!__extracted) {
# 1568 "/usr/include/c++/5/bits/basic_string.tcc" 3
__err |= __ios_base::failbit; }
# 1569 "/usr/include/c++/5/bits/basic_string.tcc" 3
if (__err) {
# 1570 "/usr/include/c++/5/bits/basic_string.tcc" 3
(__in.setstate(__err)); }
# 1571 "/usr/include/c++/5/bits/basic_string.tcc" 3
return __in;
# 1572 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 1577 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< char, char_traits< char> , allocator< char> > ;
# 1578 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &operator>>(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1581 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< char> &operator<<(basic_ostream< char> & __os, const __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1584 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str, char __delim);
# 1587 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< char> &getline(basic_istream< char> & __is, __cxx11::basic_string< char, char_traits< char> , allocator< char> > & __str);
# 1592 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template class __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > ;
# 1593 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &operator>>(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1596 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_ostream< wchar_t> &operator<<(basic_ostream< wchar_t> & __os, const __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1599 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str, wchar_t __delim);
# 1602 "/usr/include/c++/5/bits/basic_string.tcc" 3
extern template basic_istream< wchar_t> &getline(basic_istream< wchar_t> & __is, __cxx11::basic_string< wchar_t, char_traits< wchar_t> , allocator< wchar_t> > & __str);
# 1609 "/usr/include/c++/5/bits/basic_string.tcc" 3
}
# 43 "/usr/include/c++/5/bits/locale_classes.h" 3
namespace std __attribute((__visibility__("default"))) {
# 62 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale {
# 67 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef int category;
# 70 "/usr/include/c++/5/bits/locale_classes.h" 3
class facet;
# 71 "/usr/include/c++/5/bits/locale_classes.h" 3
class id;
# 72 "/usr/include/c++/5/bits/locale_classes.h" 3
class _Impl;
# 74 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class facet;
# 75 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 77 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 81 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 85 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 98 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category none = 0;
# 99 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category ctype = (1L << 0);
# 100 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category numeric = (1L << 1);
# 101 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category collate = (1L << 2);
# 102 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category time = (1L << 3);
# 103 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category monetary = (1L << 4);
# 104 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category messages = (1L << 5);
# 105 "/usr/include/c++/5/bits/locale_classes.h" 3
static const category all = (((((ctype | numeric) | collate) | time) | monetary) | messages);
# 117 "/usr/include/c++/5/bits/locale_classes.h" 3
locale() throw();
# 126 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __other) throw();
# 137 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit locale(const char * __s);
# 151 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __base, const char * __s, category __cat);
# 163 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit locale(const __cxx11::string &__s) : locale(__s.c_str()) { }
# 177 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale &__base, const __cxx11::string &__s, category __cat) : locale(__base, __s.c_str(), __cat)
# 178 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 192 "/usr/include/c++/5/bits/locale_classes.h" 3
locale(const locale & __base, const locale & __add, category __cat);
# 205 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> locale(const locale & __other, _Facet * __f);
# 209 "/usr/include/c++/5/bits/locale_classes.h" 3
~locale() throw();
# 220 "/usr/include/c++/5/bits/locale_classes.h" 3
const locale &operator=(const locale & __other) throw();
# 234 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> locale combine(const locale & __other) const;
# 243 "/usr/include/c++/5/bits/locale_classes.h" 3
__attribute((__abi_tag__("cxx11" ))) __cxx11::string
# 245 "/usr/include/c++/5/bits/locale_classes.h" 3
name() const;
# 255 "/usr/include/c++/5/bits/locale_classes.h" 3
bool operator==(const locale & __other) const throw();
# 264 "/usr/include/c++/5/bits/locale_classes.h" 3
bool operator!=(const locale &__other) const throw()
# 265 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return !this->operator==(__other); }
# 282 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Char, class _Traits, class _Alloc> bool operator()(const __cxx11::basic_string< _Char, _Traits, _Alloc> & __s1, const __cxx11::basic_string< _Char, _Traits, _Alloc> & __s2) const;
# 299 "/usr/include/c++/5/bits/locale_classes.h" 3
static locale global(const locale & __loc);
# 305 "/usr/include/c++/5/bits/locale_classes.h" 3
static const locale &classic();
# 309 "/usr/include/c++/5/bits/locale_classes.h" 3
private: _Impl *_M_impl;
# 312 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Impl *_S_classic;
# 315 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Impl *_S_global;
# 321 "/usr/include/c++/5/bits/locale_classes.h" 3
static const char *const *const _S_categories;
# 333 "/usr/include/c++/5/bits/locale_classes.h" 3
enum { _S_categories_size = 12};
# 336 "/usr/include/c++/5/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 340 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit locale(_Impl *) throw();
# 343 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize();
# 346 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize_once() throw();
# 349 "/usr/include/c++/5/bits/locale_classes.h" 3
static category _S_normalize_category(category);
# 352 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_coalesce(const locale & __base, const locale & __add, category __cat);
# 355 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_twinned_facets[];
# 357 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 371 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::facet {
# 374 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 375 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 377 "/usr/include/c++/5/bits/locale_classes.h" 3
mutable _Atomic_word _M_refcount;
# 380 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_c_locale;
# 383 "/usr/include/c++/5/bits/locale_classes.h" 3
static const char _S_c_name[2];
# 386 "/usr/include/c++/5/bits/locale_classes.h" 3
static __gthread_once_t _S_once;
# 390 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_initialize_once();
# 403 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: explicit facet(size_t __refs = 0) throw() : _M_refcount((__refs) ? 1 : 0)
# 404 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 408 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual ~facet();
# 411 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_create_c_locale(__c_locale & __cloc, const char * __s, __c_locale __old = 0);
# 415 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_clone_c_locale(__c_locale & __cloc) throw();
# 418 "/usr/include/c++/5/bits/locale_classes.h" 3
static void _S_destroy_c_locale(__c_locale & __cloc);
# 421 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_lc_ctype_c_locale(__c_locale __cloc, const char * __s);
# 426 "/usr/include/c++/5/bits/locale_classes.h" 3
static __c_locale _S_get_c_locale();
# 428 "/usr/include/c++/5/bits/locale_classes.h" 3
__attribute((const)) static const char *
# 429 "/usr/include/c++/5/bits/locale_classes.h" 3
_S_get_c_name() throw();
# 433 "/usr/include/c++/5/bits/locale_classes.h" 3
private: void _M_add_reference() const throw()
# 434 "/usr/include/c++/5/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 437 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_remove_reference() const throw()
# 438 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 440 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 441 "/usr/include/c++/5/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 442 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 443 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 444 "/usr/include/c++/5/bits/locale_classes.h" 3
try
# 445 "/usr/include/c++/5/bits/locale_classes.h" 3
{ delete this; }
# 446 "/usr/include/c++/5/bits/locale_classes.h" 3
catch (...)
# 447 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 448 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 449 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 451 "/usr/include/c++/5/bits/locale_classes.h" 3
facet(const facet &);
# 454 "/usr/include/c++/5/bits/locale_classes.h" 3
facet &operator=(const facet &);
# 456 "/usr/include/c++/5/bits/locale_classes.h" 3
class __shim;
# 458 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet *_M_sso_shim(const id *) const;
# 459 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet *_M_cow_shim(const id *) const;
# 460 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 474 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::id {
# 477 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 478 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class _Impl;
# 480 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 484 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 491 "/usr/include/c++/5/bits/locale_classes.h" 3
mutable size_t _M_index;
# 494 "/usr/include/c++/5/bits/locale_classes.h" 3
static _Atomic_word _S_refcount;
# 497 "/usr/include/c++/5/bits/locale_classes.h" 3
void operator=(const id &);
# 499 "/usr/include/c++/5/bits/locale_classes.h" 3
id(const id &);
# 505 "/usr/include/c++/5/bits/locale_classes.h" 3
public: id() { }
# 508 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_id() const throw();
# 509 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 513 "/usr/include/c++/5/bits/locale_classes.h" 3
class locale::_Impl {
# 517 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class locale;
# 518 "/usr/include/c++/5/bits/locale_classes.h" 3
friend class facet;
# 520 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend bool has_facet(const locale &) throw();
# 524 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> friend const _Facet &use_facet(const locale &);
# 528 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Cache> friend struct __use_cache;
# 533 "/usr/include/c++/5/bits/locale_classes.h" 3
_Atomic_word _M_refcount;
# 534 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet **_M_facets;
# 535 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_facets_size;
# 536 "/usr/include/c++/5/bits/locale_classes.h" 3
const facet **_M_caches;
# 537 "/usr/include/c++/5/bits/locale_classes.h" 3
char **_M_names;
# 538 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_ctype[];
# 539 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_numeric[];
# 540 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_collate[];
# 541 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_time[];
# 542 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_monetary[];
# 543 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const _S_id_messages[];
# 544 "/usr/include/c++/5/bits/locale_classes.h" 3
static const id *const *const _S_facet_categories[];
# 547 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_add_reference() throw()
# 548 "/usr/include/c++/5/bits/locale_classes.h" 3
{ __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 551 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_remove_reference() throw()
# 552 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 554 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 555 "/usr/include/c++/5/bits/locale_classes.h" 3
if (__gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1) == 1)
# 556 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 557 "/usr/include/c++/5/bits/locale_classes.h" 3
;
# 558 "/usr/include/c++/5/bits/locale_classes.h" 3
try
# 559 "/usr/include/c++/5/bits/locale_classes.h" 3
{ delete this; }
# 560 "/usr/include/c++/5/bits/locale_classes.h" 3
catch (...)
# 561 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 562 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 563 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 565 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const _Impl &, size_t);
# 566 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const char *, size_t);
# 567 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(size_t) throw();
# 569 "/usr/include/c++/5/bits/locale_classes.h" 3
~_Impl() throw();
# 571 "/usr/include/c++/5/bits/locale_classes.h" 3
_Impl(const _Impl &);
# 574 "/usr/include/c++/5/bits/locale_classes.h" 3
void operator=(const _Impl &);
# 577 "/usr/include/c++/5/bits/locale_classes.h" 3
bool _M_check_same_name()
# 578 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 579 "/usr/include/c++/5/bits/locale_classes.h" 3
bool __ret = true;
# 580 "/usr/include/c++/5/bits/locale_classes.h" 3
if ((_M_names)[1]) {
# 582 "/usr/include/c++/5/bits/locale_classes.h" 3
for (size_t __i = (0); __ret && (__i < ((_S_categories_size) - 1)); ++__i) {
# 583 "/usr/include/c++/5/bits/locale_classes.h" 3
__ret = (__builtin_strcmp((_M_names)[__i], (_M_names)[__i + (1)]) == 0); } }
# 584 "/usr/include/c++/5/bits/locale_classes.h" 3
return __ret;
# 585 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 588 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_categories(const _Impl *, category);
# 591 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_category(const _Impl *, const id *const *);
# 594 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_replace_facet(const _Impl *, const id *);
# 597 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_install_facet(const id *, const facet *);
# 599 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> void
# 601 "/usr/include/c++/5/bits/locale_classes.h" 3
_M_init_facet(_Facet *__facet)
# 602 "/usr/include/c++/5/bits/locale_classes.h" 3
{ this->_M_install_facet(&_Facet::id, __facet); }
# 604 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _Facet> void
# 606 "/usr/include/c++/5/bits/locale_classes.h" 3
_M_init_facet_unchecked(_Facet *__facet)
# 607 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 608 "/usr/include/c++/5/bits/locale_classes.h" 3
(__facet->_M_add_reference());
# 609 "/usr/include/c++/5/bits/locale_classes.h" 3
((_M_facets)[(_Facet::id._M_id)()]) = __facet;
# 610 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 613 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_install_cache(const facet *, size_t);
# 615 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_init_extra(facet **);
# 616 "/usr/include/c++/5/bits/locale_classes.h" 3
void _M_init_extra(void *, void *, const char *, const char *);
# 617 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 632 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT>
# 633 "/usr/include/c++/5/bits/locale_classes.h" 3
class __cxx11::collate : public locale::facet {
# 639 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 640 "/usr/include/c++/5/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 646 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: __c_locale _M_c_locale_collate;
# 650 "/usr/include/c++/5/bits/locale_classes.h" 3
public: static locale::id id;
# 660 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate(size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_get_c_locale())
# 662 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 674 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_c_locale_collate(_S_clone_c_locale(__cloc))
# 676 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 691 "/usr/include/c++/5/bits/locale_classes.h" 3
int compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 692 "/usr/include/c++/5/bits/locale_classes.h" 3
__lo2, const _CharT *__hi2) const
# 693 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_compare(__lo1, __hi1, __lo2, __hi2); }
# 710 "/usr/include/c++/5/bits/locale_classes.h" 3
string_type transform(const _CharT *__lo, const _CharT *__hi) const
# 711 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_transform(__lo, __hi); }
# 724 "/usr/include/c++/5/bits/locale_classes.h" 3
long hash(const _CharT *__lo, const _CharT *__hi) const
# 725 "/usr/include/c++/5/bits/locale_classes.h" 3
{ return this->do_hash(__lo, __hi); }
# 729 "/usr/include/c++/5/bits/locale_classes.h" 3
int _M_compare(const _CharT *, const _CharT *) const throw();
# 732 "/usr/include/c++/5/bits/locale_classes.h" 3
size_t _M_transform(_CharT *, const _CharT *, size_t) const throw();
# 737 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: virtual ~collate()
# 738 "/usr/include/c++/5/bits/locale_classes.h" 3
{ _S_destroy_c_locale(_M_c_locale_collate); }
# 753 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual int do_compare(const _CharT * __lo1, const _CharT * __hi1, const _CharT * __lo2, const _CharT * __hi2) const;
# 767 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual string_type do_transform(const _CharT * __lo, const _CharT * __hi) const;
# 780 "/usr/include/c++/5/bits/locale_classes.h" 3
virtual long do_hash(const _CharT * __lo, const _CharT * __hi) const;
# 781 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 783 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT> locale::id
# 784 "/usr/include/c++/5/bits/locale_classes.h" 3
__cxx11::collate< _CharT> ::id;
# 789 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> int collate< char> ::_M_compare(const char *, const char *) const throw();
# 793 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> size_t collate< char> ::_M_transform(char *, const char *, size_t) const throw();
# 798 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> int collate< wchar_t> ::_M_compare(const wchar_t *, const wchar_t *) const throw();
# 802 "/usr/include/c++/5/bits/locale_classes.h" 3
template<> size_t collate< wchar_t> ::_M_transform(wchar_t *, const wchar_t *, size_t) const throw();
# 806 "/usr/include/c++/5/bits/locale_classes.h" 3
template< class _CharT>
# 807 "/usr/include/c++/5/bits/locale_classes.h" 3
class __cxx11::collate_byname : public collate< _CharT> {
# 812 "/usr/include/c++/5/bits/locale_classes.h" 3
public: typedef _CharT char_type;
# 813 "/usr/include/c++/5/bits/locale_classes.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 817 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate_byname(const char *__s, ::std::size_t __refs = 0) : ::std::__cxx11::collate< _CharT> (__refs)
# 819 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 820 "/usr/include/c++/5/bits/locale_classes.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 822 "/usr/include/c++/5/bits/locale_classes.h" 3
{
# 823 "/usr/include/c++/5/bits/locale_classes.h" 3
(this->_S_destroy_c_locale((this->_M_c_locale_collate)));
# 824 "/usr/include/c++/5/bits/locale_classes.h" 3
(this->_S_create_c_locale((this->_M_c_locale_collate), __s));
# 825 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 826 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 830 "/usr/include/c++/5/bits/locale_classes.h" 3
explicit collate_byname(const ::std::__cxx11::string &__s, ::std::size_t __refs = 0) : collate_byname(__s.c_str(), __refs)
# 831 "/usr/include/c++/5/bits/locale_classes.h" 3
{ }
# 836 "/usr/include/c++/5/bits/locale_classes.h" 3
protected: virtual ~collate_byname() { }
# 837 "/usr/include/c++/5/bits/locale_classes.h" 3
};
# 840 "/usr/include/c++/5/bits/locale_classes.h" 3
}
# 39 "/usr/include/c++/5/bits/locale_classes.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet>
# 45 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::locale(const locale &__other, _Facet *__f)
# 46 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 47 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(_M_impl) = (new _Impl(*(__other._M_impl), 1));
# 49 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 50 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ (_M_impl)->_M_install_facet(&_Facet::id, __f); }
# 51 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 52 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 53 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(_M_impl)->_M_remove_reference();
# 54 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 55 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 56 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] (((_M_impl)->_M_names)[0]);
# 57 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(((_M_impl)->_M_names)[0]) = (0);
# 58 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 60 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> locale
# 63 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::combine(const locale &__other) const
# 64 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 65 "/usr/include/c++/5/bits/locale_classes.tcc" 3
_Impl *__tmp = new _Impl(*(_M_impl), 1);
# 66 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 67 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 68 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__tmp->_M_replace_facet(__other._M_impl, &_Facet::id);
# 69 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 70 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 71 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 72 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__tmp->_M_remove_reference();
# 73 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 74 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 75 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return ((locale)(__tmp));
# 76 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 78 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT, class _Traits, class _Alloc> bool
# 81 "/usr/include/c++/5/bits/locale_classes.tcc" 3
locale::operator()(const __cxx11::basic_string< _CharT, _Traits, _Alloc> &__s1, const __cxx11::basic_string< _CharT, _Traits, _Alloc> &
# 82 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__s2) const
# 83 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 84 "/usr/include/c++/5/bits/locale_classes.tcc" 3
typedef __cxx11::collate< _CharT> __collate_type;
# 85 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const __collate_type &__collate = use_facet< __cxx11::collate< _CharT> > (*this);
# 86 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return (__collate.compare((__s1.data()), (__s1.data()) + (__s1.length()), (__s2.data()), (__s2.data()) + (__s2.length()))) < 0;
# 88 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 102 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> bool
# 104 "/usr/include/c++/5/bits/locale_classes.tcc" 3
has_facet(const locale &__loc) throw()
# 105 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 106 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 107 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 108 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return (__i < ((__loc._M_impl)->_M_facets_size)) && (dynamic_cast< const _Facet *>(__facets[__i]));
# 114 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 130 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _Facet> const _Facet &
# 132 "/usr/include/c++/5/bits/locale_classes.tcc" 3
use_facet(const locale &__loc)
# 133 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 134 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const size_t __i = (_Facet::id._M_id)();
# 135 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const locale::facet **__facets = (__loc._M_impl)->_M_facets;
# 136 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if ((__i >= ((__loc._M_impl)->_M_facets_size)) || (!(__facets[__i]))) {
# 137 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__throw_bad_cast(); }
# 139 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return dynamic_cast< const _Facet &>(*(__facets[__i]));
# 143 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 147 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> int
# 149 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::_M_compare(const _CharT *, const _CharT *) const throw()
# 150 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ return 0; }
# 153 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> size_t
# 155 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::_M_transform(_CharT *, const _CharT *, size_t) const throw()
# 156 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{ return 0; }
# 158 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> int
# 161 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_compare(const _CharT *__lo1, const _CharT *__hi1, const _CharT *
# 162 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__lo2, const _CharT *__hi2) const
# 163 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 166 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __one(__lo1, __hi1);
# 167 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __two(__lo2, __hi2);
# 169 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__p = (__one.c_str());
# 170 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__pend = (__one.data()) + (__one.length());
# 171 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__q = (__two.c_str());
# 172 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__qend = (__two.data()) + (__two.length());
# 177 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; ;)
# 178 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 179 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const int __res = _M_compare(__p, __q);
# 180 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__res) {
# 181 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return __res; }
# 183 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 184 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__q += char_traits< _CharT> ::length(__q);
# 185 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if ((__p == __pend) && (__q == __qend)) {
# 186 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return 0; } else {
# 187 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 188 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return -1; } else {
# 189 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__q == __qend) {
# 190 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return 1; } } }
# 192 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p++;
# 193 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__q++;
# 194 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 195 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 197 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> typename __cxx11::collate< _CharT> ::string_type
# 200 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_transform(const _CharT *__lo, const _CharT *__hi) const
# 201 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 202 "/usr/include/c++/5/bits/locale_classes.tcc" 3
string_type __ret;
# 205 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const string_type __str(__lo, __hi);
# 207 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__p = (__str.c_str());
# 208 "/usr/include/c++/5/bits/locale_classes.tcc" 3
const _CharT *__pend = (__str.data()) + (__str.length());
# 210 "/usr/include/c++/5/bits/locale_classes.tcc" 3
size_t __len = (__hi - __lo) * 2;
# 212 "/usr/include/c++/5/bits/locale_classes.tcc" 3
_CharT *__c = new _CharT [__len];
# 214 "/usr/include/c++/5/bits/locale_classes.tcc" 3
try
# 215 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 219 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; ;)
# 220 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 222 "/usr/include/c++/5/bits/locale_classes.tcc" 3
size_t __res = _M_transform(__c, __p, __len);
# 225 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__res >= __len)
# 226 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 227 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__len = (__res + (1));
# 228 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(delete [] __c), (__c = 0);
# 229 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__c = (new _CharT [__len]);
# 230 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__res = _M_transform(__c, __p, __len);
# 231 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 233 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(__ret.append(__c, __res));
# 234 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p += char_traits< _CharT> ::length(__p);
# 235 "/usr/include/c++/5/bits/locale_classes.tcc" 3
if (__p == __pend) {
# 236 "/usr/include/c++/5/bits/locale_classes.tcc" 3
break; }
# 238 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__p++;
# 239 "/usr/include/c++/5/bits/locale_classes.tcc" 3
(__ret.push_back(_CharT()));
# 240 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 241 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 242 "/usr/include/c++/5/bits/locale_classes.tcc" 3
catch (...)
# 243 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 244 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] __c;
# 245 "/usr/include/c++/5/bits/locale_classes.tcc" 3
throw;
# 246 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 248 "/usr/include/c++/5/bits/locale_classes.tcc" 3
delete [] __c;
# 250 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return __ret;
# 251 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 253 "/usr/include/c++/5/bits/locale_classes.tcc" 3
template< class _CharT> long
# 256 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__cxx11::collate< _CharT> ::do_hash(const _CharT *__lo, const _CharT *__hi) const
# 257 "/usr/include/c++/5/bits/locale_classes.tcc" 3
{
# 258 "/usr/include/c++/5/bits/locale_classes.tcc" 3
unsigned long __val = (0);
# 259 "/usr/include/c++/5/bits/locale_classes.tcc" 3
for (; __lo < __hi; ++__lo) {
# 260 "/usr/include/c++/5/bits/locale_classes.tcc" 3
__val = ((*__lo) + ((__val << 7) | (__val >> (__gnu_cxx::__numeric_traits_integer< unsigned long> ::__digits - 7)))); }
# 264 "/usr/include/c++/5/bits/locale_classes.tcc" 3
return static_cast< long>(__val);
# 265 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 270 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate< char> ;
# 271 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate_byname< char> ;
# 273 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template const __cxx11::collate< char> &use_facet< __cxx11::collate< char> > (const locale &);
# 277 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template bool has_facet< __cxx11::collate< char> > (const locale &) throw();
# 282 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate< wchar_t> ;
# 283 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template class __cxx11::collate_byname< wchar_t> ;
# 285 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template const __cxx11::collate< wchar_t> &use_facet< __cxx11::collate< wchar_t> > (const locale &);
# 289 "/usr/include/c++/5/bits/locale_classes.tcc" 3
extern template bool has_facet< __cxx11::collate< wchar_t> > (const locale &) throw();
# 296 "/usr/include/c++/5/bits/locale_classes.tcc" 3
}
# 36 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
namespace std __attribute((__visibility__("default"))) {
# 40 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
enum class errc {
# 42 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
address_family_not_supported = 97,
# 43 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
address_in_use,
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
address_not_available,
# 45 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
already_connected = 106,
# 46 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
argument_list_too_long = 7,
# 47 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
argument_out_of_domain = 33,
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
bad_address = 14,
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
bad_file_descriptor = 9,
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
bad_message = 74,
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
broken_pipe = 32,
# 56 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
connection_aborted = 103,
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
connection_already_in_progress = 114,
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
connection_refused = 111,
# 59 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
connection_reset = 104,
# 60 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
cross_device_link = 18,
# 61 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
destination_address_required = 89,
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
device_or_resource_busy = 16,
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
directory_not_empty = 39,
# 64 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
executable_format_error = 8,
# 65 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
file_exists = 17,
# 66 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
file_too_large = 27,
# 67 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
filename_too_long = 36,
# 68 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
function_not_supported = 38,
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
host_unreachable = 113,
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
identifier_removed = 43,
# 75 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
illegal_byte_sequence = 84,
# 76 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
inappropriate_io_control_operation = 25,
# 77 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
interrupted = 4,
# 78 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
invalid_argument = 22,
# 79 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
invalid_seek = 29,
# 80 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
io_error = 5,
# 81 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
is_a_directory = 21,
# 82 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
message_size = 90,
# 83 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
network_down = 100,
# 84 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
network_reset = 102,
# 85 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
network_unreachable = 101,
# 86 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_buffer_space = 105,
# 87 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_child_process = 10,
# 90 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_link = 67,
# 93 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_lock_available = 37,
# 96 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_message_available = 61,
# 99 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_message = 42,
# 100 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_protocol_option = 92,
# 101 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_space_on_device = 28,
# 104 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_stream_resources = 63,
# 107 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_such_device_or_address = 6,
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_such_device = 19,
# 109 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_such_file_or_directory = 2,
# 110 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
no_such_process,
# 111 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_a_directory = 20,
# 112 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_a_socket = 88,
# 115 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_a_stream = 60,
# 118 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_connected = 107,
# 119 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_enough_memory = 12,
# 122 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
not_supported = 95,
# 126 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
operation_canceled = 125,
# 129 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
operation_in_progress = 115,
# 130 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
operation_not_permitted = 1,
# 131 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
operation_not_supported = 95,
# 132 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
operation_would_block = 11,
# 135 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
owner_dead = 130,
# 138 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
permission_denied = 13,
# 141 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
protocol_error = 71,
# 144 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
protocol_not_supported = 93,
# 145 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
read_only_file_system = 30,
# 146 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
resource_deadlock_would_occur = 35,
# 147 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
resource_unavailable_try_again = 11,
# 148 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
result_out_of_range = 34,
# 151 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
state_not_recoverable = 131,
# 155 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
stream_timeout = 62,
# 159 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
text_file_busy = 26,
# 162 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
timed_out = 110,
# 163 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
too_many_files_open_in_system = 23,
# 164 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
too_many_files_open,
# 165 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
too_many_links = 31,
# 166 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
too_many_symbolic_link_levels = 40,
# 169 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
value_too_large = 75,
# 172 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
wrong_protocol_type = 91
# 173 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
};
# 176 "/usr/include/x86_64-linux-gnu/c++/5/bits/error_constants.h" 3
}
# 41 "/usr/include/c++/5/stdexcept" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/5/stdexcept" 3
struct __cow_string {
# 50 "/usr/include/c++/5/stdexcept" 3
union {
# 51 "/usr/include/c++/5/stdexcept" 3
const char *_M_p;
# 52 "/usr/include/c++/5/stdexcept" 3
char _M_bytes[sizeof(const char *)];
# 53 "/usr/include/c++/5/stdexcept" 3
};
# 55 "/usr/include/c++/5/stdexcept" 3
__cow_string();
# 56 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cxx11::string &);
# 57 "/usr/include/c++/5/stdexcept" 3
__cow_string(const char *, size_t);
# 58 "/usr/include/c++/5/stdexcept" 3
__cow_string(const __cow_string &) noexcept;
# 59 "/usr/include/c++/5/stdexcept" 3
__cow_string &operator=(const __cow_string &) noexcept;
# 60 "/usr/include/c++/5/stdexcept" 3
~__cow_string();
# 62 "/usr/include/c++/5/stdexcept" 3
__cow_string(__cow_string &&) noexcept;
# 63 "/usr/include/c++/5/stdexcept" 3
__cow_string &operator=(__cow_string &&) noexcept;
# 65 "/usr/include/c++/5/stdexcept" 3
};
# 67 "/usr/include/c++/5/stdexcept" 3
typedef __cxx11::basic_string< char, char_traits< char> , allocator< char> > __sso_string;
# 113 "/usr/include/c++/5/stdexcept" 3
class logic_error : public exception {
# 115 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 120 "/usr/include/c++/5/stdexcept" 3
public: explicit logic_error(const __cxx11::string & __arg);
# 124 "/usr/include/c++/5/stdexcept" 3
explicit logic_error(const char *);
# 128 "/usr/include/c++/5/stdexcept" 3
logic_error(const logic_error &) noexcept;
# 129 "/usr/include/c++/5/stdexcept" 3
logic_error &operator=(const logic_error &) noexcept;
# 132 "/usr/include/c++/5/stdexcept" 3
virtual ~logic_error() noexcept;
# 137 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const noexcept;
# 138 "/usr/include/c++/5/stdexcept" 3
};
# 142 "/usr/include/c++/5/stdexcept" 3
class domain_error : public logic_error {
# 145 "/usr/include/c++/5/stdexcept" 3
public: explicit domain_error(const __cxx11::string & __arg);
# 147 "/usr/include/c++/5/stdexcept" 3
explicit domain_error(const char *);
# 149 "/usr/include/c++/5/stdexcept" 3
virtual ~domain_error() noexcept;
# 150 "/usr/include/c++/5/stdexcept" 3
};
# 153 "/usr/include/c++/5/stdexcept" 3
class invalid_argument : public logic_error {
# 156 "/usr/include/c++/5/stdexcept" 3
public: explicit invalid_argument(const __cxx11::string & __arg);
# 158 "/usr/include/c++/5/stdexcept" 3
explicit invalid_argument(const char *);
# 160 "/usr/include/c++/5/stdexcept" 3
virtual ~invalid_argument() noexcept;
# 161 "/usr/include/c++/5/stdexcept" 3
};
# 165 "/usr/include/c++/5/stdexcept" 3
class length_error : public logic_error {
# 168 "/usr/include/c++/5/stdexcept" 3
public: explicit length_error(const __cxx11::string & __arg);
# 170 "/usr/include/c++/5/stdexcept" 3
explicit length_error(const char *);
# 172 "/usr/include/c++/5/stdexcept" 3
virtual ~length_error() noexcept;
# 173 "/usr/include/c++/5/stdexcept" 3
};
# 177 "/usr/include/c++/5/stdexcept" 3
class out_of_range : public logic_error {
# 180 "/usr/include/c++/5/stdexcept" 3
public: explicit out_of_range(const __cxx11::string & __arg);
# 182 "/usr/include/c++/5/stdexcept" 3
explicit out_of_range(const char *);
# 184 "/usr/include/c++/5/stdexcept" 3
virtual ~out_of_range() noexcept;
# 185 "/usr/include/c++/5/stdexcept" 3
};
# 192 "/usr/include/c++/5/stdexcept" 3
class runtime_error : public exception {
# 194 "/usr/include/c++/5/stdexcept" 3
__cow_string _M_msg;
# 199 "/usr/include/c++/5/stdexcept" 3
public: explicit runtime_error(const __cxx11::string & __arg);
# 203 "/usr/include/c++/5/stdexcept" 3
explicit runtime_error(const char *);
# 207 "/usr/include/c++/5/stdexcept" 3
runtime_error(const runtime_error &) noexcept;
# 208 "/usr/include/c++/5/stdexcept" 3
runtime_error &operator=(const runtime_error &) noexcept;
# 211 "/usr/include/c++/5/stdexcept" 3
virtual ~runtime_error() noexcept;
# 216 "/usr/include/c++/5/stdexcept" 3
virtual const char *what() const noexcept;
# 217 "/usr/include/c++/5/stdexcept" 3
};
# 220 "/usr/include/c++/5/stdexcept" 3
class range_error : public runtime_error {
# 223 "/usr/include/c++/5/stdexcept" 3
public: explicit range_error(const __cxx11::string & __arg);
# 225 "/usr/include/c++/5/stdexcept" 3
explicit range_error(const char *);
# 227 "/usr/include/c++/5/stdexcept" 3
virtual ~range_error() noexcept;
# 228 "/usr/include/c++/5/stdexcept" 3
};
# 231 "/usr/include/c++/5/stdexcept" 3
class overflow_error : public runtime_error {
# 234 "/usr/include/c++/5/stdexcept" 3
public: explicit overflow_error(const __cxx11::string & __arg);
# 236 "/usr/include/c++/5/stdexcept" 3
explicit overflow_error(const char *);
# 238 "/usr/include/c++/5/stdexcept" 3
virtual ~overflow_error() noexcept;
# 239 "/usr/include/c++/5/stdexcept" 3
};
# 242 "/usr/include/c++/5/stdexcept" 3
class underflow_error : public runtime_error {
# 245 "/usr/include/c++/5/stdexcept" 3
public: explicit underflow_error(const __cxx11::string & __arg);
# 247 "/usr/include/c++/5/stdexcept" 3
explicit underflow_error(const char *);
# 249 "/usr/include/c++/5/stdexcept" 3
virtual ~underflow_error() noexcept;
# 250 "/usr/include/c++/5/stdexcept" 3
};
# 255 "/usr/include/c++/5/stdexcept" 3
}
# 43 "/usr/include/c++/5/system_error" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/5/system_error" 3
struct error_code;
# 48 "/usr/include/c++/5/system_error" 3
struct error_condition;
# 49 "/usr/include/c++/5/system_error" 3
class system_error;
# 52 "/usr/include/c++/5/system_error" 3
template< class _Tp>
# 53 "/usr/include/c++/5/system_error" 3
struct is_error_code_enum : public false_type { };
# 56 "/usr/include/c++/5/system_error" 3
template< class _Tp>
# 57 "/usr/include/c++/5/system_error" 3
struct is_error_condition_enum : public false_type { };
# 60 "/usr/include/c++/5/system_error" 3
template<> struct is_error_condition_enum< errc> : public true_type {
# 61 "/usr/include/c++/5/system_error" 3
};
# 63 "/usr/include/c++/5/system_error" 3
inline namespace _V2 {
# 66 "/usr/include/c++/5/system_error" 3
class error_category {
# 69 "/usr/include/c++/5/system_error" 3
public: constexpr error_category() noexcept = default;
# 71 "/usr/include/c++/5/system_error" 3
virtual ~error_category();
# 73 "/usr/include/c++/5/system_error" 3
error_category(const error_category &) = delete;
# 74 "/usr/include/c++/5/system_error" 3
error_category &operator=(const error_category &) = delete;
# 77 "/usr/include/c++/5/system_error" 3
virtual const char *name() const noexcept = 0;
# 87 "/usr/include/c++/5/system_error" 3
private:
# 85 "/usr/include/c++/5/system_error" 3
__attribute((__abi_tag__("cxx11" ))) virtual __cow_string
# 87 "/usr/include/c++/5/system_error" 3
_M_message(int) const;
# 92 "/usr/include/c++/5/system_error" 3
public:
# 90 "/usr/include/c++/5/system_error" 3
__attribute((__abi_tag__("cxx11" ))) virtual __cxx11::string
# 92 "/usr/include/c++/5/system_error" 3
message(int) const = 0;
# 104 "/usr/include/c++/5/system_error" 3
virtual error_condition default_error_condition(int __i) const noexcept;
# 107 "/usr/include/c++/5/system_error" 3
virtual bool equivalent(int __i, const error_condition & __cond) const noexcept;
# 110 "/usr/include/c++/5/system_error" 3
virtual bool equivalent(const error_code & __code, int __i) const noexcept;
# 113 "/usr/include/c++/5/system_error" 3
bool operator<(const error_category &__other) const noexcept
# 114 "/usr/include/c++/5/system_error" 3
{ return less< const error_category *> ()(this, &__other); }
# 117 "/usr/include/c++/5/system_error" 3
bool operator==(const error_category &__other) const noexcept
# 118 "/usr/include/c++/5/system_error" 3
{ return this == (&__other); }
# 121 "/usr/include/c++/5/system_error" 3
bool operator!=(const error_category &__other) const noexcept
# 122 "/usr/include/c++/5/system_error" 3
{ return this != (&__other); }
# 123 "/usr/include/c++/5/system_error" 3
};
# 126 "/usr/include/c++/5/system_error" 3
__attribute((const)) const error_category &system_category() noexcept;
# 127 "/usr/include/c++/5/system_error" 3
__attribute((const)) const error_category &generic_category() noexcept;
# 129 "/usr/include/c++/5/system_error" 3
}
# 131 "/usr/include/c++/5/system_error" 3
inline error_code make_error_code(errc) noexcept;
# 133 "/usr/include/c++/5/system_error" 3
template< class _Tp> struct hash;
# 138 "/usr/include/c++/5/system_error" 3
struct error_code {
# 140 "/usr/include/c++/5/system_error" 3
error_code() noexcept : _M_value(0), _M_cat(&system_category())
# 141 "/usr/include/c++/5/system_error" 3
{ }
# 143 "/usr/include/c++/5/system_error" 3
error_code(int __v, const _V2::error_category &__cat) noexcept : _M_value(__v), _M_cat(&__cat)
# 144 "/usr/include/c++/5/system_error" 3
{ }
# 146 "/usr/include/c++/5/system_error" 3
template< class _ErrorCodeEnum, class = typename enable_if< is_error_code_enum< _ErrorCodeEnum> ::value> ::type>
# 148 "/usr/include/c++/5/system_error" 3
error_code(_ErrorCodeEnum __e) noexcept
# 149 "/usr/include/c++/5/system_error" 3
{ (*this) = make_error_code(__e); }
# 152 "/usr/include/c++/5/system_error" 3
void assign(int __v, const _V2::error_category &__cat) noexcept
# 153 "/usr/include/c++/5/system_error" 3
{
# 154 "/usr/include/c++/5/system_error" 3
(_M_value) = __v;
# 155 "/usr/include/c++/5/system_error" 3
(_M_cat) = (&__cat);
# 156 "/usr/include/c++/5/system_error" 3
}
# 159 "/usr/include/c++/5/system_error" 3
void clear() noexcept
# 160 "/usr/include/c++/5/system_error" 3
{ this->assign(0, system_category()); }
# 163 "/usr/include/c++/5/system_error" 3
template< class _ErrorCodeEnum> typename enable_if< is_error_code_enum< _ErrorCodeEnum> ::value, error_code &> ::type
# 166 "/usr/include/c++/5/system_error" 3
operator=(_ErrorCodeEnum __e) noexcept
# 167 "/usr/include/c++/5/system_error" 3
{ return (*this) = make_error_code(__e); }
# 170 "/usr/include/c++/5/system_error" 3
int value() const noexcept { return _M_value; }
# 173 "/usr/include/c++/5/system_error" 3
const _V2::error_category &category() const noexcept { return *(_M_cat); }
# 176 "/usr/include/c++/5/system_error" 3
error_condition default_error_condition() const noexcept;
# 178 "/usr/include/c++/5/system_error" 3
__attribute((__abi_tag__("cxx11" ))) __cxx11::string
# 180 "/usr/include/c++/5/system_error" 3
message() const
# 181 "/usr/include/c++/5/system_error" 3
{ return this->category().message(this->value()); }
# 183 "/usr/include/c++/5/system_error" 3
explicit operator bool() const noexcept
# 184 "/usr/include/c++/5/system_error" 3
{ return ((_M_value) != 0) ? true : false; }
# 188 "/usr/include/c++/5/system_error" 3
friend struct hash< error_code> ;
# 190 "/usr/include/c++/5/system_error" 3
private: int _M_value;
# 191 "/usr/include/c++/5/system_error" 3
const _V2::error_category *_M_cat;
# 192 "/usr/include/c++/5/system_error" 3
};
# 196 "/usr/include/c++/5/system_error" 3
inline error_code make_error_code(errc __e) noexcept
# 197 "/usr/include/c++/5/system_error" 3
{ return error_code(static_cast< int>(__e), generic_category()); }
# 200 "/usr/include/c++/5/system_error" 3
inline bool operator<(const error_code &__lhs, const error_code &__rhs) noexcept
# 201 "/usr/include/c++/5/system_error" 3
{
# 202 "/usr/include/c++/5/system_error" 3
return ((__lhs.category()) < (__rhs.category())) || (((__lhs.category()) == (__rhs.category())) && (__lhs.value() < __rhs.value()));
# 205 "/usr/include/c++/5/system_error" 3
}
# 207 "/usr/include/c++/5/system_error" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 209 "/usr/include/c++/5/system_error" 3
operator<<(basic_ostream< _CharT, _Traits> &__os, const error_code &__e)
# 210 "/usr/include/c++/5/system_error" 3
{ return ((__os << __e.category().name()) << ':') << __e.value(); }
# 212 "/usr/include/c++/5/system_error" 3
inline error_condition make_error_condition(errc) noexcept;
# 216 "/usr/include/c++/5/system_error" 3
struct error_condition {
# 218 "/usr/include/c++/5/system_error" 3
error_condition() noexcept : _M_value(0), _M_cat(&generic_category())
# 219 "/usr/include/c++/5/system_error" 3
{ }
# 221 "/usr/include/c++/5/system_error" 3
error_condition(int __v, const _V2::error_category &__cat) noexcept : _M_value(__v), _M_cat(&__cat)
# 222 "/usr/include/c++/5/system_error" 3
{ }
# 224 "/usr/include/c++/5/system_error" 3
template< class _ErrorConditionEnum, class = typename enable_if< is_error_condition_enum< _ErrorConditionEnum> ::value> ::type>
# 226 "/usr/include/c++/5/system_error" 3
error_condition(_ErrorConditionEnum __e) noexcept
# 227 "/usr/include/c++/5/system_error" 3
{ (*this) = make_error_condition(__e); }
# 230 "/usr/include/c++/5/system_error" 3
void assign(int __v, const _V2::error_category &__cat) noexcept
# 231 "/usr/include/c++/5/system_error" 3
{
# 232 "/usr/include/c++/5/system_error" 3
(_M_value) = __v;
# 233 "/usr/include/c++/5/system_error" 3
(_M_cat) = (&__cat);
# 234 "/usr/include/c++/5/system_error" 3
}
# 237 "/usr/include/c++/5/system_error" 3
template< class _ErrorConditionEnum> typename enable_if< is_error_condition_enum< _ErrorConditionEnum> ::value, error_condition &> ::type
# 240 "/usr/include/c++/5/system_error" 3
operator=(_ErrorConditionEnum __e) noexcept
# 241 "/usr/include/c++/5/system_error" 3
{ return (*this) = make_error_condition(__e); }
# 244 "/usr/include/c++/5/system_error" 3
void clear() noexcept
# 245 "/usr/include/c++/5/system_error" 3
{ this->assign(0, generic_category()); }
# 249 "/usr/include/c++/5/system_error" 3
int value() const noexcept { return _M_value; }
# 252 "/usr/include/c++/5/system_error" 3
const _V2::error_category &category() const noexcept { return *(_M_cat); }
# 254 "/usr/include/c++/5/system_error" 3
__attribute((__abi_tag__("cxx11" ))) __cxx11::string
# 256 "/usr/include/c++/5/system_error" 3
message() const
# 257 "/usr/include/c++/5/system_error" 3
{ return this->category().message(this->value()); }
# 259 "/usr/include/c++/5/system_error" 3
explicit operator bool() const noexcept
# 260 "/usr/include/c++/5/system_error" 3
{ return ((_M_value) != 0) ? true : false; }
# 264 "/usr/include/c++/5/system_error" 3
private: int _M_value;
# 265 "/usr/include/c++/5/system_error" 3
const _V2::error_category *_M_cat;
# 266 "/usr/include/c++/5/system_error" 3
};
# 270 "/usr/include/c++/5/system_error" 3
inline error_condition make_error_condition(errc __e) noexcept
# 271 "/usr/include/c++/5/system_error" 3
{ return error_condition(static_cast< int>(__e), generic_category()); }
# 274 "/usr/include/c++/5/system_error" 3
inline bool operator<(const error_condition &__lhs, const error_condition &
# 275 "/usr/include/c++/5/system_error" 3
__rhs) noexcept
# 276 "/usr/include/c++/5/system_error" 3
{
# 277 "/usr/include/c++/5/system_error" 3
return ((__lhs.category()) < (__rhs.category())) || (((__lhs.category()) == (__rhs.category())) && (__lhs.value() < __rhs.value()));
# 280 "/usr/include/c++/5/system_error" 3
}
# 284 "/usr/include/c++/5/system_error" 3
inline bool operator==(const error_code &__lhs, const error_code &__rhs) noexcept
# 285 "/usr/include/c++/5/system_error" 3
{ return ((__lhs.category()) == (__rhs.category())) && (__lhs.value() == __rhs.value());
# 286 "/usr/include/c++/5/system_error" 3
}
# 289 "/usr/include/c++/5/system_error" 3
inline bool operator==(const error_code &__lhs, const error_condition &__rhs) noexcept
# 290 "/usr/include/c++/5/system_error" 3
{
# 291 "/usr/include/c++/5/system_error" 3
return __lhs.category().equivalent(__lhs.value(), __rhs) || __rhs.category().equivalent(__lhs, __rhs.value());
# 293 "/usr/include/c++/5/system_error" 3
}
# 296 "/usr/include/c++/5/system_error" 3
inline bool operator==(const error_condition &__lhs, const error_code &__rhs) noexcept
# 297 "/usr/include/c++/5/system_error" 3
{
# 298 "/usr/include/c++/5/system_error" 3
return __rhs.category().equivalent(__rhs.value(), __lhs) || __lhs.category().equivalent(__rhs, __lhs.value());
# 300 "/usr/include/c++/5/system_error" 3
}
# 303 "/usr/include/c++/5/system_error" 3
inline bool operator==(const error_condition &__lhs, const error_condition &
# 304 "/usr/include/c++/5/system_error" 3
__rhs) noexcept
# 305 "/usr/include/c++/5/system_error" 3
{
# 306 "/usr/include/c++/5/system_error" 3
return ((__lhs.category()) == (__rhs.category())) && (__lhs.value() == __rhs.value());
# 308 "/usr/include/c++/5/system_error" 3
}
# 311 "/usr/include/c++/5/system_error" 3
inline bool operator!=(const error_code &__lhs, const error_code &__rhs) noexcept
# 312 "/usr/include/c++/5/system_error" 3
{ return !((__lhs == __rhs)); }
# 315 "/usr/include/c++/5/system_error" 3
inline bool operator!=(const error_code &__lhs, const error_condition &__rhs) noexcept
# 316 "/usr/include/c++/5/system_error" 3
{ return !((__lhs == __rhs)); }
# 319 "/usr/include/c++/5/system_error" 3
inline bool operator!=(const error_condition &__lhs, const error_code &__rhs) noexcept
# 320 "/usr/include/c++/5/system_error" 3
{ return !((__lhs == __rhs)); }
# 323 "/usr/include/c++/5/system_error" 3
inline bool operator!=(const error_condition &__lhs, const error_condition &
# 324 "/usr/include/c++/5/system_error" 3
__rhs) noexcept
# 325 "/usr/include/c++/5/system_error" 3
{ return !((__lhs == __rhs)); }
# 333 "/usr/include/c++/5/system_error" 3
class system_error : public runtime_error {
# 336 "/usr/include/c++/5/system_error" 3
error_code _M_code;
# 339 "/usr/include/c++/5/system_error" 3
public: system_error(error_code __ec = error_code()) : runtime_error(__ec.message()), _M_code(__ec)
# 340 "/usr/include/c++/5/system_error" 3
{ }
# 342 "/usr/include/c++/5/system_error" 3
system_error(error_code __ec, const __cxx11::string &__what) : runtime_error((((__what + (": "))) + (__ec.message()))), _M_code(__ec)
# 343 "/usr/include/c++/5/system_error" 3
{ }
# 345 "/usr/include/c++/5/system_error" 3
system_error(error_code __ec, const char *__what) : runtime_error((__what + (((": ") + (__ec.message()))))), _M_code(__ec)
# 346 "/usr/include/c++/5/system_error" 3
{ }
# 348 "/usr/include/c++/5/system_error" 3
system_error(int __v, const _V2::error_category &__ecat, const char *__what) : system_error(error_code(__v, __ecat), __what)
# 349 "/usr/include/c++/5/system_error" 3
{ }
# 351 "/usr/include/c++/5/system_error" 3
system_error(int __v, const _V2::error_category &__ecat) : runtime_error(error_code(__v, __ecat).message()), _M_code(__v, __ecat)
# 353 "/usr/include/c++/5/system_error" 3
{ }
# 355 "/usr/include/c++/5/system_error" 3
system_error(int __v, const _V2::error_category &__ecat, const __cxx11::string &__what) : runtime_error((((__what + (": "))) + (error_code(__v, __ecat).message()))), _M_code(__v, __ecat)
# 357 "/usr/include/c++/5/system_error" 3
{ }
# 359 "/usr/include/c++/5/system_error" 3
virtual ~system_error() noexcept;
# 362 "/usr/include/c++/5/system_error" 3
const error_code &code() const noexcept { return _M_code; }
# 363 "/usr/include/c++/5/system_error" 3
};
# 366 "/usr/include/c++/5/system_error" 3
}
# 372 "/usr/include/c++/5/system_error" 3
namespace std __attribute((__visibility__("default"))) {
# 379 "/usr/include/c++/5/system_error" 3
template<> struct hash< error_code> : public __hash_base< unsigned long, error_code> {
# 383 "/usr/include/c++/5/system_error" 3
size_t operator()(const error_code &__e) const noexcept
# 384 "/usr/include/c++/5/system_error" 3
{
# 385 "/usr/include/c++/5/system_error" 3
const size_t __tmp = std::_Hash_impl::hash(__e._M_value);
# 386 "/usr/include/c++/5/system_error" 3
return std::_Hash_impl::__hash_combine(__e._M_cat, __tmp);
# 387 "/usr/include/c++/5/system_error" 3
}
# 388 "/usr/include/c++/5/system_error" 3
};
# 391 "/usr/include/c++/5/system_error" 3
}
# 49 "/usr/include/c++/5/bits/ios_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Fmtflags {
# 59 "/usr/include/c++/5/bits/ios_base.h" 3
_S_boolalpha = 1,
# 60 "/usr/include/c++/5/bits/ios_base.h" 3
_S_dec,
# 61 "/usr/include/c++/5/bits/ios_base.h" 3
_S_fixed = 4,
# 62 "/usr/include/c++/5/bits/ios_base.h" 3
_S_hex = 8,
# 63 "/usr/include/c++/5/bits/ios_base.h" 3
_S_internal = 16,
# 64 "/usr/include/c++/5/bits/ios_base.h" 3
_S_left = 32,
# 65 "/usr/include/c++/5/bits/ios_base.h" 3
_S_oct = 64,
# 66 "/usr/include/c++/5/bits/ios_base.h" 3
_S_right = 128,
# 67 "/usr/include/c++/5/bits/ios_base.h" 3
_S_scientific = 256,
# 68 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showbase = 512,
# 69 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showpoint = 1024,
# 70 "/usr/include/c++/5/bits/ios_base.h" 3
_S_showpos = 2048,
# 71 "/usr/include/c++/5/bits/ios_base.h" 3
_S_skipws = 4096,
# 72 "/usr/include/c++/5/bits/ios_base.h" 3
_S_unitbuf = 8192,
# 73 "/usr/include/c++/5/bits/ios_base.h" 3
_S_uppercase = 16384,
# 74 "/usr/include/c++/5/bits/ios_base.h" 3
_S_adjustfield = 176,
# 75 "/usr/include/c++/5/bits/ios_base.h" 3
_S_basefield = 74,
# 76 "/usr/include/c++/5/bits/ios_base.h" 3
_S_floatfield = 260,
# 77 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_end = 65536,
# 78 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_max = 2147483647,
# 79 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_fmtflags_min = (-2147483647-1)
# 80 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 83 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Fmtflags operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 84 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 87 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Fmtflags operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 88 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 91 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Fmtflags operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
# 92 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 95 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Fmtflags operator~(_Ios_Fmtflags __a)
# 96 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Fmtflags)(~(static_cast< int>(__a))); }
# 99 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator|=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 100 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 103 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator&=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 104 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 107 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Fmtflags &operator^=(_Ios_Fmtflags &__a, _Ios_Fmtflags __b)
# 108 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 111 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Openmode {
# 113 "/usr/include/c++/5/bits/ios_base.h" 3
_S_app = 1,
# 114 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ate,
# 115 "/usr/include/c++/5/bits/ios_base.h" 3
_S_bin = 4,
# 116 "/usr/include/c++/5/bits/ios_base.h" 3
_S_in = 8,
# 117 "/usr/include/c++/5/bits/ios_base.h" 3
_S_out = 16,
# 118 "/usr/include/c++/5/bits/ios_base.h" 3
_S_trunc = 32,
# 119 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_end = 65536,
# 120 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_max = 2147483647,
# 121 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_openmode_min = (-2147483647-1)
# 122 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 125 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Openmode operator&(_Ios_Openmode __a, _Ios_Openmode __b)
# 126 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 129 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Openmode operator|(_Ios_Openmode __a, _Ios_Openmode __b)
# 130 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 133 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Openmode operator^(_Ios_Openmode __a, _Ios_Openmode __b)
# 134 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 137 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Openmode operator~(_Ios_Openmode __a)
# 138 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Openmode)(~(static_cast< int>(__a))); }
# 141 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator|=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 142 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 145 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator&=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 146 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 149 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Openmode &operator^=(_Ios_Openmode &__a, _Ios_Openmode __b)
# 150 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 153 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Iostate {
# 155 "/usr/include/c++/5/bits/ios_base.h" 3
_S_goodbit,
# 156 "/usr/include/c++/5/bits/ios_base.h" 3
_S_badbit,
# 157 "/usr/include/c++/5/bits/ios_base.h" 3
_S_eofbit,
# 158 "/usr/include/c++/5/bits/ios_base.h" 3
_S_failbit = 4,
# 159 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_end = 65536,
# 160 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_max = 2147483647,
# 161 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_iostate_min = (-2147483647-1)
# 162 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 165 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Iostate operator&(_Ios_Iostate __a, _Ios_Iostate __b)
# 166 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) & (static_cast< int>(__b))); }
# 169 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Iostate operator|(_Ios_Iostate __a, _Ios_Iostate __b)
# 170 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) | (static_cast< int>(__b))); }
# 173 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Iostate operator^(_Ios_Iostate __a, _Ios_Iostate __b)
# 174 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)((static_cast< int>(__a)) ^ (static_cast< int>(__b))); }
# 177 "/usr/include/c++/5/bits/ios_base.h" 3
constexpr _Ios_Iostate operator~(_Ios_Iostate __a)
# 178 "/usr/include/c++/5/bits/ios_base.h" 3
{ return (_Ios_Iostate)(~(static_cast< int>(__a))); }
# 181 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator|=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 182 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a | __b)); }
# 185 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator&=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 186 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a & __b)); }
# 189 "/usr/include/c++/5/bits/ios_base.h" 3
inline const _Ios_Iostate &operator^=(_Ios_Iostate &__a, _Ios_Iostate __b)
# 190 "/usr/include/c++/5/bits/ios_base.h" 3
{ return __a = ((__a ^ __b)); }
# 193 "/usr/include/c++/5/bits/ios_base.h" 3
enum _Ios_Seekdir {
# 195 "/usr/include/c++/5/bits/ios_base.h" 3
_S_beg,
# 196 "/usr/include/c++/5/bits/ios_base.h" 3
_S_cur,
# 197 "/usr/include/c++/5/bits/ios_base.h" 3
_S_end,
# 198 "/usr/include/c++/5/bits/ios_base.h" 3
_S_ios_seekdir_end = 65536
# 199 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 203 "/usr/include/c++/5/bits/ios_base.h" 3
enum class io_errc { stream = 1};
# 205 "/usr/include/c++/5/bits/ios_base.h" 3
template<> struct is_error_code_enum< io_errc> : public true_type { };
# 207 "/usr/include/c++/5/bits/ios_base.h" 3
const _V2::error_category &iostream_category() noexcept;
# 210 "/usr/include/c++/5/bits/ios_base.h" 3
inline error_code make_error_code(io_errc e) noexcept
# 211 "/usr/include/c++/5/bits/ios_base.h" 3
{ return error_code(static_cast< int>(e), iostream_category()); }
# 214 "/usr/include/c++/5/bits/ios_base.h" 3
inline error_condition make_error_condition(io_errc e) noexcept
# 215 "/usr/include/c++/5/bits/ios_base.h" 3
{ return error_condition(static_cast< int>(e), iostream_category()); }
# 228 "/usr/include/c++/5/bits/ios_base.h" 3
class ios_base {
# 255 "/usr/include/c++/5/bits/ios_base.h" 3
public: class __attribute((__abi_tag__("cxx11" ))) failure : public system_error {
# 259 "/usr/include/c++/5/bits/ios_base.h" 3
public: explicit failure(const __cxx11::string & __str);
# 263 "/usr/include/c++/5/bits/ios_base.h" 3
explicit failure(const __cxx11::string &, const error_code &);
# 266 "/usr/include/c++/5/bits/ios_base.h" 3
explicit failure(const char *, const error_code & = io_errc::stream);
# 270 "/usr/include/c++/5/bits/ios_base.h" 3
virtual ~failure() throw();
# 273 "/usr/include/c++/5/bits/ios_base.h" 3
virtual const char *what() const throw();
# 274 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 323 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Fmtflags fmtflags;
# 326 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags boolalpha = _S_boolalpha;
# 329 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags dec = _S_dec;
# 332 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags fixed = _S_fixed;
# 335 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags hex = _S_hex;
# 340 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags internal = _S_internal;
# 344 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags left = _S_left;
# 347 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags oct = _S_oct;
# 351 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags right = _S_right;
# 354 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags scientific = _S_scientific;
# 358 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showbase = _S_showbase;
# 362 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showpoint = _S_showpoint;
# 365 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags showpos = _S_showpos;
# 368 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags skipws = _S_skipws;
# 371 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags unitbuf = _S_unitbuf;
# 375 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags uppercase = _S_uppercase;
# 378 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags adjustfield = _S_adjustfield;
# 381 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags basefield = _S_basefield;
# 384 "/usr/include/c++/5/bits/ios_base.h" 3
static const fmtflags floatfield = _S_floatfield;
# 398 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Iostate iostate;
# 402 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate badbit = _S_badbit;
# 405 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate eofbit = _S_eofbit;
# 410 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate failbit = _S_failbit;
# 413 "/usr/include/c++/5/bits/ios_base.h" 3
static const iostate goodbit = _S_goodbit;
# 429 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Openmode openmode;
# 432 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode app = _S_app;
# 435 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode ate = _S_ate;
# 440 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode binary = _S_bin;
# 443 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode in = _S_in;
# 446 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode out = _S_out;
# 449 "/usr/include/c++/5/bits/ios_base.h" 3
static const openmode trunc = _S_trunc;
# 461 "/usr/include/c++/5/bits/ios_base.h" 3
typedef _Ios_Seekdir seekdir;
# 464 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir beg = _S_beg;
# 467 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir cur = _S_cur;
# 470 "/usr/include/c++/5/bits/ios_base.h" 3
static const seekdir end = _S_end;
# 473 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int io_state;
# 474 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int open_mode;
# 475 "/usr/include/c++/5/bits/ios_base.h" 3
typedef int seek_dir;
# 477 "/usr/include/c++/5/bits/ios_base.h" 3
typedef std::streampos streampos;
# 478 "/usr/include/c++/5/bits/ios_base.h" 3
typedef std::streamoff streamoff;
# 487 "/usr/include/c++/5/bits/ios_base.h" 3
enum event {
# 489 "/usr/include/c++/5/bits/ios_base.h" 3
erase_event,
# 490 "/usr/include/c++/5/bits/ios_base.h" 3
imbue_event,
# 491 "/usr/include/c++/5/bits/ios_base.h" 3
copyfmt_event
# 492 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 504 "/usr/include/c++/5/bits/ios_base.h" 3
typedef void (*event_callback)(event __e, ios_base & __b, int __i);
# 517 "/usr/include/c++/5/bits/ios_base.h" 3
void register_callback(event_callback __fn, int __index);
# 520 "/usr/include/c++/5/bits/ios_base.h" 3
protected: streamsize _M_precision;
# 521 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize _M_width;
# 522 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags _M_flags;
# 523 "/usr/include/c++/5/bits/ios_base.h" 3
iostate _M_exception;
# 524 "/usr/include/c++/5/bits/ios_base.h" 3
iostate _M_streambuf_state;
# 528 "/usr/include/c++/5/bits/ios_base.h" 3
struct _Callback_list {
# 531 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list *_M_next;
# 532 "/usr/include/c++/5/bits/ios_base.h" 3
event_callback _M_fn;
# 533 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_index;
# 534 "/usr/include/c++/5/bits/ios_base.h" 3
_Atomic_word _M_refcount;
# 536 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list(event_callback __fn, int __index, _Callback_list *
# 537 "/usr/include/c++/5/bits/ios_base.h" 3
__cb) : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0)
# 538 "/usr/include/c++/5/bits/ios_base.h" 3
{ }
# 541 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&(_M_refcount), 1); }
# 545 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_remove_reference()
# 546 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 548 "/usr/include/c++/5/bits/ios_base.h" 3
;
# 549 "/usr/include/c++/5/bits/ios_base.h" 3
int __res = __gnu_cxx::__exchange_and_add_dispatch(&(_M_refcount), -1);
# 550 "/usr/include/c++/5/bits/ios_base.h" 3
if (__res == 0)
# 551 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 552 "/usr/include/c++/5/bits/ios_base.h" 3
;
# 553 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 554 "/usr/include/c++/5/bits/ios_base.h" 3
return __res;
# 555 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 556 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 558 "/usr/include/c++/5/bits/ios_base.h" 3
_Callback_list *_M_callbacks;
# 561 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_call_callbacks(event __ev) throw();
# 564 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_dispose_callbacks() throw();
# 567 "/usr/include/c++/5/bits/ios_base.h" 3
struct _Words {
# 569 "/usr/include/c++/5/bits/ios_base.h" 3
void *_M_pword;
# 570 "/usr/include/c++/5/bits/ios_base.h" 3
long _M_iword;
# 571 "/usr/include/c++/5/bits/ios_base.h" 3
_Words() : _M_pword((0)), _M_iword((0)) { }
# 572 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 575 "/usr/include/c++/5/bits/ios_base.h" 3
_Words _M_word_zero;
# 579 "/usr/include/c++/5/bits/ios_base.h" 3
enum { _S_local_word_size = 8};
# 580 "/usr/include/c++/5/bits/ios_base.h" 3
_Words _M_local_word[_S_local_word_size];
# 583 "/usr/include/c++/5/bits/ios_base.h" 3
int _M_word_size;
# 584 "/usr/include/c++/5/bits/ios_base.h" 3
_Words *_M_word;
# 587 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &_M_grow_words(int __index, bool __iword);
# 590 "/usr/include/c++/5/bits/ios_base.h" 3
locale _M_ios_locale;
# 593 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_init() throw();
# 601 "/usr/include/c++/5/bits/ios_base.h" 3
public: class Init {
# 603 "/usr/include/c++/5/bits/ios_base.h" 3
friend class ios_base;
# 605 "/usr/include/c++/5/bits/ios_base.h" 3
public: Init();
# 606 "/usr/include/c++/5/bits/ios_base.h" 3
~Init();
# 609 "/usr/include/c++/5/bits/ios_base.h" 3
private: static _Atomic_word _S_refcount;
# 610 "/usr/include/c++/5/bits/ios_base.h" 3
static bool _S_synced_with_stdio;
# 611 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 619 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags flags() const
# 620 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_flags; }
# 630 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags flags(fmtflags __fmtfl)
# 631 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 632 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 633 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_flags) = __fmtfl;
# 634 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 635 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 646 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl)
# 647 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 648 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 649 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) |= __fmtfl);
# 650 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 651 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 663 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags setf(fmtflags __fmtfl, fmtflags __mask)
# 664 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 665 "/usr/include/c++/5/bits/ios_base.h" 3
fmtflags __old = _M_flags;
# 666 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) &= ((~__mask)));
# 667 "/usr/include/c++/5/bits/ios_base.h" 3
((_M_flags) |= ((__fmtfl & __mask)));
# 668 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 669 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 678 "/usr/include/c++/5/bits/ios_base.h" 3
void unsetf(fmtflags __mask)
# 679 "/usr/include/c++/5/bits/ios_base.h" 3
{ ((_M_flags) &= ((~__mask))); }
# 689 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize precision() const
# 690 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_precision; }
# 698 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize precision(streamsize __prec)
# 699 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 700 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize __old = _M_precision;
# 701 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_precision) = __prec;
# 702 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 703 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 712 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize width() const
# 713 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_width; }
# 721 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize width(streamsize __wide)
# 722 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 723 "/usr/include/c++/5/bits/ios_base.h" 3
streamsize __old = _M_width;
# 724 "/usr/include/c++/5/bits/ios_base.h" 3
(_M_width) = __wide;
# 725 "/usr/include/c++/5/bits/ios_base.h" 3
return __old;
# 726 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 740 "/usr/include/c++/5/bits/ios_base.h" 3
static bool sync_with_stdio(bool __sync = true);
# 752 "/usr/include/c++/5/bits/ios_base.h" 3
locale imbue(const locale & __loc) throw();
# 763 "/usr/include/c++/5/bits/ios_base.h" 3
locale getloc() const
# 764 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 774 "/usr/include/c++/5/bits/ios_base.h" 3
const locale &_M_getloc() const
# 775 "/usr/include/c++/5/bits/ios_base.h" 3
{ return _M_ios_locale; }
# 793 "/usr/include/c++/5/bits/ios_base.h" 3
static int xalloc() throw();
# 809 "/usr/include/c++/5/bits/ios_base.h" 3
long &iword(int __ix)
# 810 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 811 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, true);
# 813 "/usr/include/c++/5/bits/ios_base.h" 3
return __word._M_iword;
# 814 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 830 "/usr/include/c++/5/bits/ios_base.h" 3
void *&pword(int __ix)
# 831 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 832 "/usr/include/c++/5/bits/ios_base.h" 3
_Words &__word = (__ix < (_M_word_size)) ? (_M_word)[__ix] : this->_M_grow_words(__ix, false);
# 834 "/usr/include/c++/5/bits/ios_base.h" 3
return __word._M_pword;
# 835 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 846 "/usr/include/c++/5/bits/ios_base.h" 3
virtual ~ios_base();
# 849 "/usr/include/c++/5/bits/ios_base.h" 3
protected: ios_base() throw();
# 861 "/usr/include/c++/5/bits/ios_base.h" 3
public: ios_base(const ios_base &) = delete;
# 864 "/usr/include/c++/5/bits/ios_base.h" 3
ios_base &operator=(const ios_base &) = delete;
# 868 "/usr/include/c++/5/bits/ios_base.h" 3
protected: void _M_move(ios_base &) noexcept;
# 871 "/usr/include/c++/5/bits/ios_base.h" 3
void _M_swap(ios_base & __rhs) noexcept;
# 873 "/usr/include/c++/5/bits/ios_base.h" 3
};
# 878 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &boolalpha(ios_base &__base)
# 879 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 880 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::boolalpha);
# 881 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 882 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 886 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noboolalpha(ios_base &__base)
# 887 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 888 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::boolalpha);
# 889 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 890 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 894 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showbase(ios_base &__base)
# 895 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 896 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showbase);
# 897 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 898 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 902 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowbase(ios_base &__base)
# 903 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 904 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showbase);
# 905 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 906 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 910 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showpoint(ios_base &__base)
# 911 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 912 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showpoint);
# 913 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 914 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 918 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowpoint(ios_base &__base)
# 919 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 920 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showpoint);
# 921 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 922 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 926 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &showpos(ios_base &__base)
# 927 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 928 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::showpos);
# 929 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 930 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 934 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noshowpos(ios_base &__base)
# 935 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 936 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::showpos);
# 937 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 938 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 942 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &skipws(ios_base &__base)
# 943 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 944 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::skipws);
# 945 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 946 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 950 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &noskipws(ios_base &__base)
# 951 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 952 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::skipws);
# 953 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 954 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 958 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &uppercase(ios_base &__base)
# 959 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 960 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::uppercase);
# 961 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 962 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 966 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &nouppercase(ios_base &__base)
# 967 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 968 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::uppercase);
# 969 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 970 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 974 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &unitbuf(ios_base &__base)
# 975 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 976 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::unitbuf);
# 977 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 978 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 982 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &nounitbuf(ios_base &__base)
# 983 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 984 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::unitbuf);
# 985 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 986 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 991 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &internal(ios_base &__base)
# 992 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 993 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::internal, ios_base::adjustfield);
# 994 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 995 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 999 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &left(ios_base &__base)
# 1000 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1001 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::left, ios_base::adjustfield);
# 1002 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1003 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1007 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &right(ios_base &__base)
# 1008 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1009 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::right, ios_base::adjustfield);
# 1010 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1011 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1016 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &dec(ios_base &__base)
# 1017 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1018 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::dec, ios_base::basefield);
# 1019 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1020 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1024 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &hex(ios_base &__base)
# 1025 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1026 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::hex, ios_base::basefield);
# 1027 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1028 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1032 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &oct(ios_base &__base)
# 1033 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1034 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::oct, ios_base::basefield);
# 1035 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1036 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1041 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &fixed(ios_base &__base)
# 1042 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1043 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::fixed, ios_base::floatfield);
# 1044 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1045 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1049 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &scientific(ios_base &__base)
# 1050 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1051 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf(ios_base::scientific, ios_base::floatfield);
# 1052 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1053 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1061 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &hexfloat(ios_base &__base)
# 1062 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1063 "/usr/include/c++/5/bits/ios_base.h" 3
__base.setf((ios_base::fixed | ios_base::scientific), ios_base::floatfield);
# 1064 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1065 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1069 "/usr/include/c++/5/bits/ios_base.h" 3
inline ios_base &defaultfloat(ios_base &__base)
# 1070 "/usr/include/c++/5/bits/ios_base.h" 3
{
# 1071 "/usr/include/c++/5/bits/ios_base.h" 3
__base.unsetf(ios_base::floatfield);
# 1072 "/usr/include/c++/5/bits/ios_base.h" 3
return __base;
# 1073 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 1077 "/usr/include/c++/5/bits/ios_base.h" 3
}
# 45 "/usr/include/c++/5/streambuf" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/streambuf" 3
template< class _CharT, class _Traits> streamsize __copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *, basic_streambuf< _CharT, _Traits> *, bool &);
# 119 "/usr/include/c++/5/streambuf" 3
template< class _CharT, class _Traits>
# 120 "/usr/include/c++/5/streambuf" 3
class basic_streambuf {
# 129 "/usr/include/c++/5/streambuf" 3
public: typedef _CharT char_type;
# 130 "/usr/include/c++/5/streambuf" 3
typedef _Traits traits_type;
# 131 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::int_type int_type;
# 132 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::pos_type pos_type;
# 133 "/usr/include/c++/5/streambuf" 3
typedef typename _Traits::off_type off_type;
# 138 "/usr/include/c++/5/streambuf" 3
typedef basic_streambuf __streambuf_type;
# 141 "/usr/include/c++/5/streambuf" 3
friend class basic_ios< _CharT, _Traits> ;
# 142 "/usr/include/c++/5/streambuf" 3
friend class basic_istream< _CharT, _Traits> ;
# 143 "/usr/include/c++/5/streambuf" 3
friend class basic_ostream< _CharT, _Traits> ;
# 144 "/usr/include/c++/5/streambuf" 3
friend class istreambuf_iterator< _CharT, _Traits> ;
# 145 "/usr/include/c++/5/streambuf" 3
friend class ostreambuf_iterator< _CharT, _Traits> ;
# 148 "/usr/include/c++/5/streambuf" 3
friend streamsize __copy_streambufs_eof<> (basic_streambuf *, basic_streambuf *, bool &);
# 150 "/usr/include/c++/5/streambuf" 3
template< bool _IsMove, class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , _CharT2 *);
# 156 "/usr/include/c++/5/streambuf" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, istreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type find(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , const _CharT2 &);
# 162 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, _CharT2 *);
# 166 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &operator>>(basic_istream< _CharT2, _Traits2> &, __cxx11::basic_string< _CharT2, _Traits2, _Alloc> &);
# 171 "/usr/include/c++/5/streambuf" 3
template< class _CharT2, class _Traits2, class _Alloc> friend basic_istream< _CharT2, _Traits2> &getline(basic_istream< _CharT2, _Traits2> &, __cxx11::basic_string< _CharT2, _Traits2, _Alloc> &, _CharT2);
# 184 "/usr/include/c++/5/streambuf" 3
protected: char_type *_M_in_beg;
# 185 "/usr/include/c++/5/streambuf" 3
char_type *_M_in_cur;
# 186 "/usr/include/c++/5/streambuf" 3
char_type *_M_in_end;
# 187 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_beg;
# 188 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_cur;
# 189 "/usr/include/c++/5/streambuf" 3
char_type *_M_out_end;
# 192 "/usr/include/c++/5/streambuf" 3
locale _M_buf_locale;
# 197 "/usr/include/c++/5/streambuf" 3
public: virtual ~basic_streambuf()
# 198 "/usr/include/c++/5/streambuf" 3
{ }
# 209 "/usr/include/c++/5/streambuf" 3
locale pubimbue(const locale &__loc)
# 210 "/usr/include/c++/5/streambuf" 3
{
# 211 "/usr/include/c++/5/streambuf" 3
locale __tmp(this->getloc());
# 212 "/usr/include/c++/5/streambuf" 3
this->imbue(__loc);
# 213 "/usr/include/c++/5/streambuf" 3
((_M_buf_locale) = __loc);
# 214 "/usr/include/c++/5/streambuf" 3
return __tmp;
# 215 "/usr/include/c++/5/streambuf" 3
}
# 226 "/usr/include/c++/5/streambuf" 3
locale getloc() const
# 227 "/usr/include/c++/5/streambuf" 3
{ return _M_buf_locale; }
# 239 "/usr/include/c++/5/streambuf" 3
basic_streambuf *pubsetbuf(char_type *__s, streamsize __n)
# 240 "/usr/include/c++/5/streambuf" 3
{ return this->setbuf(__s, __n); }
# 251 "/usr/include/c++/5/streambuf" 3
pos_type pubseekoff(off_type __off, ios_base::seekdir __way, ios_base::openmode
# 252 "/usr/include/c++/5/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 253 "/usr/include/c++/5/streambuf" 3
{ return this->seekoff(__off, __way, __mode); }
# 263 "/usr/include/c++/5/streambuf" 3
pos_type pubseekpos(pos_type __sp, ios_base::openmode
# 264 "/usr/include/c++/5/streambuf" 3
__mode = (ios_base::in | ios_base::out))
# 265 "/usr/include/c++/5/streambuf" 3
{ return this->seekpos(__sp, __mode); }
# 271 "/usr/include/c++/5/streambuf" 3
int pubsync() { return this->sync(); }
# 284 "/usr/include/c++/5/streambuf" 3
streamsize in_avail()
# 285 "/usr/include/c++/5/streambuf" 3
{
# 286 "/usr/include/c++/5/streambuf" 3
const streamsize __ret = this->egptr() - this->gptr();
# 287 "/usr/include/c++/5/streambuf" 3
return (__ret) ? __ret : this->showmanyc();
# 288 "/usr/include/c++/5/streambuf" 3
}
# 298 "/usr/include/c++/5/streambuf" 3
int_type snextc()
# 299 "/usr/include/c++/5/streambuf" 3
{
# 300 "/usr/include/c++/5/streambuf" 3
int_type __ret = traits_type::eof();
# 301 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(!traits_type::eq_int_type(this->sbumpc(), __ret), true)) {
# 303 "/usr/include/c++/5/streambuf" 3
__ret = this->sgetc(); }
# 304 "/usr/include/c++/5/streambuf" 3
return __ret;
# 305 "/usr/include/c++/5/streambuf" 3
}
# 316 "/usr/include/c++/5/streambuf" 3
int_type sbumpc()
# 317 "/usr/include/c++/5/streambuf" 3
{
# 318 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 319 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true))
# 320 "/usr/include/c++/5/streambuf" 3
{
# 321 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 322 "/usr/include/c++/5/streambuf" 3
this->gbump(1);
# 323 "/usr/include/c++/5/streambuf" 3
} else {
# 325 "/usr/include/c++/5/streambuf" 3
__ret = this->uflow(); }
# 326 "/usr/include/c++/5/streambuf" 3
return __ret;
# 327 "/usr/include/c++/5/streambuf" 3
}
# 338 "/usr/include/c++/5/streambuf" 3
int_type sgetc()
# 339 "/usr/include/c++/5/streambuf" 3
{
# 340 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 341 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->gptr() < this->egptr(), true)) {
# 342 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr()); } else {
# 344 "/usr/include/c++/5/streambuf" 3
__ret = this->underflow(); }
# 345 "/usr/include/c++/5/streambuf" 3
return __ret;
# 346 "/usr/include/c++/5/streambuf" 3
}
# 357 "/usr/include/c++/5/streambuf" 3
streamsize sgetn(char_type *__s, streamsize __n)
# 358 "/usr/include/c++/5/streambuf" 3
{ return this->xsgetn(__s, __n); }
# 372 "/usr/include/c++/5/streambuf" 3
int_type sputbackc(char_type __c)
# 373 "/usr/include/c++/5/streambuf" 3
{
# 374 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 375 "/usr/include/c++/5/streambuf" 3
const bool __testpos = this->eback() < this->gptr();
# 376 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect((!__testpos) || (!traits_type::eq(__c, this->gptr()[-1])), false)) {
# 378 "/usr/include/c++/5/streambuf" 3
__ret = this->pbackfail(traits_type::to_int_type(__c)); } else
# 380 "/usr/include/c++/5/streambuf" 3
{
# 381 "/usr/include/c++/5/streambuf" 3
this->gbump(-1);
# 382 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 383 "/usr/include/c++/5/streambuf" 3
}
# 384 "/usr/include/c++/5/streambuf" 3
return __ret;
# 385 "/usr/include/c++/5/streambuf" 3
}
# 397 "/usr/include/c++/5/streambuf" 3
int_type sungetc()
# 398 "/usr/include/c++/5/streambuf" 3
{
# 399 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 400 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->eback() < this->gptr(), true))
# 401 "/usr/include/c++/5/streambuf" 3
{
# 402 "/usr/include/c++/5/streambuf" 3
this->gbump(-1);
# 403 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 404 "/usr/include/c++/5/streambuf" 3
} else {
# 406 "/usr/include/c++/5/streambuf" 3
__ret = this->pbackfail(); }
# 407 "/usr/include/c++/5/streambuf" 3
return __ret;
# 408 "/usr/include/c++/5/streambuf" 3
}
# 424 "/usr/include/c++/5/streambuf" 3
int_type sputc(char_type __c)
# 425 "/usr/include/c++/5/streambuf" 3
{
# 426 "/usr/include/c++/5/streambuf" 3
int_type __ret;
# 427 "/usr/include/c++/5/streambuf" 3
if (__builtin_expect(this->pptr() < this->epptr(), true))
# 428 "/usr/include/c++/5/streambuf" 3
{
# 429 "/usr/include/c++/5/streambuf" 3
(*this->pptr()) = __c;
# 430 "/usr/include/c++/5/streambuf" 3
this->pbump(1);
# 431 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(__c);
# 432 "/usr/include/c++/5/streambuf" 3
} else {
# 434 "/usr/include/c++/5/streambuf" 3
__ret = this->overflow(traits_type::to_int_type(__c)); }
# 435 "/usr/include/c++/5/streambuf" 3
return __ret;
# 436 "/usr/include/c++/5/streambuf" 3
}
# 450 "/usr/include/c++/5/streambuf" 3
streamsize sputn(const char_type *__s, streamsize __n)
# 451 "/usr/include/c++/5/streambuf" 3
{ return this->xsputn(__s, __n); }
# 463 "/usr/include/c++/5/streambuf" 3
protected: basic_streambuf() : _M_in_beg((0)), _M_in_cur((0)), _M_in_end((0)), _M_out_beg((0)), _M_out_cur((0)), _M_out_end((0)), _M_buf_locale(locale())
# 467 "/usr/include/c++/5/streambuf" 3
{ }
# 482 "/usr/include/c++/5/streambuf" 3
char_type *eback() const { return _M_in_beg; }
# 485 "/usr/include/c++/5/streambuf" 3
char_type *gptr() const { return _M_in_cur; }
# 488 "/usr/include/c++/5/streambuf" 3
char_type *egptr() const { return _M_in_end; }
# 498 "/usr/include/c++/5/streambuf" 3
void gbump(int __n) { (_M_in_cur) += __n; }
# 509 "/usr/include/c++/5/streambuf" 3
void setg(char_type *__gbeg, char_type *__gnext, char_type *__gend)
# 510 "/usr/include/c++/5/streambuf" 3
{
# 511 "/usr/include/c++/5/streambuf" 3
(_M_in_beg) = __gbeg;
# 512 "/usr/include/c++/5/streambuf" 3
(_M_in_cur) = __gnext;
# 513 "/usr/include/c++/5/streambuf" 3
(_M_in_end) = __gend;
# 514 "/usr/include/c++/5/streambuf" 3
}
# 529 "/usr/include/c++/5/streambuf" 3
char_type *pbase() const { return _M_out_beg; }
# 532 "/usr/include/c++/5/streambuf" 3
char_type *pptr() const { return _M_out_cur; }
# 535 "/usr/include/c++/5/streambuf" 3
char_type *epptr() const { return _M_out_end; }
# 545 "/usr/include/c++/5/streambuf" 3
void pbump(int __n) { (_M_out_cur) += __n; }
# 555 "/usr/include/c++/5/streambuf" 3
void setp(char_type *__pbeg, char_type *__pend)
# 556 "/usr/include/c++/5/streambuf" 3
{
# 557 "/usr/include/c++/5/streambuf" 3
(_M_out_beg) = ((_M_out_cur) = __pbeg);
# 558 "/usr/include/c++/5/streambuf" 3
(_M_out_end) = __pend;
# 559 "/usr/include/c++/5/streambuf" 3
}
# 576 "/usr/include/c++/5/streambuf" 3
virtual void imbue(const locale &__loc)
# 577 "/usr/include/c++/5/streambuf" 3
{ }
# 591 "/usr/include/c++/5/streambuf" 3
virtual basic_streambuf *setbuf(char_type *, streamsize)
# 592 "/usr/include/c++/5/streambuf" 3
{ return this; }
# 602 "/usr/include/c++/5/streambuf" 3
virtual pos_type seekoff(off_type, ios_base::seekdir, ios_base::openmode = (ios_base::in | ios_base::out))
# 604 "/usr/include/c++/5/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 614 "/usr/include/c++/5/streambuf" 3
virtual pos_type seekpos(pos_type, ios_base::openmode = (ios_base::in | ios_base::out))
# 616 "/usr/include/c++/5/streambuf" 3
{ return (pos_type)((off_type)(-1)); }
# 627 "/usr/include/c++/5/streambuf" 3
virtual int sync() { return 0; }
# 649 "/usr/include/c++/5/streambuf" 3
virtual streamsize showmanyc() { return 0; }
# 665 "/usr/include/c++/5/streambuf" 3
virtual streamsize xsgetn(char_type * __s, streamsize __n);
# 687 "/usr/include/c++/5/streambuf" 3
virtual int_type underflow()
# 688 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 700 "/usr/include/c++/5/streambuf" 3
virtual int_type uflow()
# 701 "/usr/include/c++/5/streambuf" 3
{
# 702 "/usr/include/c++/5/streambuf" 3
int_type __ret = traits_type::eof();
# 703 "/usr/include/c++/5/streambuf" 3
const bool __testeof = traits_type::eq_int_type(this->underflow(), __ret);
# 705 "/usr/include/c++/5/streambuf" 3
if (!__testeof)
# 706 "/usr/include/c++/5/streambuf" 3
{
# 707 "/usr/include/c++/5/streambuf" 3
__ret = traits_type::to_int_type(*this->gptr());
# 708 "/usr/include/c++/5/streambuf" 3
this->gbump(1);
# 709 "/usr/include/c++/5/streambuf" 3
}
# 710 "/usr/include/c++/5/streambuf" 3
return __ret;
# 711 "/usr/include/c++/5/streambuf" 3
}
# 724 "/usr/include/c++/5/streambuf" 3
virtual int_type pbackfail(int_type __c = traits_type::eof())
# 725 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 742 "/usr/include/c++/5/streambuf" 3
virtual streamsize xsputn(const char_type * __s, streamsize __n);
# 768 "/usr/include/c++/5/streambuf" 3
virtual int_type overflow(int_type __c = traits_type::eof())
# 769 "/usr/include/c++/5/streambuf" 3
{ return traits_type::eof(); }
# 783 "/usr/include/c++/5/streambuf" 3
public: void stossc()
# 784 "/usr/include/c++/5/streambuf" 3
{
# 785 "/usr/include/c++/5/streambuf" 3
if (this->gptr() < this->egptr()) {
# 786 "/usr/include/c++/5/streambuf" 3
this->gbump(1); } else {
# 788 "/usr/include/c++/5/streambuf" 3
this->uflow(); }
# 789 "/usr/include/c++/5/streambuf" 3
}
# 794 "/usr/include/c++/5/streambuf" 3
void __safe_gbump(streamsize __n) { (_M_in_cur) += __n; }
# 797 "/usr/include/c++/5/streambuf" 3
void __safe_pbump(streamsize __n) { (_M_out_cur) += __n; }
# 804 "/usr/include/c++/5/streambuf" 3
protected: basic_streambuf(const basic_streambuf &);
# 807 "/usr/include/c++/5/streambuf" 3
basic_streambuf &operator=(const basic_streambuf &);
# 811 "/usr/include/c++/5/streambuf" 3
void swap(basic_streambuf &__sb)
# 812 "/usr/include/c++/5/streambuf" 3
{
# 813 "/usr/include/c++/5/streambuf" 3
std::swap(_M_in_beg, __sb._M_in_beg);
# 814 "/usr/include/c++/5/streambuf" 3
std::swap(_M_in_cur, __sb._M_in_cur);
# 815 "/usr/include/c++/5/streambuf" 3
std::swap(_M_in_end, __sb._M_in_end);
# 816 "/usr/include/c++/5/streambuf" 3
std::swap(_M_out_beg, __sb._M_out_beg);
# 817 "/usr/include/c++/5/streambuf" 3
std::swap(_M_out_cur, __sb._M_out_cur);
# 818 "/usr/include/c++/5/streambuf" 3
std::swap(_M_out_end, __sb._M_out_end);
# 819 "/usr/include/c++/5/streambuf" 3
std::swap(_M_buf_locale, __sb._M_buf_locale);
# 820 "/usr/include/c++/5/streambuf" 3
}
# 822 "/usr/include/c++/5/streambuf" 3
};
# 825 "/usr/include/c++/5/streambuf" 3
template < typename _CharT, typename _Traits >
    std :: basic_streambuf < _CharT, _Traits > ::
    basic_streambuf ( const basic_streambuf & ) = default;
# 829 "/usr/include/c++/5/streambuf" 3
template < typename _CharT, typename _Traits >
    std :: basic_streambuf < _CharT, _Traits > &
    std :: basic_streambuf < _CharT, _Traits > ::
    operator = ( const basic_streambuf & ) = default;
# 838 "/usr/include/c++/5/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout, bool & __ineof);
# 843 "/usr/include/c++/5/streambuf" 3
template<> streamsize __copy_streambufs_eof(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout, bool & __ineof);
# 848 "/usr/include/c++/5/streambuf" 3
}
# 39 "/usr/include/c++/5/bits/streambuf.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 46 "/usr/include/c++/5/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsgetn(char_type *__s, streamsize __n)
# 47 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 48 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 49 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (__ret < __n)
# 50 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 51 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __buf_len = this->egptr() - this->gptr();
# 52 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__buf_len)
# 53 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 54 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 55 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 56 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::copy(__s, this->gptr(), __len);
# 57 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ret += __len;
# 58 "/usr/include/c++/5/bits/streambuf.tcc" 3
__s += __len;
# 59 "/usr/include/c++/5/bits/streambuf.tcc" 3
this->__safe_gbump(__len);
# 60 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 62 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__ret < __n)
# 63 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 64 "/usr/include/c++/5/bits/streambuf.tcc" 3
const int_type __c = this->uflow();
# 65 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 66 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 67 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::assign(*(__s++), traits_type::to_char_type(__c));
# 68 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 69 "/usr/include/c++/5/bits/streambuf.tcc" 3
} else {
# 71 "/usr/include/c++/5/bits/streambuf.tcc" 3
break; }
# 72 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 73 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 74 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 75 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 77 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 80 "/usr/include/c++/5/bits/streambuf.tcc" 3
basic_streambuf< _CharT, _Traits> ::xsputn(const char_type *__s, streamsize __n)
# 81 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 82 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 83 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (__ret < __n)
# 84 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 85 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __buf_len = this->epptr() - this->pptr();
# 86 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__buf_len)
# 87 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 88 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __remaining = __n - __ret;
# 89 "/usr/include/c++/5/bits/streambuf.tcc" 3
const streamsize __len = std::min(__buf_len, __remaining);
# 90 "/usr/include/c++/5/bits/streambuf.tcc" 3
traits_type::copy(this->pptr(), __s, __len);
# 91 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ret += __len;
# 92 "/usr/include/c++/5/bits/streambuf.tcc" 3
__s += __len;
# 93 "/usr/include/c++/5/bits/streambuf.tcc" 3
this->__safe_pbump(__len);
# 94 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 96 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (__ret < __n)
# 97 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 98 "/usr/include/c++/5/bits/streambuf.tcc" 3
int_type __c = this->overflow(traits_type::to_int_type(*__s));
# 99 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (!traits_type::eq_int_type(__c, traits_type::eof()))
# 100 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 101 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 102 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__s;
# 103 "/usr/include/c++/5/bits/streambuf.tcc" 3
} else {
# 105 "/usr/include/c++/5/bits/streambuf.tcc" 3
break; }
# 106 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 107 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 108 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 109 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 114 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> streamsize
# 116 "/usr/include/c++/5/bits/streambuf.tcc" 3
__copy_streambufs_eof(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 117 "/usr/include/c++/5/bits/streambuf.tcc" 3
__sbout, bool &
# 118 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof)
# 119 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 120 "/usr/include/c++/5/bits/streambuf.tcc" 3
streamsize __ret = (0);
# 121 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof = true;
# 122 "/usr/include/c++/5/bits/streambuf.tcc" 3
typename _Traits::int_type __c = (__sbin->sgetc());
# 123 "/usr/include/c++/5/bits/streambuf.tcc" 3
while (!_Traits::eq_int_type(__c, _Traits::eof()))
# 124 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 125 "/usr/include/c++/5/bits/streambuf.tcc" 3
__c = (__sbout->sputc(_Traits::to_char_type(__c)));
# 126 "/usr/include/c++/5/bits/streambuf.tcc" 3
if (_Traits::eq_int_type(__c, _Traits::eof()))
# 127 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 128 "/usr/include/c++/5/bits/streambuf.tcc" 3
__ineof = false;
# 129 "/usr/include/c++/5/bits/streambuf.tcc" 3
break;
# 130 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 131 "/usr/include/c++/5/bits/streambuf.tcc" 3
++__ret;
# 132 "/usr/include/c++/5/bits/streambuf.tcc" 3
__c = (__sbin->snextc());
# 133 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 134 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __ret;
# 135 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 137 "/usr/include/c++/5/bits/streambuf.tcc" 3
template< class _CharT, class _Traits> inline streamsize
# 139 "/usr/include/c++/5/bits/streambuf.tcc" 3
__copy_streambufs(basic_streambuf< _CharT, _Traits> *__sbin, basic_streambuf< _CharT, _Traits> *
# 140 "/usr/include/c++/5/bits/streambuf.tcc" 3
__sbout)
# 141 "/usr/include/c++/5/bits/streambuf.tcc" 3
{
# 142 "/usr/include/c++/5/bits/streambuf.tcc" 3
bool __ineof;
# 143 "/usr/include/c++/5/bits/streambuf.tcc" 3
return __copy_streambufs_eof(__sbin, __sbout, __ineof);
# 144 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 149 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template class basic_streambuf< char, char_traits< char> > ;
# 150 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< char, char_traits< char> > * __sbin, basic_streambuf< char, char_traits< char> > * __sbout);
# 154 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< char, char_traits< char> > (basic_streambuf< char, char_traits< char> > *, basic_streambuf< char, char_traits< char> > *, bool &);
# 160 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template class basic_streambuf< wchar_t, char_traits< wchar_t> > ;
# 161 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs(basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbin, basic_streambuf< wchar_t, char_traits< wchar_t> > * __sbout);
# 165 "/usr/include/c++/5/bits/streambuf.tcc" 3
extern template streamsize __copy_streambufs_eof< wchar_t, char_traits< wchar_t> > (basic_streambuf< wchar_t, char_traits< wchar_t> > *, basic_streambuf< wchar_t, char_traits< wchar_t> > *, bool &);
# 173 "/usr/include/c++/5/bits/streambuf.tcc" 3
}
# 52 "/usr/include/wctype.h" 3
typedef unsigned long wctype_t;
# 72 "/usr/include/wctype.h" 3
enum {
# 73 "/usr/include/wctype.h" 3
__ISwupper,
# 74 "/usr/include/wctype.h" 3
__ISwlower,
# 75 "/usr/include/wctype.h" 3
__ISwalpha,
# 76 "/usr/include/wctype.h" 3
__ISwdigit,
# 77 "/usr/include/wctype.h" 3
__ISwxdigit,
# 78 "/usr/include/wctype.h" 3
__ISwspace,
# 79 "/usr/include/wctype.h" 3
__ISwprint,
# 80 "/usr/include/wctype.h" 3
__ISwgraph,
# 81 "/usr/include/wctype.h" 3
__ISwblank,
# 82 "/usr/include/wctype.h" 3
__ISwcntrl,
# 83 "/usr/include/wctype.h" 3
__ISwpunct,
# 84 "/usr/include/wctype.h" 3
__ISwalnum,
# 86 "/usr/include/wctype.h" 3
_ISwupper = 16777216,
# 87 "/usr/include/wctype.h" 3
_ISwlower = 33554432,
# 88 "/usr/include/wctype.h" 3
_ISwalpha = 67108864,
# 89 "/usr/include/wctype.h" 3
_ISwdigit = 134217728,
# 90 "/usr/include/wctype.h" 3
_ISwxdigit = 268435456,
# 91 "/usr/include/wctype.h" 3
_ISwspace = 536870912,
# 92 "/usr/include/wctype.h" 3
_ISwprint = 1073741824,
# 93 "/usr/include/wctype.h" 3
_ISwgraph = (-2147483647-1),
# 94 "/usr/include/wctype.h" 3
_ISwblank = 65536,
# 95 "/usr/include/wctype.h" 3
_ISwcntrl = 131072,
# 96 "/usr/include/wctype.h" 3
_ISwpunct = 262144,
# 97 "/usr/include/wctype.h" 3
_ISwalnum = 524288
# 98 "/usr/include/wctype.h" 3
};
# 102 "/usr/include/wctype.h" 3
extern "C" {
# 111 "/usr/include/wctype.h" 3
extern int iswalnum(wint_t __wc) throw();
# 117 "/usr/include/wctype.h" 3
extern int iswalpha(wint_t __wc) throw();
# 120 "/usr/include/wctype.h" 3
extern int iswcntrl(wint_t __wc) throw();
# 124 "/usr/include/wctype.h" 3
extern int iswdigit(wint_t __wc) throw();
# 128 "/usr/include/wctype.h" 3
extern int iswgraph(wint_t __wc) throw();
# 133 "/usr/include/wctype.h" 3
extern int iswlower(wint_t __wc) throw();
# 136 "/usr/include/wctype.h" 3
extern int iswprint(wint_t __wc) throw();
# 141 "/usr/include/wctype.h" 3
extern int iswpunct(wint_t __wc) throw();
# 146 "/usr/include/wctype.h" 3
extern int iswspace(wint_t __wc) throw();
# 151 "/usr/include/wctype.h" 3
extern int iswupper(wint_t __wc) throw();
# 156 "/usr/include/wctype.h" 3
extern int iswxdigit(wint_t __wc) throw();
# 162 "/usr/include/wctype.h" 3
extern int iswblank(wint_t __wc) throw();
# 171 "/usr/include/wctype.h" 3
extern wctype_t wctype(const char * __property) throw();
# 175 "/usr/include/wctype.h" 3
extern int iswctype(wint_t __wc, wctype_t __desc) throw();
# 186 "/usr/include/wctype.h" 3
typedef const __int32_t *wctrans_t;
# 194 "/usr/include/wctype.h" 3
extern wint_t towlower(wint_t __wc) throw();
# 197 "/usr/include/wctype.h" 3
extern wint_t towupper(wint_t __wc) throw();
# 200 "/usr/include/wctype.h" 3
}
# 213 "/usr/include/wctype.h" 3
extern "C" {
# 218 "/usr/include/wctype.h" 3
extern wctrans_t wctrans(const char * __property) throw();
# 221 "/usr/include/wctype.h" 3
extern wint_t towctrans(wint_t __wc, wctrans_t __desc) throw();
# 230 "/usr/include/wctype.h" 3
extern int iswalnum_l(wint_t __wc, __locale_t __locale) throw();
# 236 "/usr/include/wctype.h" 3
extern int iswalpha_l(wint_t __wc, __locale_t __locale) throw();
# 239 "/usr/include/wctype.h" 3
extern int iswcntrl_l(wint_t __wc, __locale_t __locale) throw();
# 243 "/usr/include/wctype.h" 3
extern int iswdigit_l(wint_t __wc, __locale_t __locale) throw();
# 247 "/usr/include/wctype.h" 3
extern int iswgraph_l(wint_t __wc, __locale_t __locale) throw();
# 252 "/usr/include/wctype.h" 3
extern int iswlower_l(wint_t __wc, __locale_t __locale) throw();
# 255 "/usr/include/wctype.h" 3
extern int iswprint_l(wint_t __wc, __locale_t __locale) throw();
# 260 "/usr/include/wctype.h" 3
extern int iswpunct_l(wint_t __wc, __locale_t __locale) throw();
# 265 "/usr/include/wctype.h" 3
extern int iswspace_l(wint_t __wc, __locale_t __locale) throw();
# 270 "/usr/include/wctype.h" 3
extern int iswupper_l(wint_t __wc, __locale_t __locale) throw();
# 275 "/usr/include/wctype.h" 3
extern int iswxdigit_l(wint_t __wc, __locale_t __locale) throw();
# 280 "/usr/include/wctype.h" 3
extern int iswblank_l(wint_t __wc, __locale_t __locale) throw();
# 284 "/usr/include/wctype.h" 3
extern wctype_t wctype_l(const char * __property, __locale_t __locale) throw();
# 289 "/usr/include/wctype.h" 3
extern int iswctype_l(wint_t __wc, wctype_t __desc, __locale_t __locale) throw();
# 298 "/usr/include/wctype.h" 3
extern wint_t towlower_l(wint_t __wc, __locale_t __locale) throw();
# 301 "/usr/include/wctype.h" 3
extern wint_t towupper_l(wint_t __wc, __locale_t __locale) throw();
# 305 "/usr/include/wctype.h" 3
extern wctrans_t wctrans_l(const char * __property, __locale_t __locale) throw();
# 309 "/usr/include/wctype.h" 3
extern wint_t towctrans_l(wint_t __wc, wctrans_t __desc, __locale_t __locale) throw();
# 314 "/usr/include/wctype.h" 3
}
# 80 "/usr/include/c++/5/cwctype" 3
namespace std {
# 82 "/usr/include/c++/5/cwctype" 3
using ::wctrans_t;
# 83 "/usr/include/c++/5/cwctype" 3
using ::wctype_t;
# 86 "/usr/include/c++/5/cwctype" 3
using ::iswalnum;
# 87 "/usr/include/c++/5/cwctype" 3
using ::iswalpha;
# 89 "/usr/include/c++/5/cwctype" 3
using ::iswblank;
# 91 "/usr/include/c++/5/cwctype" 3
using ::iswcntrl;
# 92 "/usr/include/c++/5/cwctype" 3
using ::iswctype;
# 93 "/usr/include/c++/5/cwctype" 3
using ::iswdigit;
# 94 "/usr/include/c++/5/cwctype" 3
using ::iswgraph;
# 95 "/usr/include/c++/5/cwctype" 3
using ::iswlower;
# 96 "/usr/include/c++/5/cwctype" 3
using ::iswprint;
# 97 "/usr/include/c++/5/cwctype" 3
using ::iswpunct;
# 98 "/usr/include/c++/5/cwctype" 3
using ::iswspace;
# 99 "/usr/include/c++/5/cwctype" 3
using ::iswupper;
# 100 "/usr/include/c++/5/cwctype" 3
using ::iswxdigit;
# 101 "/usr/include/c++/5/cwctype" 3
using ::towctrans;
# 102 "/usr/include/c++/5/cwctype" 3
using ::towlower;
# 103 "/usr/include/c++/5/cwctype" 3
using ::towupper;
# 104 "/usr/include/c++/5/cwctype" 3
using ::wctrans;
# 105 "/usr/include/c++/5/cwctype" 3
using ::wctype;
# 106 "/usr/include/c++/5/cwctype" 3
}
# 36 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
struct ctype_base {
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
typedef const int *__to_type;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
typedef unsigned short mask;
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask upper = (_ISupper);
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask lower = (_ISlower);
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask alpha = (_ISalpha);
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask digit = (_ISdigit);
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask xdigit = (_ISxdigit);
# 54 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask space = (_ISspace);
# 55 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask print = (_ISprint);
# 56 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask graph = (((_ISalpha) | (_ISdigit)) | (_ISpunct));
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask cntrl = (_IScntrl);
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask punct = (_ISpunct);
# 59 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask alnum = ((_ISalpha) | (_ISdigit));
# 61 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
static const mask blank = (_ISblank);
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
};
# 66 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_base.h" 3
}
# 38 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 50 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
class istreambuf_iterator : public iterator< input_iterator_tag, _CharT, typename _Traits::off_type, _CharT *, _CharT> {
# 64 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 65 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 66 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename _Traits::int_type int_type;
# 67 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 68 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_istream< _CharT, _Traits> istream_type;
# 71 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, ostreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type copy(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ostreambuf_iterator< _CharT2, char_traits< _CharT2> > );
# 77 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, _CharT2 *> ::__type __copy_move_a2(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , _CharT2 *);
# 83 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename ::__gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type find(::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , ::std::istreambuf_iterator< _CharT2, char_traits< _CharT2> > , const _CharT2 &);
# 97 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: mutable streambuf_type *_M_sbuf;
# 98 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
mutable int_type _M_c;
# 102 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: constexpr istreambuf_iterator() noexcept : _M_sbuf((0)), _M_c(traits_type::eof())
# 103 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 106 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator(const istreambuf_iterator &) noexcept = default;
# 108 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
~istreambuf_iterator() = default;
# 112 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator(istream_type &__s) noexcept : _M_sbuf((__s.rdbuf())), _M_c(traits_type::eof())
# 113 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 116 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator(streambuf_type *__s) noexcept : _M_sbuf(__s), _M_c(traits_type::eof())
# 117 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 123 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
char_type operator*() const
# 124 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 132 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return traits_type::to_char_type(_M_get());
# 133 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 137 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator &operator++()
# 138 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 141 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
;
# 142 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 143 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 144 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
((_M_sbuf)->sbumpc());
# 145 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 146 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 147 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 148 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 152 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator operator++(int)
# 153 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 156 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
;
# 158 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
istreambuf_iterator __old = *this;
# 159 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 160 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 161 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__old._M_c) = ((_M_sbuf)->sbumpc());
# 162 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = traits_type::eof();
# 163 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 164 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __old;
# 165 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 172 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool equal(const istreambuf_iterator &__b) const
# 173 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return _M_at_eof() == __b._M_at_eof(); }
# 177 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: int_type _M_get() const
# 178 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 179 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 180 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __ret = __eof;
# 181 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (_M_sbuf)
# 182 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 183 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(_M_c, __eof)) {
# 184 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__ret = (_M_c); } else {
# 185 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__ret = ((_M_sbuf)->sgetc()), __eof)) {
# 187 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_c) = __ret; } else {
# 189 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_sbuf) = 0; } }
# 190 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 191 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __ret;
# 192 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 195 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool _M_at_eof() const
# 196 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 197 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __eof = traits_type::eof();
# 198 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return traits_type::eq_int_type(_M_get(), __eof);
# 199 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 200 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
};
# 202 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 204 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
operator==(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 205 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__b)
# 206 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return (__a.equal(__b)); }
# 208 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits> inline bool
# 210 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
operator!=(const istreambuf_iterator< _CharT, _Traits> &__a, const istreambuf_iterator< _CharT, _Traits> &
# 211 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__b)
# 212 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return !(__a.equal(__b)); }
# 215 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT, class _Traits>
# 216 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
class ostreambuf_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 223 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: typedef _CharT char_type;
# 224 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef _Traits traits_type;
# 225 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_streambuf< _CharT, _Traits> streambuf_type;
# 226 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef basic_ostream< _CharT, _Traits> ostream_type;
# 229 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT2> friend typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, std::ostreambuf_iterator< _CharT2, char_traits< _CharT2> > > ::__type copy(istreambuf_iterator< _CharT2, char_traits< _CharT2> > , istreambuf_iterator< _CharT2, char_traits< _CharT2> > , std::ostreambuf_iterator< _CharT2, char_traits< _CharT2> > );
# 236 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
private: streambuf_type *_M_sbuf;
# 237 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool _M_failed;
# 241 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
public: ostreambuf_iterator(ostream_type &__s) noexcept : _M_sbuf((__s.rdbuf())), _M_failed(!(_M_sbuf))
# 242 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 245 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator(streambuf_type *__s) noexcept : _M_sbuf(__s), _M_failed(!(_M_sbuf))
# 246 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ }
# 250 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator=(_CharT __c)
# 251 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 252 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((!(_M_failed)) && _Traits::eq_int_type(((_M_sbuf)->sputc(__c)), _Traits::eof())) {
# 254 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 255 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 256 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 260 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator*()
# 261 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 265 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++(int)
# 266 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 270 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &operator++()
# 271 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return *this; }
# 275 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool failed() const noexcept
# 276 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{ return _M_failed; }
# 279 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
ostreambuf_iterator &_M_put(const _CharT *__ws, streamsize __len)
# 280 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 281 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__builtin_expect(!(_M_failed), true)) && (__builtin_expect(((this->_M_sbuf)->sputn(__ws, __len)) != __len, false))) {
# 284 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(_M_failed) = true; }
# 285 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return *this;
# 286 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 287 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
};
# 290 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 293 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
copy(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 294 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 295 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 296 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 297 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)) && (!(__result._M_failed)))
# 298 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 299 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
bool __ineof;
# 300 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_streambufs_eof((__first._M_sbuf), (__result._M_sbuf), __ineof);
# 301 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!__ineof) {
# 302 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_failed) = true; }
# 303 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 304 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 305 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 307 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 310 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(_CharT *__first, _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 311 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 312 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 313 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 314 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 315 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 316 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 317 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 319 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 322 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(const _CharT *__first, const _CharT *__last, ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 323 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result)
# 324 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 325 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __num = __last - __first;
# 326 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__num > (0)) {
# 327 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__result._M_put(__first, __num)); }
# 328 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 329 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 331 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type
# 334 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 335 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, _CharT *__result)
# 336 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 337 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 338 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 339 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 340 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 342 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 343 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 344 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 345 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 346 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
while (!traits_type::eq_int_type(__c, traits_type::eof()))
# 347 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 348 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 349 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__n > (1))
# 350 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 351 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
traits_type::copy(__result, (__sb->gptr()), __n);
# 352 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 353 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__result += __n;
# 354 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->underflow());
# 355 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
} else
# 357 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 358 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(*(__result++)) = traits_type::to_char_type(__c);
# 359 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->snextc());
# 360 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 361 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 362 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 363 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __result;
# 364 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 366 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
template< class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, istreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type
# 369 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
find(istreambuf_iterator< _CharT, char_traits< _CharT> > __first, istreambuf_iterator< _CharT, char_traits< _CharT> >
# 370 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__last, const _CharT &__val)
# 371 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 372 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef istreambuf_iterator< _CharT, char_traits< _CharT> > __is_iterator_type;
# 373 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type traits_type;
# 374 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::streambuf_type streambuf_type;
# 375 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
typedef typename istreambuf_iterator< _CharT, char_traits< _CharT> > ::traits_type::int_type int_type;
# 377 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if ((__first._M_sbuf) && (!(__last._M_sbuf)))
# 378 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 379 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const int_type __ival = traits_type::to_int_type(__val);
# 380 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streambuf_type *__sb = ((__first._M_sbuf));
# 381 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
int_type __c = (__sb->sgetc());
# 382 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
while ((!traits_type::eq_int_type(__c, traits_type::eof())) && (!traits_type::eq_int_type(__c, __ival)))
# 384 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 385 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
streamsize __n = (__sb->egptr()) - (__sb->gptr());
# 386 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__n > (1))
# 387 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
{
# 388 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
const _CharT *__p = traits_type::find((__sb->gptr()), __n, __val);
# 390 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (__p) {
# 391 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__n = (__p - (__sb->gptr())); }
# 392 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__sb->__safe_gbump(__n));
# 393 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->sgetc());
# 394 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
} else {
# 396 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
__c = (__sb->snextc()); }
# 397 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 399 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
if (!traits_type::eq_int_type(__c, traits_type::eof())) {
# 400 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__first._M_c) = __c; } else {
# 402 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
(__first._M_sbuf) = 0; }
# 403 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 404 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
return __first;
# 405 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 410 "/usr/include/c++/5/bits/streambuf_iterator.h" 3
}
# 50 "/usr/include/c++/5/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _Tp> void __convert_to_v(const char *, _Tp &, ios_base::iostate &, const __c_locale &) throw();
# 79 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, float &, ios_base::iostate &, const __c_locale &) throw();
# 84 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, double &, ios_base::iostate &, const __c_locale &) throw();
# 89 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void __convert_to_v(const char *, long double &, ios_base::iostate &, const __c_locale &) throw();
# 94 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _Traits>
# 95 "/usr/include/c++/5/bits/locale_facets.h" 3
struct __pad {
# 98 "/usr/include/c++/5/bits/locale_facets.h" 3
static void _S_pad(ios_base & __io, _CharT __fill, _CharT * __news, const _CharT * __olds, streamsize __newlen, streamsize __oldlen);
# 100 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 107 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> _CharT *__add_grouping(_CharT * __s, _CharT __sep, const char * __gbeg, size_t __gsize, const _CharT * __first, const _CharT * __last);
# 116 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline ostreambuf_iterator< _CharT, char_traits< _CharT> >
# 119 "/usr/include/c++/5/bits/locale_facets.h" 3
__write(ostreambuf_iterator< _CharT, char_traits< _CharT> > __s, const _CharT *__ws, int __len)
# 120 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 121 "/usr/include/c++/5/bits/locale_facets.h" 3
(__s._M_put(__ws, __len));
# 122 "/usr/include/c++/5/bits/locale_facets.h" 3
return __s;
# 123 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 126 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> inline _OutIter
# 129 "/usr/include/c++/5/bits/locale_facets.h" 3
__write(_OutIter __s, const _CharT *__ws, int __len)
# 130 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 131 "/usr/include/c++/5/bits/locale_facets.h" 3
for (int __j = 0; __j < __len; (__j++), (++__s)) {
# 132 "/usr/include/c++/5/bits/locale_facets.h" 3
(*__s) = (__ws[__j]); }
# 133 "/usr/include/c++/5/bits/locale_facets.h" 3
return __s;
# 134 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 149 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 150 "/usr/include/c++/5/bits/locale_facets.h" 3
class __ctype_abstract_base : public locale::facet, public ctype_base {
# 155 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 169 "/usr/include/c++/5/bits/locale_facets.h" 3
bool is(mask __m, char_type __c) const
# 170 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_is(__m, __c)); }
# 186 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *is(const char_type *__lo, const char_type *__hi, mask *__vec) const
# 187 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_is(__lo, __hi, __vec)); }
# 202 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *scan_is(mask __m, const char_type *__lo, const char_type *__hi) const
# 203 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_scan_is(__m, __lo, __hi); }
# 218 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *scan_not(mask __m, const char_type *__lo, const char_type *__hi) const
# 219 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_scan_not(__m, __lo, __hi); }
# 232 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 233 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_toupper(__c)); }
# 247 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 248 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_toupper(__lo, __hi)); }
# 261 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 262 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_tolower(__c)); }
# 276 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 277 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_tolower(__lo, __hi)); }
# 293 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type widen(char __c) const
# 294 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_widen(__c)); }
# 312 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 313 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_widen(__lo, __hi, __to)); }
# 331 "/usr/include/c++/5/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 332 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_narrow(__c, __dfault)); }
# 353 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 354 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 355 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_narrow(__lo, __hi, __dfault, __to)); }
# 359 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: explicit __ctype_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }
# 362 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~__ctype_abstract_base() { }
# 378 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const = 0;
# 397 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const = 0;
# 416 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 435 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const = 0;
# 453 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const = 0;
# 470 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const = 0;
# 486 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const = 0;
# 503 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const = 0;
# 522 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const = 0;
# 543 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const = 0;
# 564 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const = 0;
# 589 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const = 0;
# 591 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 611 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 612 "/usr/include/c++/5/bits/locale_facets.h" 3
class ctype : public __ctype_abstract_base< _CharT> {
# 616 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 617 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef typename ::std::__ctype_abstract_base< _CharT> ::mask mask;
# 620 "/usr/include/c++/5/bits/locale_facets.h" 3
static ::std::locale::id id;
# 623 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(::std::size_t __refs = 0) : ::std::__ctype_abstract_base< _CharT> (__refs) { }
# 627 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 630 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 633 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 636 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 639 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 643 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 646 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 649 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 652 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 655 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 658 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __dest) const;
# 661 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type, char __dfault) const;
# 664 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 666 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 668 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 669 "/usr/include/c++/5/bits/locale_facets.h" 3
ctype< _CharT> ::id;
# 681 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype< char> : public locale::facet, public ctype_base {
# 686 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef char char_type;
# 690 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 691 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_del;
# 692 "/usr/include/c++/5/bits/locale_facets.h" 3
__to_type _M_toupper;
# 693 "/usr/include/c++/5/bits/locale_facets.h" 3
__to_type _M_tolower;
# 694 "/usr/include/c++/5/bits/locale_facets.h" 3
const mask *_M_table;
# 695 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_widen_ok;
# 696 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_widen[1 + (static_cast< unsigned char>(-1))];
# 697 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_narrow[1 + (static_cast< unsigned char>(-1))];
# 698 "/usr/include/c++/5/bits/locale_facets.h" 3
mutable char _M_narrow_ok;
# 703 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 705 "/usr/include/c++/5/bits/locale_facets.h" 3
static const size_t table_size = (1 + (static_cast< unsigned char>(-1)));
# 718 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 731 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, const mask * __table = 0, bool __del = false, size_t __refs = 0);
# 744 "/usr/include/c++/5/bits/locale_facets.h" 3
inline bool is(mask __m, char __c) const;
# 759 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *is(const char * __lo, const char * __hi, mask * __vec) const;
# 773 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *scan_is(mask __m, const char * __lo, const char * __hi) const;
# 787 "/usr/include/c++/5/bits/locale_facets.h" 3
inline const char *scan_not(mask __m, const char * __lo, const char * __hi) const;
# 802 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type toupper(char_type __c) const
# 803 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_toupper(__c); }
# 819 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *toupper(char_type *__lo, const char_type *__hi) const
# 820 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_toupper(__lo, __hi); }
# 835 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type tolower(char_type __c) const
# 836 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_tolower(__c); }
# 852 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *tolower(char_type *__lo, const char_type *__hi) const
# 853 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_tolower(__lo, __hi); }
# 872 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type widen(char __c) const
# 873 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 874 "/usr/include/c++/5/bits/locale_facets.h" 3
if (_M_widen_ok) {
# 875 "/usr/include/c++/5/bits/locale_facets.h" 3
return (_M_widen)[static_cast< unsigned char>(__c)]; }
# 876 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_widen_init();
# 877 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_widen(__c);
# 878 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 899 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *widen(const char *__lo, const char *__hi, char_type *__to) const
# 900 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 901 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((_M_widen_ok) == 1)
# 902 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 903 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 904 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 905 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 906 "/usr/include/c++/5/bits/locale_facets.h" 3
if (!(_M_widen_ok)) {
# 907 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_widen_init(); }
# 908 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_widen(__lo, __hi, __to);
# 909 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 930 "/usr/include/c++/5/bits/locale_facets.h" 3
char narrow(char_type __c, char __dfault) const
# 931 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 932 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((_M_narrow)[static_cast< unsigned char>(__c)]) {
# 933 "/usr/include/c++/5/bits/locale_facets.h" 3
return (_M_narrow)[static_cast< unsigned char>(__c)]; }
# 934 "/usr/include/c++/5/bits/locale_facets.h" 3
const char __t = this->do_narrow(__c, __dfault);
# 935 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__t != __dfault) {
# 936 "/usr/include/c++/5/bits/locale_facets.h" 3
((_M_narrow)[static_cast< unsigned char>(__c)]) = __t; }
# 937 "/usr/include/c++/5/bits/locale_facets.h" 3
return __t;
# 938 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 963 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *narrow(const char_type *__lo, const char_type *__hi, char
# 964 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 965 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 966 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__builtin_expect((_M_narrow_ok) == 1, true))
# 967 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 968 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 969 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 970 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 971 "/usr/include/c++/5/bits/locale_facets.h" 3
if (!(_M_narrow_ok)) {
# 972 "/usr/include/c++/5/bits/locale_facets.h" 3
this->_M_narrow_init(); }
# 973 "/usr/include/c++/5/bits/locale_facets.h" 3
return this->do_narrow(__lo, __hi, __dfault, __to);
# 974 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 981 "/usr/include/c++/5/bits/locale_facets.h" 3
const mask *table() const throw()
# 982 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_table; }
# 986 "/usr/include/c++/5/bits/locale_facets.h" 3
static const mask *classic_table() throw();
# 996 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype();
# 1012 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1029 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1045 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1062 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1082 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const
# 1083 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return __c; }
# 1105 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char *__lo, const char *__hi, char_type *__to) const
# 1106 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1107 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1108 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 1109 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1131 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const
# 1132 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return __c; }
# 1157 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type *__lo, const char_type *__hi, char
# 1158 "/usr/include/c++/5/bits/locale_facets.h" 3
__dfault, char *__to) const
# 1159 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1160 "/usr/include/c++/5/bits/locale_facets.h" 3
__builtin_memcpy(__to, __lo, __hi - __lo);
# 1161 "/usr/include/c++/5/bits/locale_facets.h" 3
return __hi;
# 1162 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1165 "/usr/include/c++/5/bits/locale_facets.h" 3
private: void _M_narrow_init() const;
# 1166 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_widen_init() const;
# 1167 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1182 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype< wchar_t> : public __ctype_abstract_base< wchar_t> {
# 1187 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef wchar_t char_type;
# 1188 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef wctype_t __wmask_type;
# 1191 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __c_locale _M_c_locale_ctype;
# 1194 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_narrow_ok;
# 1195 "/usr/include/c++/5/bits/locale_facets.h" 3
char _M_narrow[128];
# 1196 "/usr/include/c++/5/bits/locale_facets.h" 3
wint_t _M_widen[1 + (static_cast< unsigned char>(-1))];
# 1199 "/usr/include/c++/5/bits/locale_facets.h" 3
mask _M_bit[16];
# 1200 "/usr/include/c++/5/bits/locale_facets.h" 3
__wmask_type _M_wmask[16];
# 1205 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 1215 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(size_t __refs = 0);
# 1226 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype(__c_locale __cloc, size_t __refs = 0);
# 1230 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __wmask_type _M_convert_to_wmask(const mask __m) const throw();
# 1234 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~ctype();
# 1250 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual bool do_is(mask __m, char_type __c) const;
# 1269 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_is(const char_type * __lo, const char_type * __hi, mask * __vec) const;
# 1287 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_is(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1305 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_scan_not(mask __m, const char_type * __lo, const char_type * __hi) const;
# 1322 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_toupper(char_type __c) const;
# 1339 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_toupper(char_type * __lo, const char_type * __hi) const;
# 1355 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_tolower(char_type __c) const;
# 1372 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_tolower(char_type * __lo, const char_type * __hi) const;
# 1392 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_widen(char __c) const;
# 1414 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char *do_widen(const char * __lo, const char * __hi, char_type * __to) const;
# 1437 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char do_narrow(char_type __c, char __dfault) const;
# 1463 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual const char_type *do_narrow(const char_type * __lo, const char_type * __hi, char __dfault, char * __to) const;
# 1468 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_initialize_ctype() throw();
# 1469 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1473 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1474 "/usr/include/c++/5/bits/locale_facets.h" 3
class ctype_byname : public ctype< _CharT> {
# 1477 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef typename ::std::ctype< _CharT> ::mask mask;
# 1480 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype_byname(const char * __s, ::std::size_t __refs = 0);
# 1484 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype_byname(const ::std::__cxx11::string &__s, ::std::size_t __refs = 0) : ctype_byname(__s.c_str(), __refs)
# 1485 "/usr/include/c++/5/bits/locale_facets.h" 3
{ }
# 1490 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname() { }
# 1491 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1495 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype_byname< char> : public ctype< char> {
# 1499 "/usr/include/c++/5/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1503 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype_byname(const __cxx11::string & __s, size_t __refs = 0);
# 1508 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1509 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1513 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> class ctype_byname< wchar_t> : public ctype< wchar_t> {
# 1517 "/usr/include/c++/5/bits/locale_facets.h" 3
public: explicit ctype_byname(const char * __s, size_t __refs = 0);
# 1521 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit ctype_byname(const __cxx11::string & __s, size_t __refs = 0);
# 1526 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~ctype_byname();
# 1527 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1531 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 37 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
namespace std __attribute((__visibility__("default"))) {
# 43 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline bool ctype< char> ::is(mask __m, char __c) const
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{ return ((_M_table)[static_cast< unsigned char>(__c)]) & __m; }
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::is(const char *__low, const char *__high, mask *__vec) const
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 50 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while (__low < __high) {
# 51 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
(*(__vec++)) = ((_M_table)[static_cast< unsigned char>(*(__low++))]); }
# 52 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __high;
# 53 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_is(mask __m, const char *__low, const char *__high) const
# 58 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 59 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while ((__low < __high) && (!(((_M_table)[static_cast< unsigned char>(*__low)]) & __m))) {
# 61 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
++__low; }
# 62 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __low;
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 67 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
inline const char *ctype< char> ::scan_not(mask __m, const char *__low, const char *__high) const
# 68 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
{
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
while ((__low < __high) && ((((_M_table)[static_cast< unsigned char>(*__low)]) & __m) != 0)) {
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
++__low; }
# 72 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
return __low;
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 76 "/usr/include/x86_64-linux-gnu/c++/5/bits/ctype_inline.h" 3
}
# 1536 "/usr/include/c++/5/bits/locale_facets.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1541 "/usr/include/c++/5/bits/locale_facets.h" 3
class __num_base {
# 1547 "/usr/include/c++/5/bits/locale_facets.h" 3
public: enum {
# 1548 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ominus,
# 1549 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oplus,
# 1550 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ox,
# 1551 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oX,
# 1552 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_odigits,
# 1553 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_odigits_end = 20,
# 1554 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oudigits = 20,
# 1555 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oudigits_end = 36,
# 1556 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oe = 18,
# 1557 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oE = 34,
# 1558 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_oend = 36
# 1559 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1566 "/usr/include/c++/5/bits/locale_facets.h" 3
static const char *_S_atoms_out;
# 1570 "/usr/include/c++/5/bits/locale_facets.h" 3
static const char *_S_atoms_in;
# 1573 "/usr/include/c++/5/bits/locale_facets.h" 3
enum {
# 1574 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iminus,
# 1575 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iplus,
# 1576 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ix,
# 1577 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iX,
# 1578 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_izero,
# 1579 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_ie = 18,
# 1580 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iE = 24,
# 1581 "/usr/include/c++/5/bits/locale_facets.h" 3
_S_iend = 26
# 1582 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1587 "/usr/include/c++/5/bits/locale_facets.h" 3
static void _S_format_float(const ios_base & __io, char * __fptr, char __mod) throw();
# 1588 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1590 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1591 "/usr/include/c++/5/bits/locale_facets.h" 3
struct __numpunct_cache : public locale::facet {
# 1593 "/usr/include/c++/5/bits/locale_facets.h" 3
const char *_M_grouping;
# 1594 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_grouping_size;
# 1595 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_use_grouping;
# 1596 "/usr/include/c++/5/bits/locale_facets.h" 3
const _CharT *_M_truename;
# 1597 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_truename_size;
# 1598 "/usr/include/c++/5/bits/locale_facets.h" 3
const _CharT *_M_falsename;
# 1599 "/usr/include/c++/5/bits/locale_facets.h" 3
size_t _M_falsename_size;
# 1600 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_decimal_point;
# 1601 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_thousands_sep;
# 1607 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_atoms_out[__num_base::_S_oend];
# 1613 "/usr/include/c++/5/bits/locale_facets.h" 3
_CharT _M_atoms_in[__num_base::_S_iend];
# 1615 "/usr/include/c++/5/bits/locale_facets.h" 3
bool _M_allocated;
# 1617 "/usr/include/c++/5/bits/locale_facets.h" 3
__numpunct_cache(size_t __refs = 0) : locale::facet(__refs), _M_grouping((0)), _M_grouping_size((0)), _M_use_grouping(false), _M_truename((0)), _M_truename_size((0)), _M_falsename((0)), _M_falsename_size((0)), _M_decimal_point(_CharT()), _M_thousands_sep(_CharT()), _M_allocated(false)
# 1623 "/usr/include/c++/5/bits/locale_facets.h" 3
{ }
# 1625 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~__numpunct_cache();
# 1628 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_cache(const locale & __loc);
# 1632 "/usr/include/c++/5/bits/locale_facets.h" 3
private: __numpunct_cache &operator=(const __numpunct_cache &);
# 1635 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit __numpunct_cache(const __numpunct_cache &);
# 1636 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1638 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1639 "/usr/include/c++/5/bits/locale_facets.h" 3
__numpunct_cache< _CharT> ::~__numpunct_cache()
# 1640 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1641 "/usr/include/c++/5/bits/locale_facets.h" 3
if (_M_allocated)
# 1642 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1643 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_grouping);
# 1644 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_truename);
# 1645 "/usr/include/c++/5/bits/locale_facets.h" 3
delete [] (_M_falsename);
# 1646 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1647 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1649 "/usr/include/c++/5/bits/locale_facets.h" 3
inline namespace __cxx11 {
# 1665 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1666 "/usr/include/c++/5/bits/locale_facets.h" 3
class numpunct : public locale::facet {
# 1672 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1673 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1675 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1678 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: __cache_type *_M_data;
# 1682 "/usr/include/c++/5/bits/locale_facets.h" 3
public: static locale::id id;
# 1690 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1692 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1704 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(__cache_type *__cache, size_t __refs = 0) : locale::facet(__refs), _M_data(__cache)
# 1706 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(); }
# 1718 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct(__c_locale __cloc, size_t __refs = 0) : locale::facet(__refs), _M_data((0))
# 1720 "/usr/include/c++/5/bits/locale_facets.h" 3
{ _M_initialize_numpunct(__cloc); }
# 1732 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type decimal_point() const
# 1733 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_decimal_point(); }
# 1745 "/usr/include/c++/5/bits/locale_facets.h" 3
char_type thousands_sep() const
# 1746 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_thousands_sep(); }
# 1776 "/usr/include/c++/5/bits/locale_facets.h" 3
string grouping() const
# 1777 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_grouping(); }
# 1789 "/usr/include/c++/5/bits/locale_facets.h" 3
string_type truename() const
# 1790 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_truename(); }
# 1802 "/usr/include/c++/5/bits/locale_facets.h" 3
string_type falsename() const
# 1803 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return this->do_falsename(); }
# 1808 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~numpunct();
# 1819 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_decimal_point() const
# 1820 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (_M_data)->_M_decimal_point; }
# 1831 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual char_type do_thousands_sep() const
# 1832 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (_M_data)->_M_thousands_sep; }
# 1844 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string do_grouping() const
# 1845 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_grouping); }
# 1857 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string_type do_truename() const
# 1858 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_truename); }
# 1870 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual string_type do_falsename() const
# 1871 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return ((_M_data)->_M_falsename); }
# 1875 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_initialize_numpunct(__c_locale __cloc = 0);
# 1876 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1878 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> locale::id
# 1879 "/usr/include/c++/5/bits/locale_facets.h" 3
numpunct< _CharT> ::id;
# 1882 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> numpunct< char> ::~numpunct();
# 1886 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void numpunct< char> ::_M_initialize_numpunct(__c_locale __cloc);
# 1890 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> numpunct< wchar_t> ::~numpunct();
# 1894 "/usr/include/c++/5/bits/locale_facets.h" 3
template<> void numpunct< wchar_t> ::_M_initialize_numpunct(__c_locale __cloc);
# 1898 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT>
# 1899 "/usr/include/c++/5/bits/locale_facets.h" 3
class numpunct_byname : public numpunct< _CharT> {
# 1902 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1903 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > string_type;
# 1906 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct_byname(const char *__s, ::std::size_t __refs = 0) : ::std::__cxx11::numpunct< _CharT> (__refs)
# 1908 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1909 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 1911 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 1912 "/usr/include/c++/5/bits/locale_facets.h" 3
::std::__c_locale __tmp;
# 1913 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_S_create_c_locale(__tmp, __s));
# 1914 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_M_initialize_numpunct(__tmp));
# 1915 "/usr/include/c++/5/bits/locale_facets.h" 3
(this->_S_destroy_c_locale(__tmp));
# 1916 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1917 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1921 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit numpunct_byname(const ::std::__cxx11::string &__s, ::std::size_t __refs = 0) : numpunct_byname(__s.c_str(), __refs)
# 1922 "/usr/include/c++/5/bits/locale_facets.h" 3
{ }
# 1927 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~numpunct_byname() { }
# 1928 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 1930 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 1947 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _InIter>
# 1948 "/usr/include/c++/5/bits/locale_facets.h" 3
class num_get : public locale::facet {
# 1954 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 1955 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef _InIter iter_type;
# 1959 "/usr/include/c++/5/bits/locale_facets.h" 3
static locale::id id;
# 1969 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit num_get(size_t __refs = 0) : locale::facet(__refs) { }
# 1995 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 1996 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, bool &__v) const
# 1997 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2032 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2033 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long &__v) const
# 2034 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2037 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2038 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2039 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2042 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2043 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2044 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2047 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2048 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2049 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2053 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2054 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long long &__v) const
# 2055 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2058 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2059 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2060 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2092 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2093 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, float &__v) const
# 2094 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2097 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2098 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, double &__v) const
# 2099 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2102 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2103 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long double &__v) const
# 2104 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2135 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type get(iter_type __in, iter_type __end, ios_base &__io, ios_base::iostate &
# 2136 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, void *&__v) const
# 2137 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_get(__in, __end, __io, __err, __v)); }
# 2141 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: virtual ~num_get() { }
# 2143 "/usr/include/c++/5/bits/locale_facets.h" 3
__attribute((__abi_tag__("cxx11" ))) iter_type
# 2145 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_extract_float(iter_type, iter_type, ios_base &, ios_base::iostate &, __cxx11::string &) const;
# 2148 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _ValueT>
# 2149 "/usr/include/c++/5/bits/locale_facets.h" 3
__attribute((__abi_tag__("cxx11" ))) iter_type
# 2148 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_extract_int(iter_type, iter_type, ios_base &, ios_base::iostate &, _ValueT &) const;
# 2154 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< __is_char< _CharT2> ::__value, int> ::__type
# 2156 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_find(const _CharT2 *, size_t __len, _CharT2 __c) const
# 2157 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2158 "/usr/include/c++/5/bits/locale_facets.h" 3
int __ret = (-1);
# 2159 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__len <= (10))
# 2160 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2161 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c < ((_CharT2)(((_CharT2)'0') + __len)))) {
# 2162 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); }
# 2163 "/usr/include/c++/5/bits/locale_facets.h" 3
} else
# 2165 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2166 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'0')) && (__c <= ((_CharT2)'9'))) {
# 2167 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__c - ((_CharT2)'0')); } else {
# 2168 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'a')) && (__c <= ((_CharT2)'f'))) {
# 2169 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'a'))); } else {
# 2170 "/usr/include/c++/5/bits/locale_facets.h" 3
if ((__c >= ((_CharT2)'A')) && (__c <= ((_CharT2)'F'))) {
# 2171 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (10 + (__c - ((_CharT2)'A'))); } } }
# 2172 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2173 "/usr/include/c++/5/bits/locale_facets.h" 3
return __ret;
# 2174 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2176 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT2> typename __gnu_cxx::__enable_if< !__is_char< _CharT2> ::__value, int> ::__type
# 2179 "/usr/include/c++/5/bits/locale_facets.h" 3
_M_find(const _CharT2 *__zero, size_t __len, _CharT2 __c) const
# 2180 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2181 "/usr/include/c++/5/bits/locale_facets.h" 3
int __ret = (-1);
# 2182 "/usr/include/c++/5/bits/locale_facets.h" 3
const char_type *__q = char_traits< _CharT2> ::find(__zero, __len, __c);
# 2183 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__q)
# 2184 "/usr/include/c++/5/bits/locale_facets.h" 3
{
# 2185 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret = (__q - __zero);
# 2186 "/usr/include/c++/5/bits/locale_facets.h" 3
if (__ret > 15) {
# 2187 "/usr/include/c++/5/bits/locale_facets.h" 3
__ret -= 6; }
# 2188 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2189 "/usr/include/c++/5/bits/locale_facets.h" 3
return __ret;
# 2190 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 2208 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, bool &) const;
# 2211 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2212 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long &__v) const
# 2213 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2216 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2217 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned short &__v) const
# 2218 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2221 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2222 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned &__v) const
# 2223 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2226 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2227 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long &__v) const
# 2228 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2232 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2233 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, long long &__v) const
# 2234 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2237 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 2238 "/usr/include/c++/5/bits/locale_facets.h" 3
__err, unsigned long long &__v) const
# 2239 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_extract_int(__beg, __end, __io, __err, __v); }
# 2243 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, float &) const;
# 2246 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, double &) const;
# 2256 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, long double &) const;
# 2261 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_get(iter_type, iter_type, ios_base &, ios_base::iostate &, void *&) const;
# 2270 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 2272 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _InIter> locale::id
# 2273 "/usr/include/c++/5/bits/locale_facets.h" 3
num_get< _CharT, _InIter> ::id;
# 2288 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter>
# 2289 "/usr/include/c++/5/bits/locale_facets.h" 3
class num_put : public locale::facet {
# 2295 "/usr/include/c++/5/bits/locale_facets.h" 3
public: typedef _CharT char_type;
# 2296 "/usr/include/c++/5/bits/locale_facets.h" 3
typedef _OutIter iter_type;
# 2300 "/usr/include/c++/5/bits/locale_facets.h" 3
static locale::id id;
# 2310 "/usr/include/c++/5/bits/locale_facets.h" 3
explicit num_put(size_t __refs = 0) : locale::facet(__refs) { }
# 2328 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 2329 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2370 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2371 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2374 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2375 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2376 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2380 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long long __v) const
# 2381 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2384 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2385 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2386 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2433 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 2434 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2437 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, long double
# 2438 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2439 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2458 "/usr/include/c++/5/bits/locale_facets.h" 3
iter_type put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 2459 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2460 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (this->do_put(__s, __io, __fill, __v)); }
# 2463 "/usr/include/c++/5/bits/locale_facets.h" 3
protected: template< class _ValueT> iter_type _M_insert_float(iter_type, ios_base & __io, char_type __fill, char __mod, _ValueT __v) const;
# 2469 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_group_float(const char * __grouping, size_t __grouping_size, char_type __sep, const char_type * __p, char_type * __new, char_type * __cs, int & __len) const;
# 2473 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _ValueT> iter_type _M_insert_int(iter_type, ios_base & __io, char_type __fill, _ValueT __v) const;
# 2479 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_group_int(const char * __grouping, size_t __grouping_size, char_type __sep, ios_base & __io, char_type * __new, char_type * __cs, int & __len) const;
# 2484 "/usr/include/c++/5/bits/locale_facets.h" 3
void _M_pad(char_type __fill, streamsize __w, ios_base & __io, char_type * __new, const char_type * __cs, int & __len) const;
# 2489 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual ~num_put() { }
# 2506 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base & __io, char_type __fill, bool __v) const;
# 2509 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long __v) const
# 2510 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2513 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long
# 2514 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2515 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2519 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, long long
# 2520 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2521 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2524 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type __s, ios_base &__io, char_type __fill, unsigned long long
# 2525 "/usr/include/c++/5/bits/locale_facets.h" 3
__v) const
# 2526 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return _M_insert_int(__s, __io, __fill, __v); }
# 2530 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, double) const;
# 2538 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, long double) const;
# 2542 "/usr/include/c++/5/bits/locale_facets.h" 3
virtual iter_type do_put(iter_type, ios_base &, char_type, const void *) const;
# 2550 "/usr/include/c++/5/bits/locale_facets.h" 3
};
# 2552 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT, class _OutIter> locale::id
# 2553 "/usr/include/c++/5/bits/locale_facets.h" 3
num_put< _CharT, _OutIter> ::id;
# 2563 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2565 "/usr/include/c++/5/bits/locale_facets.h" 3
isspace(_CharT __c, const locale &__loc)
# 2566 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::space, __c)); }
# 2569 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2571 "/usr/include/c++/5/bits/locale_facets.h" 3
isprint(_CharT __c, const locale &__loc)
# 2572 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::print, __c)); }
# 2575 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2577 "/usr/include/c++/5/bits/locale_facets.h" 3
iscntrl(_CharT __c, const locale &__loc)
# 2578 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::cntrl, __c)); }
# 2581 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2583 "/usr/include/c++/5/bits/locale_facets.h" 3
isupper(_CharT __c, const locale &__loc)
# 2584 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::upper, __c)); }
# 2587 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2589 "/usr/include/c++/5/bits/locale_facets.h" 3
islower(_CharT __c, const locale &__loc)
# 2590 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::lower, __c)); }
# 2593 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2595 "/usr/include/c++/5/bits/locale_facets.h" 3
isalpha(_CharT __c, const locale &__loc)
# 2596 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alpha, __c)); }
# 2599 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2601 "/usr/include/c++/5/bits/locale_facets.h" 3
isdigit(_CharT __c, const locale &__loc)
# 2602 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::digit, __c)); }
# 2605 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2607 "/usr/include/c++/5/bits/locale_facets.h" 3
ispunct(_CharT __c, const locale &__loc)
# 2608 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::punct, __c)); }
# 2611 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2613 "/usr/include/c++/5/bits/locale_facets.h" 3
isxdigit(_CharT __c, const locale &__loc)
# 2614 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::xdigit, __c)); }
# 2617 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2619 "/usr/include/c++/5/bits/locale_facets.h" 3
isalnum(_CharT __c, const locale &__loc)
# 2620 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::alnum, __c)); }
# 2623 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2625 "/usr/include/c++/5/bits/locale_facets.h" 3
isgraph(_CharT __c, const locale &__loc)
# 2626 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::graph, __c)); }
# 2630 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline bool
# 2632 "/usr/include/c++/5/bits/locale_facets.h" 3
isblank(_CharT __c, const locale &__loc)
# 2633 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).is(ctype_base::blank, __c)); }
# 2637 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2639 "/usr/include/c++/5/bits/locale_facets.h" 3
toupper(_CharT __c, const locale &__loc)
# 2640 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).toupper(__c)); }
# 2643 "/usr/include/c++/5/bits/locale_facets.h" 3
template< class _CharT> inline _CharT
# 2645 "/usr/include/c++/5/bits/locale_facets.h" 3
tolower(_CharT __c, const locale &__loc)
# 2646 "/usr/include/c++/5/bits/locale_facets.h" 3
{ return (use_facet< ctype< _CharT> > (__loc).tolower(__c)); }
# 2649 "/usr/include/c++/5/bits/locale_facets.h" 3
}
# 35 "/usr/include/c++/5/bits/locale_facets.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 41 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _Facet>
# 42 "/usr/include/c++/5/bits/locale_facets.tcc" 3
struct __use_cache {
# 45 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _Facet *operator()(const locale & __loc) const;
# 46 "/usr/include/c++/5/bits/locale_facets.tcc" 3
};
# 49 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT>
# 50 "/usr/include/c++/5/bits/locale_facets.tcc" 3
struct __use_cache< __numpunct_cache< _CharT> > {
# 53 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __numpunct_cache< _CharT> *operator()(const locale &__loc) const
# 54 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 55 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __i = (numpunct< _CharT> ::id._M_id)();
# 56 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale::facet **__caches = (__loc._M_impl)->_M_caches;
# 57 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__caches[__i]))
# 58 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 59 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> *__tmp = (0);
# 60 "/usr/include/c++/5/bits/locale_facets.tcc" 3
try
# 61 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 62 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__tmp = (new __numpunct_cache< _CharT> );
# 63 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__tmp->_M_cache(__loc));
# 64 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 65 "/usr/include/c++/5/bits/locale_facets.tcc" 3
catch (...)
# 66 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 67 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete __tmp;
# 68 "/usr/include/c++/5/bits/locale_facets.tcc" 3
throw;
# 69 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 70 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__loc._M_impl)->_M_install_cache(__tmp, __i);
# 71 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 72 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return static_cast< const __numpunct_cache< _CharT> *>(__caches[__i]);
# 73 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 74 "/usr/include/c++/5/bits/locale_facets.tcc" 3
};
# 76 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT> void
# 78 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__numpunct_cache< _CharT> ::_M_cache(const locale &__loc)
# 79 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 80 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::numpunct< _CharT> &__np = use_facet< __cxx11::numpunct< _CharT> > (__loc);
# 82 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char *__grouping = (0);
# 83 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__truename = (0);
# 84 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__falsename = (0);
# 85 "/usr/include/c++/5/bits/locale_facets.tcc" 3
try
# 86 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 87 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::string &__g = (__np.grouping());
# 88 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_grouping_size) = __g.size();
# 89 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__grouping = (new char [_M_grouping_size]);
# 90 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__g.copy(__grouping, _M_grouping_size);
# 91 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_use_grouping) = ((_M_grouping_size) && ((static_cast< signed char>(__grouping[0])) > 0) && ((__grouping[0]) != __gnu_cxx::__numeric_traits_integer< char> ::__max));
# 96 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__tn = (__np.truename());
# 97 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_truename_size) = (__tn.size());
# 98 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__truename = (new _CharT [_M_truename_size]);
# 99 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__tn.copy(__truename, _M_truename_size));
# 101 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cxx11::basic_string< _CharT, char_traits< _CharT> , allocator< _CharT> > &__fn = (__np.falsename());
# 102 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_falsename_size) = (__fn.size());
# 103 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__falsename = (new _CharT [_M_falsename_size]);
# 104 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__fn.copy(__falsename, _M_falsename_size));
# 106 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_decimal_point) = (__np.decimal_point());
# 107 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_thousands_sep) = (__np.thousands_sep());
# 109 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ct = use_facet< ctype< _CharT> > (__loc);
# 110 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_out, __num_base::_S_atoms_out + __num_base::_S_oend, _M_atoms_out));
# 113 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ct.widen(__num_base::_S_atoms_in, __num_base::_S_atoms_in + __num_base::_S_iend, _M_atoms_in));
# 117 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_grouping) = __grouping;
# 118 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_truename) = __truename;
# 119 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_falsename) = __falsename;
# 120 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(_M_allocated) = true;
# 121 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 122 "/usr/include/c++/5/bits/locale_facets.tcc" 3
catch (...)
# 123 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 124 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __grouping;
# 125 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __truename;
# 126 "/usr/include/c++/5/bits/locale_facets.tcc" 3
delete [] __falsename;
# 127 "/usr/include/c++/5/bits/locale_facets.tcc" 3
throw;
# 128 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 129 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 139 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__pure__)) bool
# 140 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__verify_grouping(const char * __grouping, size_t __grouping_size, const __cxx11::string & __grouping_tmp) throw();
# 145 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter>
# 146 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__abi_tag__("cxx11" ))) _InIter
# 149 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_float(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 150 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, __cxx11::string &__xtrc) const
# 151 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 152 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 153 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 154 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 155 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 156 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 157 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 158 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 161 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 164 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__testeof)
# 165 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 166 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 167 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 168 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 171 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 172 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-'));
# 173 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 174 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 176 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 177 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 178 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 181 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_mantissa = false;
# 182 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 183 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 184 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 185 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 187 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else {
# 188 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lit[__num_base::_S_izero]))
# 189 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 190 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__found_mantissa)
# 191 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 192 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('0'));
# 193 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 194 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 195 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 197 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 198 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 200 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 201 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 203 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } }
# 204 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 207 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_dec = false;
# 208 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_sci = false;
# 209 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __found_grouping;
# 210 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 211 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 212 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 214 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 216 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof) {
# 217 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 218 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __digit = _M_find(__lit_zero, 10, __c);
# 219 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit != (-1))
# 220 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 221 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (('0') + __digit));
# 222 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 223 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 224 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__c == (__lc->_M_decimal_point)) && (!__found_dec) && (!__found_sci))
# 226 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 227 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 228 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_dec = true;
# 229 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 230 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 233 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 235 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 236 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_sci = true;
# 239 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 240 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 241 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 242 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 243 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__plus || (__c == (__lit[__num_base::_S_iminus]))) {
# 244 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 246 "/usr/include/c++/5/bits/locale_facets.tcc" 3
continue; }
# 247 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 249 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 250 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 251 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 252 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 253 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 255 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } } }
# 257 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 258 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 260 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 261 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } } else {
# 263 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof) {
# 264 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 267 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 268 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 269 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 270 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 273 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__sep_pos)
# 274 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 275 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 276 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 277 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 279 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 282 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.clear();
# 283 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 284 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 285 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 287 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 288 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 289 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point))
# 290 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 291 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci))
# 292 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 296 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size()) {
# 297 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 298 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('.'));
# 299 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_dec = true;
# 300 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 302 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 303 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 305 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 306 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, 10, __c);
# 308 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__q)
# 309 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 310 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc += ('0' + (__q - __lit_zero));
# 311 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_mantissa = true;
# 312 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 313 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 314 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__c == (__lit[__num_base::_S_ie])) || (__c == (__lit[__num_base::_S_iE]))) && (!__found_sci) && __found_mantissa)
# 317 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 319 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__found_grouping.size()) && (!__found_dec)) {
# 320 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 321 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += ('e'));
# 322 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_sci = true;
# 325 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 326 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 327 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 328 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __plus = __c == (__lit[__num_base::_S_iplus]);
# 329 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__plus || (__c == (__lit[__num_base::_S_iminus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point)))) {
# 333 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__xtrc += (__plus ? '+' : '-')); } else {
# 335 "/usr/include/c++/5/bits/locale_facets.tcc" 3
continue; }
# 336 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 338 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 339 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 340 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 341 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 342 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 344 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } }
# 345 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 347 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 348 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 350 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 351 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } }
# 355 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 356 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 358 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__found_dec) && (!__found_sci)) {
# 359 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos))); }
# 361 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 364 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 365 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 367 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 368 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 370 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter>
# 371 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT>
# 372 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__attribute((__abi_tag__("cxx11" ))) _InIter
# 375 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::_M_extract_int(_InIter __beg, _InIter __end, ios_base &__io, ios_base::iostate &
# 376 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, _ValueT &__v) const
# 377 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 378 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef char_traits< _CharT> __traits_type;
# 379 "/usr/include/c++/5/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 380 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 381 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 382 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 383 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 384 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 385 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_in));
# 386 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_type __c = (char_type());
# 389 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = ((__io.flags()) & ios_base::basefield);
# 391 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __oct = __basefield == ios_base::oct;
# 392 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __base = __oct ? 8 : ((__basefield == ios_base::hex) ? 16 : 10);
# 395 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = __beg == __end;
# 398 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __negative = false;
# 399 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__testeof)
# 400 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 401 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 402 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__negative = (__c == (__lit[__num_base::_S_iminus]));
# 403 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__negative || (__c == (__lit[__num_base::_S_iplus]))) && (!((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))) && (!(__c == (__lc->_M_decimal_point))))
# 406 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 407 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 408 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 410 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 411 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 412 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 416 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __found_zero = false;
# 417 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __sep_pos = 0;
# 418 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 419 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 420 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep))) || (__c == (__lc->_M_decimal_point))) {
# 422 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else {
# 423 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__c == (__lit[__num_base::_S_izero])) && ((!__found_zero) || (__base == 10)))
# 425 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 426 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_zero = true;
# 427 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 428 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 429 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__base = 8; }
# 430 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__base == 8) {
# 431 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0; }
# 432 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 433 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_zero && ((__c == (__lit[__num_base::_S_ix])) || (__c == (__lit[__num_base::_S_iX]))))
# 436 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 437 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == 0) {
# 438 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__base = 16; }
# 439 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__base == 16)
# 440 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 441 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_zero = false;
# 442 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 443 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 445 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 446 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 448 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } } }
# 450 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end)
# 451 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 452 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg);
# 453 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__found_zero) {
# 454 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 455 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 457 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 458 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 462 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __len = (__base == 16) ? (__num_base::_S_iend) - (__num_base::_S_izero) : __base;
# 466 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __found_grouping;
# 467 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping) {
# 468 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__found_grouping.reserve(32); }
# 469 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testfail = false;
# 470 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testoverflow = false;
# 471 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __max = (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) ? -__gnu_cxx::__numeric_traits< _ValueT> ::__min : __gnu_cxx::__numeric_traits< _ValueT> ::__max;
# 475 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __smax = __max / __base;
# 476 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__unsigned_type __result = (0);
# 477 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __digit = 0;
# 478 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__lit_zero = __lit + __num_base::_S_izero;
# 480 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(__lc->_M_allocated)) {
# 482 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 483 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 484 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit = _M_find(__lit_zero, __len, __c);
# 485 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit == (-1)) {
# 486 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 488 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 489 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 491 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 492 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result *= __base;
# 493 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 494 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result += __digit;
# 495 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 496 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 498 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 499 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 501 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 502 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} } else {
# 504 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (!__testeof)
# 505 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 508 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && (__c == (__lc->_M_thousands_sep)))
# 509 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 512 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__sep_pos)
# 513 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 514 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 515 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep_pos = 0;
# 516 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 518 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 519 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testfail = true;
# 520 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 521 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 522 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 523 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__c == (__lc->_M_decimal_point)) {
# 524 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; } else
# 526 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 527 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type *__q = __traits_type::find(__lit_zero, __len, __c);
# 529 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__q) {
# 530 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 532 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit = (__q - __lit_zero);
# 533 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__digit > 15) {
# 534 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__digit -= 6; }
# 535 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__result > __smax) {
# 536 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow = true; } else
# 538 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 539 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result *= __base;
# 540 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testoverflow |= (__result > (__max - __digit));
# 541 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__result += __digit;
# 542 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__sep_pos;
# 543 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 544 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 546 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((++__beg) != __end) {
# 547 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__c = (*__beg); } else {
# 549 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true; }
# 550 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 554 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__found_grouping.size())
# 555 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 557 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__found_grouping += (static_cast< char>(__sep_pos)));
# 559 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!std::__verify_grouping((__lc->_M_grouping), (__lc->_M_grouping_size), __found_grouping)) {
# 562 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; }
# 563 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 567 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((!__sep_pos) && (!__found_zero) && (!(__found_grouping.size()))) || __testfail)
# 569 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 570 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = 0;
# 571 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 572 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 573 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testoverflow)
# 574 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 575 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__negative && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 577 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__min; } else {
# 579 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = __gnu_cxx::__numeric_traits< _ValueT> ::__max; }
# 580 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 581 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 583 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = (__negative ? -__result : __result); } }
# 585 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testeof) {
# 586 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 587 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 588 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 592 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 595 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 596 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, bool &__v) const
# 597 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 598 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!(((__io.flags()) & ios_base::boolalpha)))
# 599 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 603 "/usr/include/c++/5/bits/locale_facets.tcc" 3
long __l = (-1);
# 604 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __l);
# 605 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__l == (0)) || (__l == (1))) {
# 606 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = ((bool)__l); } else
# 608 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 611 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = true;
# 612 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 613 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 614 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 615 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 616 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 618 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 620 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 621 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 622 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 623 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 625 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testf = true;
# 626 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testt = true;
# 627 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __donef = (__lc->_M_falsename_size) == 0;
# 628 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __donet = (__lc->_M_truename_size) == 0;
# 629 "/usr/include/c++/5/bits/locale_facets.tcc" 3
bool __testeof = false;
# 630 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __n = (0);
# 631 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while ((!__donef) || (!__donet))
# 632 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 633 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end)
# 634 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 635 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testeof = true;
# 636 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break;
# 637 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 639 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char_type __c = *__beg;
# 641 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__donef) {
# 642 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testf = (__c == ((__lc->_M_falsename)[__n])); }
# 644 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testf) && __donet) {
# 645 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 647 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (!__donet) {
# 648 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__testt = (__c == ((__lc->_M_truename)[__n])); }
# 650 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testt) && __donef) {
# 651 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 653 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((!__testt) && (!__testf)) {
# 654 "/usr/include/c++/5/bits/locale_facets.tcc" 3
break; }
# 656 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__n;
# 657 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__beg;
# 659 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__donef = ((!__testf) || (__n >= (__lc->_M_falsename_size)));
# 660 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__donet = ((!__testt) || (__n >= (__lc->_M_truename_size)));
# 661 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 662 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testf && (__n == (__lc->_M_falsename_size)) && __n)
# 663 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 664 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = false;
# 665 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size))) {
# 666 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit; } else {
# 668 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit); }
# 669 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 670 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testt && (__n == (__lc->_M_truename_size)) && __n)
# 671 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 672 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = true;
# 673 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = (__testeof ? ios_base::eofbit : ios_base::goodbit);
# 674 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 676 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 679 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = false;
# 680 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err = ios_base::failbit;
# 681 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__testeof) {
# 682 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 683 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 684 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 685 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 686 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 688 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 691 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 692 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, float &__v) const
# 693 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 694 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 695 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 696 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 697 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 698 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 699 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 700 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 701 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 703 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 706 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 707 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, double &__v) const
# 708 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 709 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 710 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 711 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 712 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 713 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 714 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 715 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 716 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 735 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 738 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 739 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, long double &__v) const
# 740 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 741 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cxx11::string __xtrc;
# 742 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__xtrc.reserve(32);
# 743 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_float(__beg, __end, __io, __err, __xtrc);
# 744 "/usr/include/c++/5/bits/locale_facets.tcc" 3
std::__convert_to_v(__xtrc.c_str(), __v, __err, _S_get_c_locale());
# 745 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__beg == __end) {
# 746 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__err |= ios_base::eofbit); }
# 747 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 748 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 750 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _InIter> _InIter
# 753 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_get< _CharT, _InIter> ::do_get(iter_type __beg, iter_type __end, ios_base &__io, ios_base::iostate &
# 754 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__err, void *&__v) const
# 755 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 757 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef ios_base::fmtflags fmtflags;
# 758 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const fmtflags __fmt = __io.flags();
# 759 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags((((__fmt & ((~ios_base::basefield)))) | ios_base::hex));
# 763 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 765 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_UIntPtrType __ul;
# 766 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__beg = _M_extract_int(__beg, __end, __io, __err, __ul);
# 769 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags(__fmt);
# 771 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v = (reinterpret_cast< void *>(__ul));
# 772 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __beg;
# 773 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 777 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 780 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_pad(_CharT __fill, streamsize __w, ios_base &__io, _CharT *
# 781 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__new, const _CharT *__cs, int &__len) const
# 782 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 785 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__pad< _CharT, char_traits< _CharT> > ::_S_pad(__io, __fill, __new, __cs, __w, __len);
# 787 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = (static_cast< int>(__w));
# 788 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 792 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _ValueT> int
# 794 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__int_to_char(_CharT *__bufend, _ValueT __v, const _CharT *__lit, ios_base::fmtflags
# 795 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__flags, bool __dec)
# 796 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 797 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__buf = __bufend;
# 798 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 799 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 801 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 802 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 803 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v % 10) + __num_base::_S_odigits]);
# 804 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v /= 10;
# 805 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 806 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 807 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 808 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::basefield)) == ios_base::oct)
# 809 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 811 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 812 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 813 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 7) + __num_base::_S_odigits]);
# 814 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v >>= 3;
# 815 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 816 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 817 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 819 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 821 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 822 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __case_offset = __uppercase ? __num_base::_S_oudigits : __num_base::_S_odigits;
# 824 "/usr/include/c++/5/bits/locale_facets.tcc" 3
do
# 825 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 826 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__buf)) = (__lit[(__v & 15) + __case_offset]);
# 827 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v >>= 4;
# 828 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 829 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__v != 0);
# 830 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 831 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __bufend - __buf;
# 832 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 836 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 839 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_int(const char *__grouping, size_t __grouping_size, _CharT __sep, ios_base &, _CharT *
# 840 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__new, _CharT *__cs, int &__len) const
# 841 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 842 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__p = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __len);
# 844 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = (__p - __new);
# 845 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 847 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 848 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 851 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_int(_OutIter __s, ios_base &__io, _CharT __fill, _ValueT
# 852 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 853 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 854 "/usr/include/c++/5/bits/locale_facets.tcc" 3
using __gnu_cxx::__add_unsigned;
# 855 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef typename __gnu_cxx::__add_unsigned< _ValueT> ::__type __unsigned_type;
# 856 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 857 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 858 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 859 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 860 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__lit = ((__lc->_M_atoms_out));
# 861 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 864 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __ilen = ((5) * sizeof(_ValueT));
# 865 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __ilen));
# 870 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __basefield = (__flags & ios_base::basefield);
# 871 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __dec = (__basefield != ios_base::oct) && (__basefield != ios_base::hex);
# 873 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __unsigned_type __u = ((__v > 0) || (!__dec)) ? (__unsigned_type)__v : (-((__unsigned_type)__v));
# 876 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len = __int_to_char(__cs + __ilen, __u, __lit, __flags, __dec);
# 877 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs += (__ilen - __len);
# 880 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__lc->_M_use_grouping)
# 881 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 884 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * (__len + 1)) * (2)));
# 887 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_group_int((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __io, __cs2 + 2, __cs, __len);
# 889 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = (__cs2 + 2);
# 890 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 893 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__builtin_expect(__dec, true))
# 894 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 896 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__v >= 0)
# 897 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 898 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showpos))) && __gnu_cxx::__numeric_traits< _ValueT> ::__is_signed) {
# 900 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_oplus])), (++__len); }
# 901 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 903 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_ominus])), (++__len); }
# 904 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 905 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((bool)((__flags & ios_base::showbase))) && __v)
# 906 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 907 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__basefield == ios_base::oct) {
# 908 "/usr/include/c++/5/bits/locale_facets.tcc" 3
((*(--__cs)) = (__lit[__num_base::_S_odigits])), (++__len); } else
# 910 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 912 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __uppercase = (__flags & ios_base::uppercase);
# 913 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[(__num_base::_S_ox) + __uppercase]);
# 915 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(--__cs)) = (__lit[__num_base::_S_odigits]);
# 916 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len += 2;
# 917 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 918 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 921 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 922 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 923 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 924 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__cs3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 926 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __cs3, __cs, __len);
# 927 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = __cs3;
# 928 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 929 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 933 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return std::__write(__s, __cs, __len);
# 934 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 936 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> void
# 939 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_group_float(const char *__grouping, size_t __grouping_size, _CharT
# 940 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__sep, const _CharT *__p, _CharT *__new, _CharT *
# 941 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs, int &__len) const
# 942 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 946 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __declen = (__p) ? __p - __cs : __len;
# 947 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__p2 = std::__add_grouping(__new, __sep, __grouping, __grouping_size, __cs, __cs + __declen);
# 952 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __newlen = __p2 - __new;
# 953 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__p)
# 954 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 955 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_traits< _CharT> ::copy(__p2, __p, __len - __declen);
# 956 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__newlen += (__len - __declen);
# 957 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 958 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = __newlen;
# 959 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 971 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter>
# 972 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _ValueT> _OutIter
# 975 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::_M_insert_float(_OutIter __s, ios_base &__io, _CharT __fill, char __mod, _ValueT
# 976 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 977 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 978 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 979 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 980 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 981 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 984 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __prec = (__io.precision() < (0)) ? 6 : __io.precision();
# 986 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const int __max_digits = (__gnu_cxx::__numeric_traits< _ValueT> ::__digits10);
# 990 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len;
# 992 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char __fbuf[16];
# 993 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__num_base::_S_format_float(__io, __fbuf, __mod);
# 997 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const bool __use_prec = (((__io.flags()) & ios_base::floatfield)) != ios_base::floatfield;
# 1002 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __cs_size = (__max_digits * 3);
# 1003 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char *__cs = static_cast< char *>(__builtin_alloca(__cs_size));
# 1004 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__use_prec) {
# 1005 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v); } else {
# 1008 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __v); }
# 1012 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__len >= __cs_size)
# 1013 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1014 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs_size = (__len + 1);
# 1015 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__cs = (static_cast< char *>(__builtin_alloca(__cs_size)));
# 1016 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__use_prec) {
# 1017 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __prec, __v); } else {
# 1020 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len = std::__convert_from_v(_S_get_c_locale(), __cs, __cs_size, __fbuf, __v); }
# 1022 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1044 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1046 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __len));
# 1048 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ctype.widen(__cs, __cs + __len, __ws));
# 1051 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__wp = (0);
# 1052 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const char *__p = char_traits< char> ::find(__cs, __len, '.');
# 1053 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__p)
# 1054 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1055 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__wp = (__ws + (__p - __cs));
# 1056 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*__wp) = (__lc->_M_decimal_point);
# 1057 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1062 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if ((__lc->_M_use_grouping) && ((__wp || (__len < 3)) || (((__cs[1]) <= ('9')) && ((__cs[2]) <= ('9')) && ((__cs[1]) >= ('0')) && ((__cs[2]) >= ('0')))))
# 1065 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1068 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws2 = static_cast< _CharT *>(__builtin_alloca((sizeof(_CharT) * __len) * (2)));
# 1071 "/usr/include/c++/5/bits/locale_facets.tcc" 3
streamsize __off = (0);
# 1072 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__cs[0]) == ('-')) || ((__cs[0]) == ('+')))
# 1073 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1074 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__off = (1);
# 1075 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__ws2[0]) = (__ws[0]);
# 1076 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len -= 1;
# 1077 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1079 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_group_float((__lc->_M_grouping), (__lc->_M_grouping_size), (__lc->_M_thousands_sep), __wp, __ws2 + __off, __ws + __off, __len);
# 1082 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__len += __off;
# 1084 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__ws = __ws2;
# 1085 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1088 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1089 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1090 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1091 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ws3 = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __w));
# 1093 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_M_pad(__fill, __w, __io, __ws3, __ws, __len);
# 1094 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__ws = __ws3;
# 1095 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1096 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1100 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return std::__write(__s, __ws, __len);
# 1101 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1103 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1106 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, bool __v) const
# 1107 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1108 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1109 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::boolalpha)) == 0)
# 1110 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1111 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const long __l = __v;
# 1112 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, __l);
# 1113 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 1115 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1116 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __numpunct_cache< _CharT> __cache_type;
# 1117 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__use_cache< __numpunct_cache< _CharT> > __uc;
# 1118 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1119 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const __cache_type *__lc = __uc(__loc);
# 1121 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const _CharT *__name = __v ? __lc->_M_truename : (__lc->_M_falsename);
# 1123 "/usr/include/c++/5/bits/locale_facets.tcc" 3
int __len = __v ? __lc->_M_truename_size : (__lc->_M_falsename_size);
# 1126 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __w = __io.width();
# 1127 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__w > (static_cast< streamsize>(__len)))
# 1128 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1129 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const streamsize __plen = __w - __len;
# 1130 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_CharT *__ps = static_cast< _CharT *>(__builtin_alloca(sizeof(_CharT) * __plen));
# 1134 "/usr/include/c++/5/bits/locale_facets.tcc" 3
char_traits< _CharT> ::assign(__ps, __plen, __fill);
# 1135 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1137 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__flags & ios_base::adjustfield)) == ios_base::left)
# 1138 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1139 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1140 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1141 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else
# 1143 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1144 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __ps, __plen);
# 1145 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1146 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1147 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1148 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1149 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.width(0);
# 1150 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = std::__write(__s, __name, __len);
# 1151 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1152 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1153 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1155 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1158 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, double __v) const
# 1159 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, ((char)0), __v); }
# 1169 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1172 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, long double
# 1173 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 1174 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{ return _M_insert_float(__s, __io, __fill, 'L', __v); }
# 1176 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _OutIter> _OutIter
# 1179 "/usr/include/c++/5/bits/locale_facets.tcc" 3
num_put< _CharT, _OutIter> ::do_put(iter_type __s, ios_base &__io, char_type __fill, const void *
# 1180 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__v) const
# 1181 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1182 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __flags = __io.flags();
# 1183 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __fmt = (~((ios_base::basefield | ios_base::uppercase)));
# 1185 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags((((__flags & __fmt)) | ((ios_base::hex | ios_base::showbase))));
# 1189 "/usr/include/c++/5/bits/locale_facets.tcc" 3
typedef __gnu_cxx::__conditional_type< true, unsigned long, unsigned long long> ::__type _UIntPtrType;
# 1191 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__s = _M_insert_int(__s, __io, __fill, reinterpret_cast< _UIntPtrType>(__v));
# 1193 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__io.flags(__flags);
# 1194 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1195 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1206 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT, class _Traits> void
# 1208 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__pad< _CharT, _Traits> ::_S_pad(ios_base &__io, _CharT __fill, _CharT *
# 1209 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__news, const _CharT *__olds, streamsize
# 1210 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__newlen, streamsize __oldlen)
# 1211 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1212 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const size_t __plen = static_cast< size_t>(__newlen - __oldlen);
# 1213 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ios_base::fmtflags __adjust = ((__io.flags()) & ios_base::adjustfield);
# 1216 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__adjust == ios_base::left)
# 1217 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1218 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::copy(__news, __olds, __oldlen);
# 1219 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::assign(__news + __oldlen, __plen, __fill);
# 1220 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return;
# 1221 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1223 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __mod = (0);
# 1224 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (__adjust == ios_base::internal)
# 1225 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1229 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const locale &__loc = __io._M_getloc();
# 1230 "/usr/include/c++/5/bits/locale_facets.tcc" 3
const ctype< _CharT> &__ctype = use_facet< ctype< _CharT> > (__loc);
# 1232 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__ctype.widen('-')) == (__olds[0])) || ((__ctype.widen('+')) == (__olds[0])))
# 1234 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1235 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1236 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__mod = (1);
# 1237 "/usr/include/c++/5/bits/locale_facets.tcc" 3
++__news;
# 1238 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} else {
# 1239 "/usr/include/c++/5/bits/locale_facets.tcc" 3
if (((__ctype.widen('0')) == (__olds[0])) && (__oldlen > (1)) && (((__ctype.widen('x')) == (__olds[1])) || ((__ctype.widen('X')) == (__olds[1]))))
# 1243 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1244 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[0]) = (__olds[0]);
# 1245 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__news[1]) = (__olds[1]);
# 1246 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__mod = (2);
# 1247 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__news += 2;
# 1248 "/usr/include/c++/5/bits/locale_facets.tcc" 3
} }
# 1250 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1251 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::assign(__news, __plen, __fill);
# 1252 "/usr/include/c++/5/bits/locale_facets.tcc" 3
_Traits::copy(__news + __plen, __olds + __mod, __oldlen - __mod);
# 1253 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1255 "/usr/include/c++/5/bits/locale_facets.tcc" 3
template< class _CharT> _CharT *
# 1257 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__add_grouping(_CharT *__s, _CharT __sep, const char *
# 1258 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__gbeg, size_t __gsize, const _CharT *
# 1259 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__first, const _CharT *__last)
# 1260 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1261 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __idx = (0);
# 1262 "/usr/include/c++/5/bits/locale_facets.tcc" 3
size_t __ctr = (0);
# 1264 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (((__last - __first) > (__gbeg[__idx])) && ((static_cast< signed char>(__gbeg[__idx])) > 0) && ((__gbeg[__idx]) != __gnu_cxx::__numeric_traits_integer< char> ::__max))
# 1267 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1268 "/usr/include/c++/5/bits/locale_facets.tcc" 3
__last -= (__gbeg[__idx]);
# 1269 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(__idx < (__gsize - (1))) ? ++__idx : (++__ctr);
# 1270 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1272 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__first != __last) {
# 1273 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1275 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__ctr--)
# 1276 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1277 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1278 "/usr/include/c++/5/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1279 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1280 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1282 "/usr/include/c++/5/bits/locale_facets.tcc" 3
while (__idx--)
# 1283 "/usr/include/c++/5/bits/locale_facets.tcc" 3
{
# 1284 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = __sep;
# 1285 "/usr/include/c++/5/bits/locale_facets.tcc" 3
for (char __i = __gbeg[__idx]; __i > 0; --__i) {
# 1286 "/usr/include/c++/5/bits/locale_facets.tcc" 3
(*(__s++)) = (*(__first++)); }
# 1287 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1289 "/usr/include/c++/5/bits/locale_facets.tcc" 3
return __s;
# 1290 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 1295 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct< char> ;
# 1296 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct_byname< char> ;
# 1297 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_get< char, istreambuf_iterator< char, char_traits< char> > > ;
# 1298 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_put< char, ostreambuf_iterator< char, char_traits< char> > > ;
# 1301 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const ctype< char> &use_facet< ctype< char> > (const locale &);
# 1305 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const __cxx11::numpunct< char> &use_facet< __cxx11::numpunct< char> > (const locale &);
# 1309 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_put< char, ostreambuf_iterator< char, char_traits< char> > > &use_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1313 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_get< char, istreambuf_iterator< char, char_traits< char> > > &use_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &);
# 1317 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< char> > (const locale &) throw();
# 1321 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< __cxx11::numpunct< char> > (const locale &) throw();
# 1325 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< char, ostreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1329 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< char, istreambuf_iterator< char, char_traits< char> > > > (const locale &) throw();
# 1334 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct< wchar_t> ;
# 1335 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class __cxx11::numpunct_byname< wchar_t> ;
# 1336 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1337 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template class num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > ;
# 1340 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const ctype< wchar_t> &use_facet< ctype< wchar_t> > (const locale &);
# 1344 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const __cxx11::numpunct< wchar_t> &use_facet< __cxx11::numpunct< wchar_t> > (const locale &);
# 1348 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1352 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template const num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > &use_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &);
# 1356 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< ctype< wchar_t> > (const locale &) throw();
# 1360 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< __cxx11::numpunct< wchar_t> > (const locale &) throw();
# 1364 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_put< wchar_t, ostreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1368 "/usr/include/c++/5/bits/locale_facets.tcc" 3
extern template bool has_facet< num_get< wchar_t, istreambuf_iterator< wchar_t, char_traits< wchar_t> > > > (const locale &) throw();
# 1375 "/usr/include/c++/5/bits/locale_facets.tcc" 3
}
# 41 "/usr/include/c++/5/bits/basic_ios.h" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/basic_ios.h" 3
template< class _Facet> inline const _Facet &
# 47 "/usr/include/c++/5/bits/basic_ios.h" 3
__check_facet(const _Facet *__f)
# 48 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 49 "/usr/include/c++/5/bits/basic_ios.h" 3
if (!__f) {
# 50 "/usr/include/c++/5/bits/basic_ios.h" 3
__throw_bad_cast(); }
# 51 "/usr/include/c++/5/bits/basic_ios.h" 3
return *__f;
# 52 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 66 "/usr/include/c++/5/bits/basic_ios.h" 3
template< class _CharT, class _Traits>
# 67 "/usr/include/c++/5/bits/basic_ios.h" 3
class basic_ios : public ios_base {
# 76 "/usr/include/c++/5/bits/basic_ios.h" 3
public: typedef _CharT char_type;
# 77 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::int_type int_type;
# 78 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::pos_type pos_type;
# 79 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef typename _Traits::off_type off_type;
# 80 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef _Traits traits_type;
# 87 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef ctype< _CharT> __ctype_type;
# 89 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 91 "/usr/include/c++/5/bits/basic_ios.h" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 96 "/usr/include/c++/5/bits/basic_ios.h" 3
protected: basic_ostream< _CharT, _Traits> *_M_tie;
# 97 "/usr/include/c++/5/bits/basic_ios.h" 3
mutable char_type _M_fill;
# 98 "/usr/include/c++/5/bits/basic_ios.h" 3
mutable bool _M_fill_init;
# 99 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *_M_streambuf;
# 102 "/usr/include/c++/5/bits/basic_ios.h" 3
const __ctype_type *_M_ctype;
# 104 "/usr/include/c++/5/bits/basic_ios.h" 3
const __num_put_type *_M_num_put;
# 106 "/usr/include/c++/5/bits/basic_ios.h" 3
const __num_get_type *_M_num_get;
# 117 "/usr/include/c++/5/bits/basic_ios.h" 3
public: explicit operator bool() const
# 118 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return !this->fail(); }
# 125 "/usr/include/c++/5/bits/basic_ios.h" 3
bool operator!() const
# 126 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return this->fail(); }
# 137 "/usr/include/c++/5/bits/basic_ios.h" 3
iostate rdstate() const
# 138 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return ios_base::_M_streambuf_state; }
# 148 "/usr/include/c++/5/bits/basic_ios.h" 3
void clear(iostate __state = goodbit);
# 157 "/usr/include/c++/5/bits/basic_ios.h" 3
void setstate(iostate __state)
# 158 "/usr/include/c++/5/bits/basic_ios.h" 3
{ this->clear(((this->rdstate()) | __state)); }
# 164 "/usr/include/c++/5/bits/basic_ios.h" 3
void _M_setstate(iostate __state)
# 165 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 168 "/usr/include/c++/5/bits/basic_ios.h" 3
((ios_base::_M_streambuf_state) |= __state);
# 169 "/usr/include/c++/5/bits/basic_ios.h" 3
if (((this->exceptions()) & __state)) {
# 170 "/usr/include/c++/5/bits/basic_ios.h" 3
throw; }
# 171 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 180 "/usr/include/c++/5/bits/basic_ios.h" 3
bool good() const
# 181 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (this->rdstate()) == 0; }
# 190 "/usr/include/c++/5/bits/basic_ios.h" 3
bool eof() const
# 191 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & eofbit)) != 0; }
# 201 "/usr/include/c++/5/bits/basic_ios.h" 3
bool fail() const
# 202 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & ((badbit | failbit)))) != 0; }
# 211 "/usr/include/c++/5/bits/basic_ios.h" 3
bool bad() const
# 212 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (((this->rdstate()) & badbit)) != 0; }
# 222 "/usr/include/c++/5/bits/basic_ios.h" 3
iostate exceptions() const
# 223 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return ios_base::_M_exception; }
# 257 "/usr/include/c++/5/bits/basic_ios.h" 3
void exceptions(iostate __except)
# 258 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 259 "/usr/include/c++/5/bits/basic_ios.h" 3
(ios_base::_M_exception) = __except;
# 260 "/usr/include/c++/5/bits/basic_ios.h" 3
this->clear(ios_base::_M_streambuf_state);
# 261 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 270 "/usr/include/c++/5/bits/basic_ios.h" 3
explicit basic_ios(basic_streambuf< _CharT, _Traits> *__sb) : ios_base(), _M_tie((0)), _M_fill(), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 273 "/usr/include/c++/5/bits/basic_ios.h" 3
{ this->init(__sb); }
# 282 "/usr/include/c++/5/bits/basic_ios.h" 3
virtual ~basic_ios() { }
# 295 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie() const
# 296 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return _M_tie; }
# 307 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *tie(basic_ostream< _CharT, _Traits> *__tiestr)
# 308 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 309 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ostream< _CharT, _Traits> *__old = _M_tie;
# 310 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_tie) = __tiestr;
# 311 "/usr/include/c++/5/bits/basic_ios.h" 3
return __old;
# 312 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 321 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf() const
# 322 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return _M_streambuf; }
# 347 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_streambuf< _CharT, _Traits> *rdbuf(basic_streambuf< _CharT, _Traits> * __sb);
# 361 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ios &copyfmt(const basic_ios & __rhs);
# 370 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type fill() const
# 371 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 372 "/usr/include/c++/5/bits/basic_ios.h" 3
if (!(_M_fill_init))
# 373 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 374 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill) = this->widen(' ');
# 375 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill_init) = true;
# 376 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 377 "/usr/include/c++/5/bits/basic_ios.h" 3
return _M_fill;
# 378 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 390 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type fill(char_type __ch)
# 391 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 392 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type __old = (this->fill());
# 393 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill) = __ch;
# 394 "/usr/include/c++/5/bits/basic_ios.h" 3
return __old;
# 395 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 410 "/usr/include/c++/5/bits/basic_ios.h" 3
locale imbue(const locale & __loc);
# 430 "/usr/include/c++/5/bits/basic_ios.h" 3
char narrow(char_type __c, char __dfault) const
# 431 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).narrow(__c, __dfault)); }
# 449 "/usr/include/c++/5/bits/basic_ios.h" 3
char_type widen(char __c) const
# 450 "/usr/include/c++/5/bits/basic_ios.h" 3
{ return (__check_facet(_M_ctype).widen(__c)); }
# 460 "/usr/include/c++/5/bits/basic_ios.h" 3
protected: basic_ios() : ios_base(), _M_tie((0)), _M_fill(char_type()), _M_fill_init(false), _M_streambuf((0)), _M_ctype((0)), _M_num_put((0)), _M_num_get((0))
# 463 "/usr/include/c++/5/bits/basic_ios.h" 3
{ }
# 472 "/usr/include/c++/5/bits/basic_ios.h" 3
void init(basic_streambuf< _CharT, _Traits> * __sb);
# 475 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ios(const basic_ios &) = delete;
# 476 "/usr/include/c++/5/bits/basic_ios.h" 3
basic_ios &operator=(const basic_ios &) = delete;
# 479 "/usr/include/c++/5/bits/basic_ios.h" 3
void move(basic_ios &__rhs)
# 480 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 481 "/usr/include/c++/5/bits/basic_ios.h" 3
this->ios_base::_M_move(__rhs);
# 482 "/usr/include/c++/5/bits/basic_ios.h" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 483 "/usr/include/c++/5/bits/basic_ios.h" 3
(this->tie((__rhs.tie(nullptr))));
# 484 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill) = (__rhs._M_fill);
# 485 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_fill_init) = (__rhs._M_fill_init);
# 486 "/usr/include/c++/5/bits/basic_ios.h" 3
(_M_streambuf) = nullptr;
# 487 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 490 "/usr/include/c++/5/bits/basic_ios.h" 3
void move(basic_ios &&__rhs)
# 491 "/usr/include/c++/5/bits/basic_ios.h" 3
{ (this->move(__rhs)); }
# 494 "/usr/include/c++/5/bits/basic_ios.h" 3
void swap(basic_ios &__rhs) noexcept
# 495 "/usr/include/c++/5/bits/basic_ios.h" 3
{
# 496 "/usr/include/c++/5/bits/basic_ios.h" 3
this->ios_base::_M_swap(__rhs);
# 497 "/usr/include/c++/5/bits/basic_ios.h" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 498 "/usr/include/c++/5/bits/basic_ios.h" 3
__rhs._M_cache_locale(__rhs.ios_base::_M_ios_locale);
# 499 "/usr/include/c++/5/bits/basic_ios.h" 3
std::swap(_M_tie, __rhs._M_tie);
# 500 "/usr/include/c++/5/bits/basic_ios.h" 3
std::swap(_M_fill, __rhs._M_fill);
# 501 "/usr/include/c++/5/bits/basic_ios.h" 3
std::swap(_M_fill_init, __rhs._M_fill_init);
# 502 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 505 "/usr/include/c++/5/bits/basic_ios.h" 3
void set_rdbuf(basic_streambuf< _CharT, _Traits> *__sb)
# 506 "/usr/include/c++/5/bits/basic_ios.h" 3
{ (_M_streambuf) = __sb; }
# 510 "/usr/include/c++/5/bits/basic_ios.h" 3
void _M_cache_locale(const locale & __loc);
# 511 "/usr/include/c++/5/bits/basic_ios.h" 3
};
# 514 "/usr/include/c++/5/bits/basic_ios.h" 3
}
# 35 "/usr/include/c++/5/bits/basic_ios.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 39 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 41 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::clear(iostate __state)
# 42 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 43 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((this->rdbuf())) {
# 44 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = __state; } else {
# 46 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = ((__state | badbit)); }
# 47 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (((this->exceptions()) & (this->rdstate()))) {
# 48 "/usr/include/c++/5/bits/basic_ios.tcc" 3
__throw_ios_failure("basic_ios::clear"); }
# 49 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 51 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_streambuf< _CharT, _Traits> *
# 53 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::rdbuf(basic_streambuf< _CharT, _Traits> *__sb)
# 54 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 55 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_streambuf< _CharT, _Traits> *__old = _M_streambuf;
# 56 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 57 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->clear();
# 58 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return __old;
# 59 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 61 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> basic_ios< _CharT, _Traits> &
# 63 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::copyfmt(const basic_ios &__rhs)
# 64 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 67 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (this != (&__rhs))
# 68 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 73 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_Words *__words = ((__rhs.ios_base::_M_word_size) <= (_S_local_word_size)) ? ios_base::_M_local_word : (new _Words [__rhs.ios_base::_M_word_size]);
# 77 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_Callback_list *__cb = __rhs.ios_base::_M_callbacks;
# 78 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__cb) {
# 79 "/usr/include/c++/5/bits/basic_ios.tcc" 3
__cb->_M_add_reference(); }
# 80 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(erase_event);
# 81 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((ios_base::_M_word) != (ios_base::_M_local_word))
# 82 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 83 "/usr/include/c++/5/bits/basic_ios.tcc" 3
delete [] (ios_base::_M_word);
# 84 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word) = (0);
# 85 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 86 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_dispose_callbacks();
# 89 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_callbacks) = __cb;
# 90 "/usr/include/c++/5/bits/basic_ios.tcc" 3
for (int __i = 0; __i < (__rhs.ios_base::_M_word_size); ++__i) {
# 91 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(__words[__i]) = ((__rhs.ios_base::_M_word)[__i]); }
# 92 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word) = __words;
# 93 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_word_size) = (__rhs.ios_base::_M_word_size);
# 95 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->flags(__rhs.flags());
# 96 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->width(__rhs.width());
# 97 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->precision(__rhs.precision());
# 98 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(this->tie((__rhs.tie())));
# 99 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(this->fill((__rhs.fill())));
# 100 "/usr/include/c++/5/bits/basic_ios.tcc" 3
((ios_base::_M_ios_locale) = (__rhs.getloc()));
# 101 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 103 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_call_callbacks(copyfmt_event);
# 106 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->exceptions(__rhs.exceptions());
# 107 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 108 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return *this;
# 109 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 112 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> locale
# 114 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::imbue(const locale &__loc)
# 115 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 116 "/usr/include/c++/5/bits/basic_ios.tcc" 3
locale __old(this->getloc());
# 117 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::imbue(__loc);
# 118 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(__loc);
# 119 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if ((this->rdbuf()) != 0) {
# 120 "/usr/include/c++/5/bits/basic_ios.tcc" 3
((this->rdbuf())->pubimbue(__loc)); }
# 121 "/usr/include/c++/5/bits/basic_ios.tcc" 3
return __old;
# 122 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 124 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 126 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::init(basic_streambuf< _CharT, _Traits> *__sb)
# 127 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 129 "/usr/include/c++/5/bits/basic_ios.tcc" 3
this->ios_base::_M_init();
# 132 "/usr/include/c++/5/bits/basic_ios.tcc" 3
_M_cache_locale(ios_base::_M_ios_locale);
# 146 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_fill) = _CharT();
# 147 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_fill_init) = false;
# 149 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_tie) = 0;
# 150 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_exception) = goodbit;
# 151 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_streambuf) = __sb;
# 152 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(ios_base::_M_streambuf_state) = ((__sb) ? goodbit : badbit);
# 153 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 155 "/usr/include/c++/5/bits/basic_ios.tcc" 3
template< class _CharT, class _Traits> void
# 157 "/usr/include/c++/5/bits/basic_ios.tcc" 3
basic_ios< _CharT, _Traits> ::_M_cache_locale(const locale &__loc)
# 158 "/usr/include/c++/5/bits/basic_ios.tcc" 3
{
# 159 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __ctype_type> (__loc), true)) {
# 160 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_ctype) = (&use_facet< __ctype_type> (__loc)); } else {
# 162 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_ctype) = 0; }
# 164 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_put_type> (__loc), true)) {
# 165 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_put) = (&use_facet< __num_put_type> (__loc)); } else {
# 167 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_put) = 0; }
# 169 "/usr/include/c++/5/bits/basic_ios.tcc" 3
if (__builtin_expect(has_facet< __num_get_type> (__loc), true)) {
# 170 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_get) = (&use_facet< __num_get_type> (__loc)); } else {
# 172 "/usr/include/c++/5/bits/basic_ios.tcc" 3
(_M_num_get) = 0; }
# 173 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 178 "/usr/include/c++/5/bits/basic_ios.tcc" 3
extern template class basic_ios< char, char_traits< char> > ;
# 181 "/usr/include/c++/5/bits/basic_ios.tcc" 3
extern template class basic_ios< wchar_t, char_traits< wchar_t> > ;
# 186 "/usr/include/c++/5/bits/basic_ios.tcc" 3
}
# 41 "/usr/include/c++/5/ostream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/5/ostream" 3
class basic_ostream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/5/ostream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/5/ostream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/5/ostream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/5/ostream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/5/ostream" 3
typedef ::std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/5/ostream" 3
typedef basic_ostream __ostream_type;
# 73 "/usr/include/c++/5/ostream" 3
typedef num_put< _CharT, ostreambuf_iterator< _CharT, _Traits> > __num_put_type;
# 74 "/usr/include/c++/5/ostream" 3
typedef ctype< _CharT> __ctype_type;
# 84 "/usr/include/c++/5/ostream" 3
explicit basic_ostream(__streambuf_type *__sb)
# 85 "/usr/include/c++/5/ostream" 3
{ (this->init(__sb)); }
# 93 "/usr/include/c++/5/ostream" 3
virtual ~basic_ostream() { }
# 96 "/usr/include/c++/5/ostream" 3
class sentry;
# 97 "/usr/include/c++/5/ostream" 3
friend class sentry;
# 108 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__ostream_type &(*__pf)(__ostream_type &))
# 109 "/usr/include/c++/5/ostream" 3
{
# 113 "/usr/include/c++/5/ostream" 3
return __pf(*this);
# 114 "/usr/include/c++/5/ostream" 3
}
# 117 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__ios_type &(*__pf)(__ios_type &))
# 118 "/usr/include/c++/5/ostream" 3
{
# 122 "/usr/include/c++/5/ostream" 3
__pf(*this);
# 123 "/usr/include/c++/5/ostream" 3
return *this;
# 124 "/usr/include/c++/5/ostream" 3
}
# 127 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(::std::ios_base &(*__pf)(::std::ios_base &))
# 128 "/usr/include/c++/5/ostream" 3
{
# 132 "/usr/include/c++/5/ostream" 3
__pf(*this);
# 133 "/usr/include/c++/5/ostream" 3
return *this;
# 134 "/usr/include/c++/5/ostream" 3
}
# 166 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long __n)
# 167 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 170 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned long __n)
# 171 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 174 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(bool __n)
# 175 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 178 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(short __n);
# 181 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned short __n)
# 182 "/usr/include/c++/5/ostream" 3
{
# 185 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 186 "/usr/include/c++/5/ostream" 3
}
# 189 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(int __n);
# 192 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned __n)
# 193 "/usr/include/c++/5/ostream" 3
{
# 196 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< unsigned long>(__n));
# 197 "/usr/include/c++/5/ostream" 3
}
# 201 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long long __n)
# 202 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 205 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(unsigned long long __n)
# 206 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__n); }
# 220 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(double __f)
# 221 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__f); }
# 224 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(float __f)
# 225 "/usr/include/c++/5/ostream" 3
{
# 228 "/usr/include/c++/5/ostream" 3
return _M_insert(static_cast< double>(__f));
# 229 "/usr/include/c++/5/ostream" 3
}
# 232 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(long double __f)
# 233 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__f); }
# 245 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(const void *__p)
# 246 "/usr/include/c++/5/ostream" 3
{ return _M_insert(__p); }
# 270 "/usr/include/c++/5/ostream" 3
__ostream_type &operator<<(__streambuf_type * __sb);
# 303 "/usr/include/c++/5/ostream" 3
__ostream_type &put(char_type __c);
# 311 "/usr/include/c++/5/ostream" 3
void _M_write(const char_type *__s, ::std::streamsize __n)
# 312 "/usr/include/c++/5/ostream" 3
{
# 313 "/usr/include/c++/5/ostream" 3
const ::std::streamsize __put = ((this->rdbuf())->sputn(__s, __n));
# 314 "/usr/include/c++/5/ostream" 3
if (__put != __n) {
# 315 "/usr/include/c++/5/ostream" 3
(this->setstate(ios_base::badbit)); }
# 316 "/usr/include/c++/5/ostream" 3
}
# 335 "/usr/include/c++/5/ostream" 3
__ostream_type &write(const char_type * __s, ::std::streamsize __n);
# 348 "/usr/include/c++/5/ostream" 3
__ostream_type &flush();
# 358 "/usr/include/c++/5/ostream" 3
pos_type tellp();
# 369 "/usr/include/c++/5/ostream" 3
__ostream_type &seekp(pos_type);
# 381 "/usr/include/c++/5/ostream" 3
__ostream_type &seekp(off_type, ::std::ios_base::seekdir);
# 384 "/usr/include/c++/5/ostream" 3
protected: basic_ostream()
# 385 "/usr/include/c++/5/ostream" 3
{ (this->init(0)); }
# 389 "/usr/include/c++/5/ostream" 3
basic_ostream(basic_iostream< _CharT, _Traits> &) { }
# 391 "/usr/include/c++/5/ostream" 3
basic_ostream(const basic_ostream &) = delete;
# 393 "/usr/include/c++/5/ostream" 3
basic_ostream(basic_ostream &&__rhs) : __ios_type()
# 395 "/usr/include/c++/5/ostream" 3
{ __ios_type::move(__rhs); }
# 399 "/usr/include/c++/5/ostream" 3
basic_ostream &operator=(const basic_ostream &) = delete;
# 402 "/usr/include/c++/5/ostream" 3
basic_ostream &operator=(basic_ostream &&__rhs)
# 403 "/usr/include/c++/5/ostream" 3
{
# 404 "/usr/include/c++/5/ostream" 3
swap(__rhs);
# 405 "/usr/include/c++/5/ostream" 3
return *this;
# 406 "/usr/include/c++/5/ostream" 3
}
# 409 "/usr/include/c++/5/ostream" 3
void swap(basic_ostream &__rhs)
# 410 "/usr/include/c++/5/ostream" 3
{ __ios_type::swap(__rhs); }
# 413 "/usr/include/c++/5/ostream" 3
template< class _ValueT> __ostream_type &_M_insert(_ValueT __v);
# 416 "/usr/include/c++/5/ostream" 3
};
# 425 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits>
# 426 "/usr/include/c++/5/ostream" 3
class basic_ostream< _CharT, _Traits> ::sentry {
# 429 "/usr/include/c++/5/ostream" 3
bool _M_ok;
# 430 "/usr/include/c++/5/ostream" 3
basic_ostream &_M_os;
# 445 "/usr/include/c++/5/ostream" 3
public: explicit sentry(basic_ostream & __os);
# 454 "/usr/include/c++/5/ostream" 3
~sentry()
# 455 "/usr/include/c++/5/ostream" 3
{
# 457 "/usr/include/c++/5/ostream" 3
if (((bool)(((_M_os).flags()) & ios_base::unitbuf)) && (!uncaught_exception()))
# 458 "/usr/include/c++/5/ostream" 3
{
# 460 "/usr/include/c++/5/ostream" 3
if (((_M_os).rdbuf()) && ((((_M_os).rdbuf())->pubsync()) == (-1))) {
# 461 "/usr/include/c++/5/ostream" 3
((_M_os).setstate(ios_base::badbit)); }
# 462 "/usr/include/c++/5/ostream" 3
}
# 463 "/usr/include/c++/5/ostream" 3
}
# 475 "/usr/include/c++/5/ostream" 3
explicit operator bool() const
# 476 "/usr/include/c++/5/ostream" 3
{ return _M_ok; }
# 477 "/usr/include/c++/5/ostream" 3
};
# 495 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 497 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, _CharT __c)
# 498 "/usr/include/c++/5/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 500 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 502 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, char __c)
# 503 "/usr/include/c++/5/ostream" 3
{ return __out << (__out.widen(__c)); }
# 506 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 508 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, char __c)
# 509 "/usr/include/c++/5/ostream" 3
{ return __ostream_insert(__out, &__c, 1); }
# 512 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 514 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, signed char __c)
# 515 "/usr/include/c++/5/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 517 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 519 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, unsigned char __c)
# 520 "/usr/include/c++/5/ostream" 3
{ return __out << (static_cast< char>(__c)); }
# 537 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 539 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const _CharT *__s)
# 540 "/usr/include/c++/5/ostream" 3
{
# 541 "/usr/include/c++/5/ostream" 3
if (!__s) {
# 542 "/usr/include/c++/5/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 544 "/usr/include/c++/5/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 546 "/usr/include/c++/5/ostream" 3
return __out;
# 547 "/usr/include/c++/5/ostream" 3
}
# 549 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &operator<<(basic_ostream< _CharT, _Traits> & __out, const char * __s);
# 554 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 556 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const char *__s)
# 557 "/usr/include/c++/5/ostream" 3
{
# 558 "/usr/include/c++/5/ostream" 3
if (!__s) {
# 559 "/usr/include/c++/5/ostream" 3
(__out.setstate(ios_base::badbit)); } else {
# 561 "/usr/include/c++/5/ostream" 3
__ostream_insert(__out, __s, static_cast< streamsize>(_Traits::length(__s))); }
# 563 "/usr/include/c++/5/ostream" 3
return __out;
# 564 "/usr/include/c++/5/ostream" 3
}
# 567 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 569 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const signed char *__s)
# 570 "/usr/include/c++/5/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 572 "/usr/include/c++/5/ostream" 3
template< class _Traits> inline basic_ostream< char, _Traits> &
# 574 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< char, _Traits> &__out, const unsigned char *__s)
# 575 "/usr/include/c++/5/ostream" 3
{ return __out << (reinterpret_cast< const char *>(__s)); }
# 588 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 590 "/usr/include/c++/5/ostream" 3
endl(basic_ostream< _CharT, _Traits> &__os)
# 591 "/usr/include/c++/5/ostream" 3
{ return flush((__os.put((__os.widen('\n'))))); }
# 600 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 602 "/usr/include/c++/5/ostream" 3
ends(basic_ostream< _CharT, _Traits> &__os)
# 603 "/usr/include/c++/5/ostream" 3
{ return (__os.put(_CharT())); }
# 610 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits> inline basic_ostream< _CharT, _Traits> &
# 612 "/usr/include/c++/5/ostream" 3
flush(basic_ostream< _CharT, _Traits> &__os)
# 613 "/usr/include/c++/5/ostream" 3
{ return (__os.flush()); }
# 626 "/usr/include/c++/5/ostream" 3
template< class _CharT, class _Traits, class _Tp> inline basic_ostream< _CharT, _Traits> &
# 628 "/usr/include/c++/5/ostream" 3
operator<<(basic_ostream< _CharT, _Traits> &&__os, const _Tp &__x)
# 629 "/usr/include/c++/5/ostream" 3
{
# 630 "/usr/include/c++/5/ostream" 3
__os << __x;
# 631 "/usr/include/c++/5/ostream" 3
return __os;
# 632 "/usr/include/c++/5/ostream" 3
}
# 636 "/usr/include/c++/5/ostream" 3
}
# 41 "/usr/include/c++/5/bits/ostream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::sentry::sentry(basic_ostream &__os) : _M_ok(false), _M_os(__os)
# 49 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 51 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__os.tie()) && (__os.good())) {
# 52 "/usr/include/c++/5/bits/ostream.tcc" 3
((__os.tie())->flush()); }
# 54 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__os.good())) {
# 55 "/usr/include/c++/5/bits/ostream.tcc" 3
(_M_ok) = true; } else {
# 57 "/usr/include/c++/5/bits/ostream.tcc" 3
(__os.setstate(ios_base::failbit)); }
# 58 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 60 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits>
# 61 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _ValueT> basic_ostream< _CharT, _Traits> &
# 64 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::_M_insert(_ValueT __v)
# 65 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 66 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 67 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 68 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 69 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 70 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 71 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 72 "/usr/include/c++/5/bits/ostream.tcc" 3
const __num_put_type &__np = __check_facet((this->_M_num_put));
# 73 "/usr/include/c++/5/bits/ostream.tcc" 3
if (((__np.put(*this, *this, (this->fill()), __v)).failed())) {
# 74 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 75 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 76 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 77 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 78 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 79 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 80 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 81 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 82 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 83 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 84 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 85 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 86 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 87 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 89 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 92 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(short __n)
# 93 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 96 "/usr/include/c++/5/bits/ostream.tcc" 3
const ::std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 97 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__fmt == ::std::ios_base::oct) || (__fmt == ::std::ios_base::hex)) {
# 98 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned short>(__n))); } else {
# 100 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 101 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 103 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 106 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(int __n)
# 107 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 110 "/usr/include/c++/5/bits/ostream.tcc" 3
const ::std::ios_base::fmtflags __fmt = (this->flags()) & ios_base::basefield;
# 111 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((__fmt == ::std::ios_base::oct) || (__fmt == ::std::ios_base::hex)) {
# 112 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(static_cast< unsigned>(__n))); } else {
# 114 "/usr/include/c++/5/bits/ostream.tcc" 3
return _M_insert(static_cast< long>(__n)); }
# 115 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 117 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 120 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::operator<<(__streambuf_type *__sbin)
# 121 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 122 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 123 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 124 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb && __sbin)
# 125 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 126 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 127 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 128 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__copy_streambufs(__sbin, (this->rdbuf()))) {
# 129 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 130 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 131 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 132 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 133 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 134 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 135 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 136 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 137 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 138 "/usr/include/c++/5/bits/ostream.tcc" 3
} else {
# 139 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__sbin) {
# 140 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); } }
# 141 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 142 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 143 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 144 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 146 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 149 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::put(char_type __c)
# 150 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 157 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 158 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 159 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 160 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 161 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 162 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 163 "/usr/include/c++/5/bits/ostream.tcc" 3
const int_type __put = ((this->rdbuf())->sputc(__c));
# 164 "/usr/include/c++/5/bits/ostream.tcc" 3
if (traits_type::eq_int_type(__put, traits_type::eof())) {
# 165 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 166 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 167 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 168 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 169 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 170 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 171 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 172 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 173 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 174 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 175 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 176 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 177 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 178 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 180 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 183 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::write(const _CharT *__s, ::std::streamsize __n)
# 184 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 192 "/usr/include/c++/5/bits/ostream.tcc" 3
sentry __cerb(*this);
# 193 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__cerb)
# 194 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 195 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 196 "/usr/include/c++/5/bits/ostream.tcc" 3
{ _M_write(__s, __n); }
# 197 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 198 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 199 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 200 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 201 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 202 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 203 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 204 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 205 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 206 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 208 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::__ostream_type &
# 211 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::flush()
# 212 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 216 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 217 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 218 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 219 "/usr/include/c++/5/bits/ostream.tcc" 3
if ((this->rdbuf()) && (((this->rdbuf())->pubsync()) == (-1))) {
# 220 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 221 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 222 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 223 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 224 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 225 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 226 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 227 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 228 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 229 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 230 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 231 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 232 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 234 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> typename basic_ostream< _CharT, _Traits> ::pos_type
# 237 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::tellp()
# 238 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 239 "/usr/include/c++/5/bits/ostream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 240 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 241 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 242 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail())) {
# 243 "/usr/include/c++/5/bits/ostream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::out)); }
# 244 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 245 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 246 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 247 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 248 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 249 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 250 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 251 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 252 "/usr/include/c++/5/bits/ostream.tcc" 3
return __ret;
# 253 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 255 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 258 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(pos_type __pos)
# 259 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 260 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 261 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 262 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 263 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail()))
# 264 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 267 "/usr/include/c++/5/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::out));
# 271 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 272 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 273 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 274 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 275 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 276 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 277 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 278 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 279 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 280 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 281 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 282 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 283 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 284 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 285 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 287 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 290 "/usr/include/c++/5/bits/ostream.tcc" 3
basic_ostream< _CharT, _Traits> ::seekp(off_type __off, ::std::ios_base::seekdir __dir)
# 291 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 292 "/usr/include/c++/5/bits/ostream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 293 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 294 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 295 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!(this->fail()))
# 296 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 299 "/usr/include/c++/5/bits/ostream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::out));
# 303 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 304 "/usr/include/c++/5/bits/ostream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 305 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 306 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 307 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 308 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 309 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 310 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 311 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 312 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 313 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 314 "/usr/include/c++/5/bits/ostream.tcc" 3
if (__err) {
# 315 "/usr/include/c++/5/bits/ostream.tcc" 3
(this->setstate(__err)); }
# 316 "/usr/include/c++/5/bits/ostream.tcc" 3
return *this;
# 317 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 319 "/usr/include/c++/5/bits/ostream.tcc" 3
template< class _CharT, class _Traits> basic_ostream< _CharT, _Traits> &
# 321 "/usr/include/c++/5/bits/ostream.tcc" 3
operator<<(basic_ostream< _CharT, _Traits> &__out, const char *__s)
# 322 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 323 "/usr/include/c++/5/bits/ostream.tcc" 3
if (!__s) {
# 324 "/usr/include/c++/5/bits/ostream.tcc" 3
(__out.setstate(ios_base::badbit)); } else
# 326 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 329 "/usr/include/c++/5/bits/ostream.tcc" 3
const size_t __clen = char_traits< char> ::length(__s);
# 330 "/usr/include/c++/5/bits/ostream.tcc" 3
try
# 331 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 332 "/usr/include/c++/5/bits/ostream.tcc" 3
struct __ptr_guard {
# 334 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__p;
# 335 "/usr/include/c++/5/bits/ostream.tcc" 3
__ptr_guard(_CharT *__ip) : __p(__ip) { }
# 336 "/usr/include/c++/5/bits/ostream.tcc" 3
~__ptr_guard() { delete [] (__p); }
# 337 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__get() { return __p; }
# 338 "/usr/include/c++/5/bits/ostream.tcc" 3
} __pg(new _CharT [__clen]);
# 340 "/usr/include/c++/5/bits/ostream.tcc" 3
_CharT *__ws = __pg.__get();
# 341 "/usr/include/c++/5/bits/ostream.tcc" 3
for (size_t __i = (0); __i < __clen; ++__i) {
# 342 "/usr/include/c++/5/bits/ostream.tcc" 3
(__ws[__i]) = (__out.widen(__s[__i])); }
# 343 "/usr/include/c++/5/bits/ostream.tcc" 3
__ostream_insert(__out, __ws, __clen);
# 344 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 345 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 346 "/usr/include/c++/5/bits/ostream.tcc" 3
{
# 347 "/usr/include/c++/5/bits/ostream.tcc" 3
(__out._M_setstate(ios_base::badbit));
# 348 "/usr/include/c++/5/bits/ostream.tcc" 3
throw;
# 349 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 350 "/usr/include/c++/5/bits/ostream.tcc" 3
catch (...)
# 351 "/usr/include/c++/5/bits/ostream.tcc" 3
{ (__out._M_setstate(ios_base::badbit)); }
# 352 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 353 "/usr/include/c++/5/bits/ostream.tcc" 3
return __out;
# 354 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 359 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template class basic_ostream< char, char_traits< char> > ;
# 360 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &endl(basic_ostream< char, char_traits< char> > & __os);
# 361 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &ends(basic_ostream< char, char_traits< char> > & __os);
# 362 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &flush(basic_ostream< char, char_traits< char> > & __os);
# 363 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, char __c);
# 364 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, unsigned char __c);
# 365 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, signed char __c);
# 366 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const char * __s);
# 367 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const unsigned char * __s);
# 368 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > &operator<<(basic_ostream< char, char_traits< char> > & __out, const signed char * __s);
# 370 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long __v);
# 371 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long __v);
# 372 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(bool __v);
# 374 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long long __v);
# 375 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(unsigned long long __v);
# 377 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(double __v);
# 378 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(long double __v);
# 379 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< char, char_traits< char> > ::__ostream_type &basic_ostream< char, char_traits< char> > ::_M_insert(const void * __v);
# 382 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template class basic_ostream< wchar_t, char_traits< wchar_t> > ;
# 383 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &endl(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 384 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &ends(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 385 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &flush(basic_ostream< wchar_t, char_traits< wchar_t> > & __os);
# 386 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, wchar_t __c);
# 387 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, char __c);
# 388 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const wchar_t * __s);
# 389 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > &operator<<(basic_ostream< wchar_t, char_traits< wchar_t> > & __out, const char * __s);
# 391 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long __v);
# 392 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long __v);
# 393 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(bool __v);
# 395 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long long __v);
# 396 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(unsigned long long __v);
# 398 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(double __v);
# 399 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(long double __v);
# 400 "/usr/include/c++/5/bits/ostream.tcc" 3
extern template basic_ostream< wchar_t, char_traits< wchar_t> > ::__ostream_type &basic_ostream< wchar_t, char_traits< wchar_t> > ::_M_insert(const void * __v);
# 405 "/usr/include/c++/5/bits/ostream.tcc" 3
}
# 41 "/usr/include/c++/5/istream" 3
namespace std __attribute((__visibility__("default"))) {
# 57 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 58 "/usr/include/c++/5/istream" 3
class basic_istream : virtual public basic_ios< _CharT, _Traits> {
# 62 "/usr/include/c++/5/istream" 3
public: typedef _CharT char_type;
# 63 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type int_type;
# 64 "/usr/include/c++/5/istream" 3
typedef typename _Traits::pos_type pos_type;
# 65 "/usr/include/c++/5/istream" 3
typedef typename _Traits::off_type off_type;
# 66 "/usr/include/c++/5/istream" 3
typedef _Traits traits_type;
# 69 "/usr/include/c++/5/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 70 "/usr/include/c++/5/istream" 3
typedef ::std::basic_ios< _CharT, _Traits> __ios_type;
# 71 "/usr/include/c++/5/istream" 3
typedef basic_istream __istream_type;
# 73 "/usr/include/c++/5/istream" 3
typedef num_get< _CharT, istreambuf_iterator< _CharT, _Traits> > __num_get_type;
# 74 "/usr/include/c++/5/istream" 3
typedef ctype< _CharT> __ctype_type;
# 82 "/usr/include/c++/5/istream" 3
protected: ::std::streamsize _M_gcount;
# 93 "/usr/include/c++/5/istream" 3
public: explicit basic_istream(__streambuf_type *__sb) : _M_gcount(((::std::streamsize)0))
# 95 "/usr/include/c++/5/istream" 3
{ (this->init(__sb)); }
# 103 "/usr/include/c++/5/istream" 3
virtual ~basic_istream()
# 104 "/usr/include/c++/5/istream" 3
{ (_M_gcount) = ((::std::streamsize)0); }
# 107 "/usr/include/c++/5/istream" 3
class sentry;
# 108 "/usr/include/c++/5/istream" 3
friend class sentry;
# 120 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__istream_type &(*__pf)(__istream_type &))
# 121 "/usr/include/c++/5/istream" 3
{ return __pf(*this); }
# 124 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__ios_type &(*__pf)(__ios_type &))
# 125 "/usr/include/c++/5/istream" 3
{
# 126 "/usr/include/c++/5/istream" 3
__pf(*this);
# 127 "/usr/include/c++/5/istream" 3
return *this;
# 128 "/usr/include/c++/5/istream" 3
}
# 131 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(::std::ios_base &(*__pf)(::std::ios_base &))
# 132 "/usr/include/c++/5/istream" 3
{
# 133 "/usr/include/c++/5/istream" 3
__pf(*this);
# 134 "/usr/include/c++/5/istream" 3
return *this;
# 135 "/usr/include/c++/5/istream" 3
}
# 168 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(bool &__n)
# 169 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 172 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(short & __n);
# 175 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned short &__n)
# 176 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 179 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(int & __n);
# 182 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned &__n)
# 183 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 186 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long &__n)
# 187 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 190 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned long &__n)
# 191 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 195 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long long &__n)
# 196 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 199 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(unsigned long long &__n)
# 200 "/usr/include/c++/5/istream" 3
{ return _M_extract(__n); }
# 214 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(float &__f)
# 215 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 218 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(double &__f)
# 219 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 222 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(long double &__f)
# 223 "/usr/include/c++/5/istream" 3
{ return _M_extract(__f); }
# 235 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(void *&__p)
# 236 "/usr/include/c++/5/istream" 3
{ return _M_extract(__p); }
# 259 "/usr/include/c++/5/istream" 3
__istream_type &operator>>(__streambuf_type * __sb);
# 269 "/usr/include/c++/5/istream" 3
::std::streamsize gcount() const
# 270 "/usr/include/c++/5/istream" 3
{ return _M_gcount; }
# 302 "/usr/include/c++/5/istream" 3
int_type get();
# 316 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type & __c);
# 343 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type * __s, ::std::streamsize __n, char_type __delim);
# 354 "/usr/include/c++/5/istream" 3
__istream_type &get(char_type *__s, ::std::streamsize __n)
# 355 "/usr/include/c++/5/istream" 3
{ return (this->get(__s, __n, (this->widen('\n')))); }
# 377 "/usr/include/c++/5/istream" 3
__istream_type &get(__streambuf_type & __sb, char_type __delim);
# 387 "/usr/include/c++/5/istream" 3
__istream_type &get(__streambuf_type &__sb)
# 388 "/usr/include/c++/5/istream" 3
{ return (this->get(__sb, (this->widen('\n')))); }
# 416 "/usr/include/c++/5/istream" 3
__istream_type &getline(char_type * __s, ::std::streamsize __n, char_type __delim);
# 427 "/usr/include/c++/5/istream" 3
__istream_type &getline(char_type *__s, ::std::streamsize __n)
# 428 "/usr/include/c++/5/istream" 3
{ return (this->getline(__s, __n, (this->widen('\n')))); }
# 451 "/usr/include/c++/5/istream" 3
__istream_type &ignore(::std::streamsize __n, int_type __delim);
# 454 "/usr/include/c++/5/istream" 3
__istream_type &ignore(::std::streamsize __n);
# 457 "/usr/include/c++/5/istream" 3
__istream_type &ignore();
# 468 "/usr/include/c++/5/istream" 3
int_type peek();
# 486 "/usr/include/c++/5/istream" 3
__istream_type &read(char_type * __s, ::std::streamsize __n);
# 505 "/usr/include/c++/5/istream" 3
::std::streamsize readsome(char_type * __s, ::std::streamsize __n);
# 522 "/usr/include/c++/5/istream" 3
__istream_type &putback(char_type __c);
# 538 "/usr/include/c++/5/istream" 3
__istream_type &unget();
# 556 "/usr/include/c++/5/istream" 3
int sync();
# 571 "/usr/include/c++/5/istream" 3
pos_type tellg();
# 586 "/usr/include/c++/5/istream" 3
__istream_type &seekg(pos_type);
# 602 "/usr/include/c++/5/istream" 3
__istream_type &seekg(off_type, ::std::ios_base::seekdir);
# 606 "/usr/include/c++/5/istream" 3
protected: basic_istream() : _M_gcount(((::std::streamsize)0))
# 608 "/usr/include/c++/5/istream" 3
{ (this->init(0)); }
# 611 "/usr/include/c++/5/istream" 3
basic_istream(const basic_istream &) = delete;
# 613 "/usr/include/c++/5/istream" 3
basic_istream(basic_istream &&__rhs) : __ios_type(), _M_gcount(__rhs._M_gcount)
# 615 "/usr/include/c++/5/istream" 3
{
# 616 "/usr/include/c++/5/istream" 3
__ios_type::move(__rhs);
# 617 "/usr/include/c++/5/istream" 3
(__rhs._M_gcount) = (0);
# 618 "/usr/include/c++/5/istream" 3
}
# 622 "/usr/include/c++/5/istream" 3
basic_istream &operator=(const basic_istream &) = delete;
# 625 "/usr/include/c++/5/istream" 3
basic_istream &operator=(basic_istream &&__rhs)
# 626 "/usr/include/c++/5/istream" 3
{
# 627 "/usr/include/c++/5/istream" 3
swap(__rhs);
# 628 "/usr/include/c++/5/istream" 3
return *this;
# 629 "/usr/include/c++/5/istream" 3
}
# 632 "/usr/include/c++/5/istream" 3
void swap(basic_istream &__rhs)
# 633 "/usr/include/c++/5/istream" 3
{
# 634 "/usr/include/c++/5/istream" 3
__ios_type::swap(__rhs);
# 635 "/usr/include/c++/5/istream" 3
std::swap(_M_gcount, __rhs._M_gcount);
# 636 "/usr/include/c++/5/istream" 3
}
# 639 "/usr/include/c++/5/istream" 3
template< class _ValueT> __istream_type &_M_extract(_ValueT & __v);
# 642 "/usr/include/c++/5/istream" 3
};
# 648 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 653 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n);
# 658 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &basic_istream< char, char_traits< char> > ::ignore(streamsize __n, int_type __delim);
# 664 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::getline(char_type * __s, streamsize __n, char_type __delim);
# 669 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n);
# 674 "/usr/include/c++/5/istream" 3
template<> basic_istream< wchar_t, char_traits< wchar_t> > &basic_istream< wchar_t, char_traits< wchar_t> > ::ignore(streamsize __n, int_type __delim);
# 685 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 686 "/usr/include/c++/5/istream" 3
class basic_istream< _CharT, _Traits> ::sentry {
# 689 "/usr/include/c++/5/istream" 3
bool _M_ok;
# 693 "/usr/include/c++/5/istream" 3
public: typedef _Traits traits_type;
# 694 "/usr/include/c++/5/istream" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 695 "/usr/include/c++/5/istream" 3
typedef basic_istream __istream_type;
# 696 "/usr/include/c++/5/istream" 3
typedef typename ::std::basic_istream< _CharT, _Traits> ::__ctype_type __ctype_type;
# 697 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type __int_type;
# 722 "/usr/include/c++/5/istream" 3
explicit sentry(basic_istream & __is, bool __noskipws = false);
# 734 "/usr/include/c++/5/istream" 3
explicit operator bool() const
# 735 "/usr/include/c++/5/istream" 3
{ return _M_ok; }
# 736 "/usr/include/c++/5/istream" 3
};
# 750 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT & __c);
# 754 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 756 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char &__c)
# 757 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 759 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 761 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char &__c)
# 762 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char &>(__c)); }
# 792 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &operator>>(basic_istream< _CharT, _Traits> & __in, _CharT * __s);
# 799 "/usr/include/c++/5/istream" 3
template<> basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char * __s);
# 801 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 803 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, unsigned char *__s)
# 804 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 806 "/usr/include/c++/5/istream" 3
template< class _Traits> inline basic_istream< char, _Traits> &
# 808 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< char, _Traits> &__in, signed char *__s)
# 809 "/usr/include/c++/5/istream" 3
{ return __in >> (reinterpret_cast< char *>(__s)); }
# 823 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits>
# 824 "/usr/include/c++/5/istream" 3
class basic_iostream : public basic_istream< _CharT, _Traits> , public basic_ostream< _CharT, _Traits> {
# 832 "/usr/include/c++/5/istream" 3
public: typedef _CharT char_type;
# 833 "/usr/include/c++/5/istream" 3
typedef typename _Traits::int_type int_type;
# 834 "/usr/include/c++/5/istream" 3
typedef typename _Traits::pos_type pos_type;
# 835 "/usr/include/c++/5/istream" 3
typedef typename _Traits::off_type off_type;
# 836 "/usr/include/c++/5/istream" 3
typedef _Traits traits_type;
# 839 "/usr/include/c++/5/istream" 3
typedef ::std::basic_istream< _CharT, _Traits> __istream_type;
# 840 "/usr/include/c++/5/istream" 3
typedef ::std::basic_ostream< _CharT, _Traits> __ostream_type;
# 849 "/usr/include/c++/5/istream" 3
explicit basic_iostream(basic_streambuf< _CharT, _Traits> *__sb) : __istream_type(__sb), __ostream_type(__sb)
# 850 "/usr/include/c++/5/istream" 3
{ }
# 856 "/usr/include/c++/5/istream" 3
virtual ~basic_iostream() { }
# 859 "/usr/include/c++/5/istream" 3
protected: basic_iostream() : __istream_type(), __ostream_type()
# 860 "/usr/include/c++/5/istream" 3
{ }
# 863 "/usr/include/c++/5/istream" 3
basic_iostream(const basic_iostream &) = delete;
# 865 "/usr/include/c++/5/istream" 3
basic_iostream(basic_iostream &&__rhs) : __istream_type(::std::move(__rhs)), __ostream_type(*this)
# 867 "/usr/include/c++/5/istream" 3
{ }
# 871 "/usr/include/c++/5/istream" 3
basic_iostream &operator=(const basic_iostream &) = delete;
# 874 "/usr/include/c++/5/istream" 3
basic_iostream &operator=(basic_iostream &&__rhs)
# 875 "/usr/include/c++/5/istream" 3
{
# 876 "/usr/include/c++/5/istream" 3
swap(__rhs);
# 877 "/usr/include/c++/5/istream" 3
return *this;
# 878 "/usr/include/c++/5/istream" 3
}
# 881 "/usr/include/c++/5/istream" 3
void swap(basic_iostream &__rhs)
# 882 "/usr/include/c++/5/istream" 3
{ __istream_type::swap(__rhs); }
# 884 "/usr/include/c++/5/istream" 3
};
# 906 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &ws(basic_istream< _CharT, _Traits> & __is);
# 922 "/usr/include/c++/5/istream" 3
template< class _CharT, class _Traits, class _Tp> inline basic_istream< _CharT, _Traits> &
# 924 "/usr/include/c++/5/istream" 3
operator>>(basic_istream< _CharT, _Traits> &&__is, _Tp &__x)
# 925 "/usr/include/c++/5/istream" 3
{
# 926 "/usr/include/c++/5/istream" 3
__is >> __x;
# 927 "/usr/include/c++/5/istream" 3
return __is;
# 928 "/usr/include/c++/5/istream" 3
}
# 932 "/usr/include/c++/5/istream" 3
}
# 41 "/usr/include/c++/5/bits/istream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 45 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 47 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sentry::sentry(basic_istream &__in, bool __noskip) : _M_ok(false)
# 48 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 49 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 50 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.good()))
# 51 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 52 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.tie())) {
# 53 "/usr/include/c++/5/bits/istream.tcc" 3
((__in.tie())->flush()); }
# 54 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__noskip) && ((bool)((__in.flags()) & ios_base::skipws)))
# 55 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 56 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __eof = traits_type::eof();
# 57 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 58 "/usr/include/c++/5/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 60 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = __check_facet((__in._M_ctype));
# 61 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, traits_type::to_char_type(__c)))) {
# 64 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 69 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 70 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 71 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 72 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 74 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__in.good()) && (__err == ::std::ios_base::goodbit)) {
# 75 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_ok) = true; } else
# 77 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 78 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 79 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err));
# 80 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 81 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 83 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits>
# 84 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _ValueT> basic_istream< _CharT, _Traits> &
# 87 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::_M_extract(_ValueT &__v)
# 88 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 89 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 90 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 91 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 92 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 93 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 94 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 95 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 96 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __v));
# 97 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 98 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 99 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 100 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 101 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 102 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 103 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 104 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 105 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 106 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 107 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 108 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 109 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 111 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 114 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(short &__n)
# 115 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 118 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 119 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 120 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 121 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 122 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 123 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 124 "/usr/include/c++/5/bits/istream.tcc" 3
long __l;
# 125 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 126 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 130 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l < ::__gnu_cxx::__numeric_traits_integer< short> ::__min)
# 131 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 132 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 133 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< short> ::__min;
# 134 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 135 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l > ::__gnu_cxx::__numeric_traits_integer< short> ::__max)
# 136 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 137 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 138 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< short> ::__max;
# 139 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 141 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ((short)__l); } }
# 142 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 143 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 144 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 145 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 146 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 147 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 148 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 149 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 150 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 151 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 152 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 153 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 154 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 156 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 159 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(int &__n)
# 160 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 163 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 164 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 165 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 166 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 167 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 168 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 169 "/usr/include/c++/5/bits/istream.tcc" 3
long __l;
# 170 "/usr/include/c++/5/bits/istream.tcc" 3
const __num_get_type &__ng = __check_facet((this->_M_num_get));
# 171 "/usr/include/c++/5/bits/istream.tcc" 3
(__ng.get(*this, 0, *this, __err, __l));
# 175 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l < ::__gnu_cxx::__numeric_traits_integer< int> ::__min)
# 176 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 177 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 178 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< int> ::__min;
# 179 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 180 "/usr/include/c++/5/bits/istream.tcc" 3
if (__l > ::__gnu_cxx::__numeric_traits_integer< int> ::__max)
# 181 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 182 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit);
# 183 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ::__gnu_cxx::__numeric_traits_integer< int> ::__max;
# 184 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 186 "/usr/include/c++/5/bits/istream.tcc" 3
__n = ((int)__l); } }
# 187 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 188 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 189 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 190 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 191 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 192 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 193 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 194 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 195 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 196 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 197 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 198 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 199 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 201 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 204 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::operator>>(__streambuf_type *__sbout)
# 205 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 206 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 207 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, false);
# 208 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && __sbout)
# 209 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 210 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 211 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 212 "/usr/include/c++/5/bits/istream.tcc" 3
bool __ineof;
# 213 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__copy_streambufs_eof((this->rdbuf()), __sbout, __ineof)) {
# 214 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 215 "/usr/include/c++/5/bits/istream.tcc" 3
if (__ineof) {
# 216 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 217 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 218 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 219 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 220 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::failbit));
# 221 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 222 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 223 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 224 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::failbit)); }
# 225 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 226 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__sbout) {
# 227 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); } }
# 228 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 229 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 230 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 231 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 233 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 236 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get()
# 237 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 238 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 239 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = __eof;
# 240 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 241 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 242 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 243 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 244 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 245 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 246 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 247 "/usr/include/c++/5/bits/istream.tcc" 3
__c = ((this->rdbuf())->sbumpc());
# 249 "/usr/include/c++/5/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__c, __eof)) {
# 250 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1); } else {
# 252 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 253 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 254 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 255 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 256 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 257 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 258 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 259 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 260 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 261 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 262 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 263 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 264 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 265 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 266 "/usr/include/c++/5/bits/istream.tcc" 3
return __c;
# 267 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 269 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 272 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type &__c)
# 273 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 274 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 275 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 276 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 277 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 278 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 279 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 280 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 281 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __cb = ((this->rdbuf())->sbumpc());
# 283 "/usr/include/c++/5/bits/istream.tcc" 3
if (!traits_type::eq_int_type(__cb, traits_type::eof()))
# 284 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 285 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1);
# 286 "/usr/include/c++/5/bits/istream.tcc" 3
__c = traits_type::to_char_type(__cb);
# 287 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 289 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 290 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 291 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 292 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 293 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 294 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 295 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 296 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 297 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 298 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 299 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 300 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 301 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 302 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 303 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 304 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 306 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 309 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(char_type *__s, ::std::streamsize __n, char_type __delim)
# 310 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 311 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 312 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 313 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 314 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 315 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 316 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 317 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 318 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 319 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 320 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 321 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 323 "/usr/include/c++/5/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 326 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 327 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 328 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 329 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 330 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 331 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 332 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 333 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 334 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 335 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 336 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 337 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 338 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 339 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 340 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 341 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 344 "/usr/include/c++/5/bits/istream.tcc" 3
if (__n > (0)) {
# 345 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type(); }
# 346 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 347 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 348 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 349 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 350 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 351 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 353 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 356 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::get(__streambuf_type &__sb, char_type __delim)
# 357 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 358 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 359 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 360 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 361 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 362 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 363 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 364 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 365 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 366 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 367 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__this_sb = (this->rdbuf());
# 368 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__this_sb->sgetc());
# 369 "/usr/include/c++/5/bits/istream.tcc" 3
char_type __c2 = traits_type::to_char_type(__c);
# 371 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)) && (!traits_type::eq_int_type((__sb.sputc(__c2)), __eof)))
# 374 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 375 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 376 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__this_sb->snextc());
# 377 "/usr/include/c++/5/bits/istream.tcc" 3
__c2 = traits_type::to_char_type(__c);
# 378 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 379 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 380 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 381 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 382 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 383 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 384 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 385 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 386 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 387 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 388 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 389 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 390 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 391 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 392 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 393 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 394 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 395 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 397 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 400 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::getline(char_type *__s, ::std::streamsize __n, char_type __delim)
# 401 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 402 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 403 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 404 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 405 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 406 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 407 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 408 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 409 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __idelim = traits_type::to_int_type(__delim);
# 410 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 411 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 412 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 414 "/usr/include/c++/5/bits/istream.tcc" 3
while ((((_M_gcount) + (1)) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __idelim)))
# 417 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 418 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = traits_type::to_char_type(__c);
# 419 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 420 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 421 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 422 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 423 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else
# 425 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 426 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __idelim))
# 427 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 428 "/usr/include/c++/5/bits/istream.tcc" 3
(__sb->sbumpc());
# 429 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 430 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 432 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 433 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 434 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 435 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 436 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 437 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 438 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 439 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 440 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 441 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 442 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 445 "/usr/include/c++/5/bits/istream.tcc" 3
if (__n > (0)) {
# 446 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type(); }
# 447 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(_M_gcount)) {
# 448 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 449 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 450 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 451 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 452 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 457 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 460 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore()
# 461 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 462 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 463 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 464 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 465 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 466 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 467 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 468 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 469 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 470 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 472 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type((__sb->sbumpc()), __eof)) {
# 473 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else {
# 475 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (1); }
# 476 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 477 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 478 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 479 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 480 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 481 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 482 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 483 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 484 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 485 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 486 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 487 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 488 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 490 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 493 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(::std::streamsize __n)
# 494 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 495 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 496 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 497 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 498 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 499 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 500 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 501 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 502 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 503 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 504 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 513 "/usr/include/c++/5/bits/istream.tcc" 3
bool __large_ignore = false;
# 514 "/usr/include/c++/5/bits/istream.tcc" 3
while (true)
# 515 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 516 "/usr/include/c++/5/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)))
# 518 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 519 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 520 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 521 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 522 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__n == ::__gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)))
# 524 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 525 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__min;
# 527 "/usr/include/c++/5/bits/istream.tcc" 3
__large_ignore = true;
# 528 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 530 "/usr/include/c++/5/bits/istream.tcc" 3
break; }
# 531 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 533 "/usr/include/c++/5/bits/istream.tcc" 3
if (__large_ignore) {
# 534 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 536 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 537 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 538 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 539 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 540 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 541 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 542 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 543 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 544 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 545 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 546 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 547 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 548 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 549 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 550 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 552 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 555 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::ignore(::std::streamsize __n, int_type __delim)
# 556 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 557 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 558 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 559 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb && (__n > (0)))
# 560 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 561 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 562 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 563 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 564 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 565 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 566 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 569 "/usr/include/c++/5/bits/istream.tcc" 3
bool __large_ignore = false;
# 570 "/usr/include/c++/5/bits/istream.tcc" 3
while (true)
# 571 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 572 "/usr/include/c++/5/bits/istream.tcc" 3
while (((_M_gcount) < __n) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 575 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 576 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount);
# 577 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 578 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 579 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__n == ::__gnu_cxx::__numeric_traits_integer< long> ::__max) && (!traits_type::eq_int_type(__c, __eof)) && (!traits_type::eq_int_type(__c, __delim)))
# 582 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 583 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__min;
# 585 "/usr/include/c++/5/bits/istream.tcc" 3
__large_ignore = true;
# 586 "/usr/include/c++/5/bits/istream.tcc" 3
} else {
# 588 "/usr/include/c++/5/bits/istream.tcc" 3
break; }
# 589 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 591 "/usr/include/c++/5/bits/istream.tcc" 3
if (__large_ignore) {
# 592 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ::__gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 594 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __eof)) {
# 595 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } else {
# 596 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, __delim))
# 597 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 598 "/usr/include/c++/5/bits/istream.tcc" 3
if ((_M_gcount) < ::__gnu_cxx::__numeric_traits_integer< long> ::__max) {
# 600 "/usr/include/c++/5/bits/istream.tcc" 3
++(_M_gcount); }
# 601 "/usr/include/c++/5/bits/istream.tcc" 3
(__sb->sbumpc());
# 602 "/usr/include/c++/5/bits/istream.tcc" 3
} }
# 603 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 604 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 605 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 606 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 607 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 608 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 609 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 610 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 611 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 612 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 613 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 614 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 615 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 617 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::int_type
# 620 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::peek()
# 621 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 622 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = traits_type::eof();
# 623 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 624 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 625 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 626 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 627 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 628 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 629 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 630 "/usr/include/c++/5/bits/istream.tcc" 3
__c = ((this->rdbuf())->sgetc());
# 631 "/usr/include/c++/5/bits/istream.tcc" 3
if (traits_type::eq_int_type(__c, traits_type::eof())) {
# 632 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); }
# 633 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 634 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 635 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 636 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 637 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 638 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 639 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 640 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 641 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 642 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 643 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 644 "/usr/include/c++/5/bits/istream.tcc" 3
return __c;
# 645 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 647 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 650 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::read(char_type *__s, ::std::streamsize __n)
# 651 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 652 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 653 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 654 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 655 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 656 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 657 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 658 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 659 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, __n));
# 660 "/usr/include/c++/5/bits/istream.tcc" 3
if ((_M_gcount) != __n) {
# 661 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ((::std::ios_base::eofbit | ::std::ios_base::failbit))); }
# 662 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 663 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 664 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 665 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 666 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 667 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 668 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 669 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 670 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 671 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 672 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 673 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 674 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 676 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 679 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::readsome(char_type *__s, ::std::streamsize __n)
# 680 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 681 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 682 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 683 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 684 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 685 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 686 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 687 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 689 "/usr/include/c++/5/bits/istream.tcc" 3
const ::std::streamsize __num = ((this->rdbuf())->in_avail());
# 690 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num > (0)) {
# 691 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = ((this->rdbuf())->sgetn(__s, std::min(__num, __n))); } else {
# 692 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num == (-1)) {
# 693 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::eofbit); } }
# 694 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 695 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 696 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 697 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 698 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 699 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 700 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 701 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 702 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 703 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 704 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 705 "/usr/include/c++/5/bits/istream.tcc" 3
return _M_gcount;
# 706 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 708 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 711 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::putback(char_type __c)
# 712 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 715 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 717 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 718 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 719 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 720 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 721 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 722 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 723 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 724 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 725 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 726 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sputbackc(__c)), __eof)) {
# 728 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 729 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 730 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 731 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 732 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 733 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 734 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 735 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 736 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 737 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 738 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 739 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 740 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 741 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 743 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::__istream_type &
# 746 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::unget()
# 747 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 750 "/usr/include/c++/5/bits/istream.tcc" 3
(_M_gcount) = (0);
# 752 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 753 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 754 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 755 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 756 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 757 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 758 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 759 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = traits_type::eof();
# 760 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 761 "/usr/include/c++/5/bits/istream.tcc" 3
if ((!__sb) || traits_type::eq_int_type((__sb->sungetc()), __eof)) {
# 763 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); }
# 764 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 765 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 766 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 767 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 768 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 769 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 770 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 771 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 772 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 773 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 774 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 775 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 776 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 778 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> int
# 781 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::sync()
# 782 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 785 "/usr/include/c++/5/bits/istream.tcc" 3
int __ret = (-1);
# 786 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 787 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 788 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 789 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 790 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 791 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 792 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (this->rdbuf());
# 793 "/usr/include/c++/5/bits/istream.tcc" 3
if (__sb)
# 794 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 795 "/usr/include/c++/5/bits/istream.tcc" 3
if ((__sb->pubsync()) == (-1)) {
# 796 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::badbit); } else {
# 798 "/usr/include/c++/5/bits/istream.tcc" 3
__ret = 0; }
# 799 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 800 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 801 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 802 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 803 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 804 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 805 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 806 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 807 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 808 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 809 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 810 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 811 "/usr/include/c++/5/bits/istream.tcc" 3
return __ret;
# 812 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 814 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> typename basic_istream< _CharT, _Traits> ::pos_type
# 817 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::tellg()
# 818 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 821 "/usr/include/c++/5/bits/istream.tcc" 3
pos_type __ret = ((pos_type)(-1));
# 822 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 823 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 824 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 825 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 826 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 827 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail())) {
# 828 "/usr/include/c++/5/bits/istream.tcc" 3
__ret = ((this->rdbuf())->pubseekoff(0, ios_base::cur, ios_base::in)); }
# 830 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 831 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 832 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 833 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 834 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 835 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 836 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 837 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 838 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 839 "/usr/include/c++/5/bits/istream.tcc" 3
return __ret;
# 840 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 842 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 845 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(pos_type __pos)
# 846 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 850 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 851 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 852 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 853 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 854 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 855 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 856 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 857 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail()))
# 858 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 860 "/usr/include/c++/5/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekpos(__pos, ios_base::in));
# 864 "/usr/include/c++/5/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 865 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 866 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 867 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 868 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 869 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 870 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 871 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 872 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 873 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 874 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 875 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 876 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 877 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 878 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 879 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 881 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 884 "/usr/include/c++/5/bits/istream.tcc" 3
basic_istream< _CharT, _Traits> ::seekg(off_type __off, ::std::ios_base::seekdir __dir)
# 885 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 889 "/usr/include/c++/5/bits/istream.tcc" 3
(this->clear((this->rdstate()) & ((~::std::ios_base::eofbit))));
# 890 "/usr/include/c++/5/bits/istream.tcc" 3
sentry __cerb(*this, true);
# 891 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 892 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 893 "/usr/include/c++/5/bits/istream.tcc" 3
::std::ios_base::iostate __err = ::std::ios_base::goodbit;
# 894 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 895 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 896 "/usr/include/c++/5/bits/istream.tcc" 3
if (!(this->fail()))
# 897 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 899 "/usr/include/c++/5/bits/istream.tcc" 3
const pos_type __p = ((this->rdbuf())->pubseekoff(__off, __dir, ios_base::in));
# 903 "/usr/include/c++/5/bits/istream.tcc" 3
if (__p == ((pos_type)((off_type)(-1)))) {
# 904 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ::std::ios_base::failbit); }
# 905 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 906 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 907 "/usr/include/c++/5/bits/istream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 908 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 909 "/usr/include/c++/5/bits/istream.tcc" 3
(this->_M_setstate(ios_base::badbit));
# 910 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 911 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 912 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 913 "/usr/include/c++/5/bits/istream.tcc" 3
{ (this->_M_setstate(ios_base::badbit)); }
# 914 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 915 "/usr/include/c++/5/bits/istream.tcc" 3
(this->setstate(__err)); }
# 916 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 917 "/usr/include/c++/5/bits/istream.tcc" 3
return *this;
# 918 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 921 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 923 "/usr/include/c++/5/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT &__c)
# 924 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 925 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 926 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 928 "/usr/include/c++/5/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 929 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 930 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 931 "/usr/include/c++/5/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 932 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 933 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 934 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __cb = ((__in.rdbuf())->sbumpc());
# 935 "/usr/include/c++/5/bits/istream.tcc" 3
if (!_Traits::eq_int_type(__cb, _Traits::eof())) {
# 936 "/usr/include/c++/5/bits/istream.tcc" 3
__c = _Traits::to_char_type(__cb); } else {
# 938 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ((ios_base::eofbit | ios_base::failbit))); }
# 939 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 940 "/usr/include/c++/5/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 941 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 942 "/usr/include/c++/5/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 943 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 944 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 945 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 946 "/usr/include/c++/5/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 947 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 948 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 949 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 950 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 951 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 953 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 955 "/usr/include/c++/5/bits/istream.tcc" 3
operator>>(basic_istream< _CharT, _Traits> &__in, _CharT *__s)
# 956 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 957 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 958 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 959 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename _Traits::int_type int_type;
# 960 "/usr/include/c++/5/bits/istream.tcc" 3
typedef _CharT char_type;
# 961 "/usr/include/c++/5/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 963 "/usr/include/c++/5/bits/istream.tcc" 3
streamsize __extracted = (0);
# 964 "/usr/include/c++/5/bits/istream.tcc" 3
ios_base::iostate __err = ios_base::goodbit;
# 965 "/usr/include/c++/5/bits/istream.tcc" 3
typename basic_istream< _CharT, _Traits> ::sentry __cerb(__in, false);
# 966 "/usr/include/c++/5/bits/istream.tcc" 3
if (__cerb)
# 967 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 968 "/usr/include/c++/5/bits/istream.tcc" 3
try
# 969 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 971 "/usr/include/c++/5/bits/istream.tcc" 3
streamsize __num = (__in.width());
# 972 "/usr/include/c++/5/bits/istream.tcc" 3
if (__num <= (0)) {
# 973 "/usr/include/c++/5/bits/istream.tcc" 3
__num = __gnu_cxx::__numeric_traits_integer< long> ::__max; }
# 975 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 977 "/usr/include/c++/5/bits/istream.tcc" 3
const int_type __eof = _Traits::eof();
# 978 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 979 "/usr/include/c++/5/bits/istream.tcc" 3
int_type __c = (__sb->sgetc());
# 981 "/usr/include/c++/5/bits/istream.tcc" 3
while ((__extracted < (__num - (1))) && (!_Traits::eq_int_type(__c, __eof)) && (!(__ct.is(ctype_base::space, _Traits::to_char_type(__c)))))
# 985 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 986 "/usr/include/c++/5/bits/istream.tcc" 3
(*(__s++)) = _Traits::to_char_type(__c);
# 987 "/usr/include/c++/5/bits/istream.tcc" 3
++__extracted;
# 988 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc());
# 989 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 990 "/usr/include/c++/5/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 991 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ios_base::eofbit); }
# 995 "/usr/include/c++/5/bits/istream.tcc" 3
(*__s) = char_type();
# 996 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.width(0));
# 997 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 998 "/usr/include/c++/5/bits/istream.tcc" 3
catch (__cxxabiv1::__forced_unwind &)
# 999 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 1000 "/usr/include/c++/5/bits/istream.tcc" 3
(__in._M_setstate(ios_base::badbit));
# 1001 "/usr/include/c++/5/bits/istream.tcc" 3
throw;
# 1002 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1003 "/usr/include/c++/5/bits/istream.tcc" 3
catch (...)
# 1004 "/usr/include/c++/5/bits/istream.tcc" 3
{ (__in._M_setstate(ios_base::badbit)); }
# 1005 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1006 "/usr/include/c++/5/bits/istream.tcc" 3
if (!__extracted) {
# 1007 "/usr/include/c++/5/bits/istream.tcc" 3
(__err |= ios_base::failbit); }
# 1008 "/usr/include/c++/5/bits/istream.tcc" 3
if (__err) {
# 1009 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(__err)); }
# 1010 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 1011 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1014 "/usr/include/c++/5/bits/istream.tcc" 3
template< class _CharT, class _Traits> basic_istream< _CharT, _Traits> &
# 1016 "/usr/include/c++/5/bits/istream.tcc" 3
ws(basic_istream< _CharT, _Traits> &__in)
# 1017 "/usr/include/c++/5/bits/istream.tcc" 3
{
# 1018 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_istream< _CharT, _Traits> __istream_type;
# 1019 "/usr/include/c++/5/bits/istream.tcc" 3
typedef basic_streambuf< _CharT, _Traits> __streambuf_type;
# 1020 "/usr/include/c++/5/bits/istream.tcc" 3
typedef typename basic_istream< _CharT, _Traits> ::int_type __int_type;
# 1021 "/usr/include/c++/5/bits/istream.tcc" 3
typedef ctype< _CharT> __ctype_type;
# 1023 "/usr/include/c++/5/bits/istream.tcc" 3
const __ctype_type &__ct = use_facet< ctype< _CharT> > ((__in.getloc()));
# 1024 "/usr/include/c++/5/bits/istream.tcc" 3
const __int_type __eof = _Traits::eof();
# 1025 "/usr/include/c++/5/bits/istream.tcc" 3
__streambuf_type *__sb = (__in.rdbuf());
# 1026 "/usr/include/c++/5/bits/istream.tcc" 3
__int_type __c = (__sb->sgetc());
# 1028 "/usr/include/c++/5/bits/istream.tcc" 3
while ((!_Traits::eq_int_type(__c, __eof)) && (__ct.is(ctype_base::space, _Traits::to_char_type(__c)))) {
# 1030 "/usr/include/c++/5/bits/istream.tcc" 3
__c = (__sb->snextc()); }
# 1032 "/usr/include/c++/5/bits/istream.tcc" 3
if (_Traits::eq_int_type(__c, __eof)) {
# 1033 "/usr/include/c++/5/bits/istream.tcc" 3
(__in.setstate(ios_base::eofbit)); }
# 1034 "/usr/include/c++/5/bits/istream.tcc" 3
return __in;
# 1035 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 1040 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_istream< char, char_traits< char> > ;
# 1041 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &ws(basic_istream< char, char_traits< char> > & __is);
# 1042 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, char & __c);
# 1043 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > &, char *);
# 1044 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char & __c);
# 1045 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char & __c);
# 1046 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, unsigned char * __s);
# 1047 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > &operator>>(basic_istream< char, char_traits< char> > & __in, signed char * __s);
# 1049 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned short & __v);
# 1050 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned & __v);
# 1051 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long & __v);
# 1052 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long & __v);
# 1053 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(bool & __v);
# 1055 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long long & __v);
# 1056 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(unsigned long long & __v);
# 1058 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(float & __v);
# 1059 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(double & __v);
# 1060 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(long double & __v);
# 1061 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< char, char_traits< char> > ::__istream_type &basic_istream< char, char_traits< char> > ::_M_extract(void *& __v);
# 1063 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_iostream< char, char_traits< char> > ;
# 1066 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_istream< wchar_t, char_traits< wchar_t> > ;
# 1067 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &ws(basic_istream< wchar_t, char_traits< wchar_t> > & __is);
# 1068 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > & __in, wchar_t & __c);
# 1069 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > &operator>>(basic_istream< wchar_t, char_traits< wchar_t> > &, wchar_t *);
# 1071 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned short & __v);
# 1072 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned & __v);
# 1073 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long & __v);
# 1074 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long & __v);
# 1075 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(bool & __v);
# 1077 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long long & __v);
# 1078 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(unsigned long long & __v);
# 1080 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(float & __v);
# 1081 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(double & __v);
# 1082 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(long double & __v);
# 1083 "/usr/include/c++/5/bits/istream.tcc" 3
extern template basic_istream< wchar_t, char_traits< wchar_t> > ::__istream_type &basic_istream< wchar_t, char_traits< wchar_t> > ::_M_extract(void *& __v);
# 1085 "/usr/include/c++/5/bits/istream.tcc" 3
extern template class basic_iostream< wchar_t, char_traits< wchar_t> > ;
# 1090 "/usr/include/c++/5/bits/istream.tcc" 3
}
# 41 "/usr/include/c++/5/bits/codecvt.h" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/bits/codecvt.h" 3
class codecvt_base {
# 49 "/usr/include/c++/5/bits/codecvt.h" 3
public: enum result {
# 51 "/usr/include/c++/5/bits/codecvt.h" 3
ok,
# 52 "/usr/include/c++/5/bits/codecvt.h" 3
partial,
# 53 "/usr/include/c++/5/bits/codecvt.h" 3
error,
# 54 "/usr/include/c++/5/bits/codecvt.h" 3
noconv
# 55 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 56 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 67 "/usr/include/c++/5/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT>
# 68 "/usr/include/c++/5/bits/codecvt.h" 3
class __codecvt_abstract_base : public locale::facet, public codecvt_base {
# 73 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef codecvt_base::result result;
# 74 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _InternT intern_type;
# 75 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _ExternT extern_type;
# 76 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _StateT state_type;
# 116 "/usr/include/c++/5/bits/codecvt.h" 3
result out(state_type &__state, const intern_type *__from, const intern_type *
# 117 "/usr/include/c++/5/bits/codecvt.h" 3
__from_end, const intern_type *&__from_next, extern_type *
# 118 "/usr/include/c++/5/bits/codecvt.h" 3
__to, extern_type *__to_end, extern_type *&
# 119 "/usr/include/c++/5/bits/codecvt.h" 3
__to_next) const
# 120 "/usr/include/c++/5/bits/codecvt.h" 3
{
# 121 "/usr/include/c++/5/bits/codecvt.h" 3
return this->do_out(__state, __from, __from_end, __from_next, __to, __to_end, __to_next);
# 123 "/usr/include/c++/5/bits/codecvt.h" 3
}
# 155 "/usr/include/c++/5/bits/codecvt.h" 3
result unshift(state_type &__state, extern_type *__to, extern_type *__to_end, extern_type *&
# 156 "/usr/include/c++/5/bits/codecvt.h" 3
__to_next) const
# 157 "/usr/include/c++/5/bits/codecvt.h" 3
{ return this->do_unshift(__state, __to, __to_end, __to_next); }
# 196 "/usr/include/c++/5/bits/codecvt.h" 3
result in(state_type &__state, const extern_type *__from, const extern_type *
# 197 "/usr/include/c++/5/bits/codecvt.h" 3
__from_end, const extern_type *&__from_next, intern_type *
# 198 "/usr/include/c++/5/bits/codecvt.h" 3
__to, intern_type *__to_end, intern_type *&
# 199 "/usr/include/c++/5/bits/codecvt.h" 3
__to_next) const
# 200 "/usr/include/c++/5/bits/codecvt.h" 3
{
# 201 "/usr/include/c++/5/bits/codecvt.h" 3
return this->do_in(__state, __from, __from_end, __from_next, __to, __to_end, __to_next);
# 203 "/usr/include/c++/5/bits/codecvt.h" 3
}
# 206 "/usr/include/c++/5/bits/codecvt.h" 3
int encoding() const throw()
# 207 "/usr/include/c++/5/bits/codecvt.h" 3
{ return this->do_encoding(); }
# 210 "/usr/include/c++/5/bits/codecvt.h" 3
bool always_noconv() const throw()
# 211 "/usr/include/c++/5/bits/codecvt.h" 3
{ return this->do_always_noconv(); }
# 214 "/usr/include/c++/5/bits/codecvt.h" 3
int length(state_type &__state, const extern_type *__from, const extern_type *
# 215 "/usr/include/c++/5/bits/codecvt.h" 3
__end, size_t __max) const
# 216 "/usr/include/c++/5/bits/codecvt.h" 3
{ return this->do_length(__state, __from, __end, __max); }
# 219 "/usr/include/c++/5/bits/codecvt.h" 3
int max_length() const throw()
# 220 "/usr/include/c++/5/bits/codecvt.h" 3
{ return this->do_max_length(); }
# 224 "/usr/include/c++/5/bits/codecvt.h" 3
protected: explicit __codecvt_abstract_base(size_t __refs = 0) : locale::facet(__refs) { }
# 227 "/usr/include/c++/5/bits/codecvt.h" 3
virtual ~__codecvt_abstract_base() { }
# 237 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const = 0;
# 243 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const = 0;
# 247 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const = 0;
# 253 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw() = 0;
# 256 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw() = 0;
# 259 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, size_t __max) const = 0;
# 263 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw() = 0;
# 264 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 273 "/usr/include/c++/5/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT>
# 274 "/usr/include/c++/5/bits/codecvt.h" 3
class codecvt : public __codecvt_abstract_base< _InternT, _ExternT, _StateT> {
# 279 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef ::std::codecvt_base::result result;
# 280 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _InternT intern_type;
# 281 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _ExternT extern_type;
# 282 "/usr/include/c++/5/bits/codecvt.h" 3
typedef _StateT state_type;
# 285 "/usr/include/c++/5/bits/codecvt.h" 3
protected: ::std::__c_locale _M_c_locale_codecvt;
# 288 "/usr/include/c++/5/bits/codecvt.h" 3
public: static ::std::locale::id id;
# 291 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(::std::size_t __refs = 0) : ::std::__codecvt_abstract_base< _InternT, _ExternT, _StateT> (__refs), _M_c_locale_codecvt((0))
# 294 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 297 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(::std::__c_locale __cloc, ::std::size_t __refs = 0);
# 301 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt() { }
# 304 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 310 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 314 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const;
# 320 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 323 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 326 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, ::std::size_t __max) const;
# 330 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 331 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 333 "/usr/include/c++/5/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT> locale::id
# 334 "/usr/include/c++/5/bits/codecvt.h" 3
codecvt< _InternT, _ExternT, _StateT> ::id;
# 338 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt< char, char, __mbstate_t> : public __codecvt_abstract_base< char, char, __mbstate_t> {
# 341 "/usr/include/c++/5/bits/codecvt.h" 3
friend class __cxx11::messages< char> ;
# 345 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef char intern_type;
# 346 "/usr/include/c++/5/bits/codecvt.h" 3
typedef char extern_type;
# 347 "/usr/include/c++/5/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 350 "/usr/include/c++/5/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 353 "/usr/include/c++/5/bits/codecvt.h" 3
public: static locale::id id;
# 356 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(size_t __refs = 0);
# 359 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(__c_locale __cloc, size_t __refs = 0);
# 363 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 366 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 372 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 376 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const;
# 382 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 385 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 388 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, size_t __max) const;
# 392 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 393 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 401 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt< wchar_t, char, __mbstate_t> : public __codecvt_abstract_base< wchar_t, char, __mbstate_t> {
# 404 "/usr/include/c++/5/bits/codecvt.h" 3
friend class __cxx11::messages< wchar_t> ;
# 408 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef wchar_t intern_type;
# 409 "/usr/include/c++/5/bits/codecvt.h" 3
typedef char extern_type;
# 410 "/usr/include/c++/5/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 413 "/usr/include/c++/5/bits/codecvt.h" 3
protected: __c_locale _M_c_locale_codecvt;
# 416 "/usr/include/c++/5/bits/codecvt.h" 3
public: static locale::id id;
# 419 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(size_t __refs = 0);
# 422 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(__c_locale __cloc, size_t __refs = 0);
# 426 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 429 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 435 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 440 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const;
# 447 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 450 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 453 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, size_t __max) const;
# 457 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 458 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 468 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt< char16_t, char, __mbstate_t> : public __codecvt_abstract_base< char16_t, char, __mbstate_t> {
# 473 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef char16_t intern_type;
# 474 "/usr/include/c++/5/bits/codecvt.h" 3
typedef char extern_type;
# 475 "/usr/include/c++/5/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 478 "/usr/include/c++/5/bits/codecvt.h" 3
static locale::id id;
# 481 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(size_t __refs = 0) : std::__codecvt_abstract_base< char16_t, char, __mbstate_t> (__refs)
# 482 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 486 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 489 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 495 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 500 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const;
# 507 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 510 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 513 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, size_t __max) const;
# 517 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 518 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 525 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt< char32_t, char, __mbstate_t> : public __codecvt_abstract_base< char32_t, char, __mbstate_t> {
# 530 "/usr/include/c++/5/bits/codecvt.h" 3
public: typedef char32_t intern_type;
# 531 "/usr/include/c++/5/bits/codecvt.h" 3
typedef char extern_type;
# 532 "/usr/include/c++/5/bits/codecvt.h" 3
typedef mbstate_t state_type;
# 535 "/usr/include/c++/5/bits/codecvt.h" 3
static locale::id id;
# 538 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt(size_t __refs = 0) : std::__codecvt_abstract_base< char32_t, char, __mbstate_t> (__refs)
# 539 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 543 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt();
# 546 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_out(state_type & __state, const intern_type * __from, const intern_type * __from_end, const intern_type *& __from_next, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 552 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_unshift(state_type & __state, extern_type * __to, extern_type * __to_end, extern_type *& __to_next) const;
# 557 "/usr/include/c++/5/bits/codecvt.h" 3
virtual result do_in(state_type & __state, const extern_type * __from, const extern_type * __from_end, const extern_type *& __from_next, intern_type * __to, intern_type * __to_end, intern_type *& __to_next) const;
# 564 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_encoding() const throw();
# 567 "/usr/include/c++/5/bits/codecvt.h" 3
virtual bool do_always_noconv() const throw();
# 570 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_length(state_type &, const extern_type * __from, const extern_type * __end, size_t __max) const;
# 574 "/usr/include/c++/5/bits/codecvt.h" 3
virtual int do_max_length() const throw();
# 575 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 581 "/usr/include/c++/5/bits/codecvt.h" 3
template< class _InternT, class _ExternT, class _StateT>
# 582 "/usr/include/c++/5/bits/codecvt.h" 3
class codecvt_byname : public codecvt< _InternT, _ExternT, _StateT> {
# 586 "/usr/include/c++/5/bits/codecvt.h" 3
public: explicit codecvt_byname(const char *__s, ::std::size_t __refs = 0) : ::std::codecvt< _InternT, _ExternT, _StateT> (__refs)
# 588 "/usr/include/c++/5/bits/codecvt.h" 3
{
# 589 "/usr/include/c++/5/bits/codecvt.h" 3
if ((__builtin_strcmp(__s, "C") != 0) && (__builtin_strcmp(__s, "POSIX") != 0))
# 591 "/usr/include/c++/5/bits/codecvt.h" 3
{
# 592 "/usr/include/c++/5/bits/codecvt.h" 3
(this->_S_destroy_c_locale((this->_M_c_locale_codecvt)));
# 593 "/usr/include/c++/5/bits/codecvt.h" 3
(this->_S_create_c_locale((this->_M_c_locale_codecvt), __s));
# 594 "/usr/include/c++/5/bits/codecvt.h" 3
}
# 595 "/usr/include/c++/5/bits/codecvt.h" 3
}
# 599 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt_byname(const ::std::__cxx11::string &__s, ::std::size_t __refs = 0) : codecvt_byname(__s.c_str(), __refs)
# 600 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 605 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt_byname() { }
# 606 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 610 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt_byname< char16_t, char, __mbstate_t> : public codecvt< char16_t, char, __mbstate_t> {
# 615 "/usr/include/c++/5/bits/codecvt.h" 3
public: explicit codecvt_byname(const char *__s, size_t __refs = 0) : std::codecvt< char16_t, char, __mbstate_t> (__refs)
# 616 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 619 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt_byname(const __cxx11::string &__s, size_t __refs = 0) : codecvt_byname(__s.c_str(), __refs)
# 620 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 624 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt_byname() { }
# 625 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 628 "/usr/include/c++/5/bits/codecvt.h" 3
template<> class codecvt_byname< char32_t, char, __mbstate_t> : public codecvt< char32_t, char, __mbstate_t> {
# 633 "/usr/include/c++/5/bits/codecvt.h" 3
public: explicit codecvt_byname(const char *__s, size_t __refs = 0) : std::codecvt< char32_t, char, __mbstate_t> (__refs)
# 634 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 637 "/usr/include/c++/5/bits/codecvt.h" 3
explicit codecvt_byname(const __cxx11::string &__s, size_t __refs = 0) : codecvt_byname(__s.c_str(), __refs)
# 638 "/usr/include/c++/5/bits/codecvt.h" 3
{ }
# 642 "/usr/include/c++/5/bits/codecvt.h" 3
protected: virtual ~codecvt_byname() { }
# 643 "/usr/include/c++/5/bits/codecvt.h" 3
};
# 649 "/usr/include/c++/5/bits/codecvt.h" 3
extern template class codecvt_byname< char, char, __mbstate_t> ;
# 651 "/usr/include/c++/5/bits/codecvt.h" 3
extern template const codecvt< char, char, __mbstate_t> &use_facet< codecvt< char, char, __mbstate_t> > (const locale &);
# 655 "/usr/include/c++/5/bits/codecvt.h" 3
extern template bool has_facet< codecvt< char, char, __mbstate_t> > (const locale &) throw();
# 660 "/usr/include/c++/5/bits/codecvt.h" 3
extern template class codecvt_byname< wchar_t, char, __mbstate_t> ;
# 662 "/usr/include/c++/5/bits/codecvt.h" 3
extern template const codecvt< wchar_t, char, __mbstate_t> &use_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &);
# 666 "/usr/include/c++/5/bits/codecvt.h" 3
extern template bool has_facet< codecvt< wchar_t, char, __mbstate_t> > (const locale &) throw();
# 679 "/usr/include/c++/5/bits/codecvt.h" 3
}
# 38 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++io.h" 3
namespace std __attribute((__visibility__("default"))) {
# 42 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++io.h" 3
typedef __gthread_mutex_t __c_lock;
# 45 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++io.h" 3
typedef FILE __c_file;
# 48 "/usr/include/x86_64-linux-gnu/c++/5/bits/c++io.h" 3
}
# 44 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
namespace std __attribute((__visibility__("default"))) {
# 49 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
template< class _CharT> class __basic_file;
# 54 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
template<> class __basic_file< char> {
# 57 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
__c_file *_M_cfile;
# 60 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
bool _M_cfile_created;
# 63 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
public: __basic_file(__c_lock * __lock = 0) throw();
# 66 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
__basic_file(std::__basic_file< char> &&__rv, __c_lock *__lock = 0) noexcept : _M_cfile(__rv._M_cfile), _M_cfile_created(__rv._M_cfile_created)
# 68 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
{
# 69 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
(__rv._M_cfile) = (nullptr);
# 70 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
(__rv._M_cfile_created) = false;
# 71 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
}
# 73 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> &operator=(const std::__basic_file< char> &) = delete;
# 74 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> &operator=(std::__basic_file< char> &&) = delete;
# 77 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
void swap(std::__basic_file< char> &__f) noexcept
# 78 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
{
# 79 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::swap(_M_cfile, __f._M_cfile);
# 80 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::swap(_M_cfile_created, __f._M_cfile_created);
# 81 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
}
# 85 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> *open(const char * __name, ios_base::openmode __mode, int __prot = 436);
# 88 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(__c_file * __file, ios_base::openmode);
# 91 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> *sys_open(int __fd, ios_base::openmode __mode) throw();
# 94 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
std::__basic_file< char> *close();
# 96 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
__attribute((__pure__)) bool
# 97 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
is_open() const throw();
# 99 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
__attribute((__pure__)) int
# 100 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
fd() throw();
# 102 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
__attribute((__pure__)) __c_file *
# 103 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
file() throw();
# 105 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
~__basic_file();
# 108 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
streamsize xsputn(const char * __s, streamsize __n);
# 111 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
streamsize xsputn_2(const char * __s1, streamsize __n1, const char * __s2, streamsize __n2);
# 115 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
streamsize xsgetn(char * __s, streamsize __n);
# 118 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
streamoff seekoff(streamoff __off, ios_base::seekdir __way) throw();
# 121 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
int sync();
# 124 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
streamsize showmanyc();
# 125 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
};
# 128 "/usr/include/x86_64-linux-gnu/c++/5/bits/basic_file.h" 3
}
# 47 "/usr/include/c++/5/fstream" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits>
# 72 "/usr/include/c++/5/fstream" 3
class basic_filebuf : public basic_streambuf< _CharT, _Traits> {
# 75 "/usr/include/c++/5/fstream" 3
template< class _Tp> using __chk_state = __and_< is_copy_assignable< _Tp> , is_copy_constructible< _Tp> , is_default_constructible< _Tp> > ;
# 80 "/usr/include/c++/5/fstream" 3
static_assert((__chk_state< typename _Traits::state_type> ::value), "state_type must be CopyAssignable, CopyConstructible and DefaultConstructible");
# 84 "/usr/include/c++/5/fstream" 3
static_assert((is_same< typename _Traits::pos_type, fpos< typename _Traits::state_type> > ::value), "pos_type must be fpos<state_type>");
# 90 "/usr/include/c++/5/fstream" 3
public: typedef _CharT char_type;
# 91 "/usr/include/c++/5/fstream" 3
typedef _Traits traits_type;
# 92 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::int_type int_type;
# 93 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::pos_type pos_type;
# 94 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::off_type off_type;
# 96 "/usr/include/c++/5/fstream" 3
typedef ::std::basic_streambuf< _CharT, _Traits> __streambuf_type;
# 97 "/usr/include/c++/5/fstream" 3
typedef basic_filebuf __filebuf_type;
# 98 "/usr/include/c++/5/fstream" 3
typedef ::std::__basic_file< char> __file_type;
# 99 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::state_type __state_type;
# 100 "/usr/include/c++/5/fstream" 3
typedef codecvt< _CharT, char, typename _Traits::state_type> __codecvt_type;
# 102 "/usr/include/c++/5/fstream" 3
friend class ios_base;
# 107 "/usr/include/c++/5/fstream" 3
protected: ::std::__c_lock _M_lock;
# 110 "/usr/include/c++/5/fstream" 3
__file_type _M_file;
# 113 "/usr/include/c++/5/fstream" 3
::std::ios_base::openmode _M_mode;
# 116 "/usr/include/c++/5/fstream" 3
__state_type _M_state_beg;
# 121 "/usr/include/c++/5/fstream" 3
__state_type _M_state_cur;
# 125 "/usr/include/c++/5/fstream" 3
__state_type _M_state_last;
# 128 "/usr/include/c++/5/fstream" 3
char_type *_M_buf;
# 135 "/usr/include/c++/5/fstream" 3
::std::size_t _M_buf_size;
# 138 "/usr/include/c++/5/fstream" 3
bool _M_buf_allocated;
# 147 "/usr/include/c++/5/fstream" 3
bool _M_reading;
# 148 "/usr/include/c++/5/fstream" 3
bool _M_writing;
# 156 "/usr/include/c++/5/fstream" 3
char_type _M_pback;
# 157 "/usr/include/c++/5/fstream" 3
char_type *_M_pback_cur_save;
# 158 "/usr/include/c++/5/fstream" 3
char_type *_M_pback_end_save;
# 159 "/usr/include/c++/5/fstream" 3
bool _M_pback_init;
# 163 "/usr/include/c++/5/fstream" 3
const __codecvt_type *_M_codecvt;
# 170 "/usr/include/c++/5/fstream" 3
char *_M_ext_buf;
# 175 "/usr/include/c++/5/fstream" 3
::std::streamsize _M_ext_buf_size;
# 182 "/usr/include/c++/5/fstream" 3
const char *_M_ext_next;
# 183 "/usr/include/c++/5/fstream" 3
char *_M_ext_end;
# 191 "/usr/include/c++/5/fstream" 3
void _M_create_pback()
# 192 "/usr/include/c++/5/fstream" 3
{
# 193 "/usr/include/c++/5/fstream" 3
if (!(_M_pback_init))
# 194 "/usr/include/c++/5/fstream" 3
{
# 195 "/usr/include/c++/5/fstream" 3
(_M_pback_cur_save) = (this->gptr());
# 196 "/usr/include/c++/5/fstream" 3
(_M_pback_end_save) = (this->egptr());
# 197 "/usr/include/c++/5/fstream" 3
(this->setg(&(_M_pback), &(_M_pback), (&(_M_pback)) + 1));
# 198 "/usr/include/c++/5/fstream" 3
(_M_pback_init) = true;
# 199 "/usr/include/c++/5/fstream" 3
}
# 200 "/usr/include/c++/5/fstream" 3
}
# 208 "/usr/include/c++/5/fstream" 3
void _M_destroy_pback() throw()
# 209 "/usr/include/c++/5/fstream" 3
{
# 210 "/usr/include/c++/5/fstream" 3
if (_M_pback_init)
# 211 "/usr/include/c++/5/fstream" 3
{
# 213 "/usr/include/c++/5/fstream" 3
(_M_pback_cur_save) += ((this->gptr()) != (this->eback()));
# 214 "/usr/include/c++/5/fstream" 3
(this->setg(_M_buf, _M_pback_cur_save, _M_pback_end_save));
# 215 "/usr/include/c++/5/fstream" 3
(_M_pback_init) = false;
# 216 "/usr/include/c++/5/fstream" 3
}
# 217 "/usr/include/c++/5/fstream" 3
}
# 227 "/usr/include/c++/5/fstream" 3
public: basic_filebuf();
# 230 "/usr/include/c++/5/fstream" 3
basic_filebuf(const basic_filebuf &) = delete;
# 231 "/usr/include/c++/5/fstream" 3
basic_filebuf(basic_filebuf &&);
# 238 "/usr/include/c++/5/fstream" 3
virtual ~basic_filebuf()
# 239 "/usr/include/c++/5/fstream" 3
{ this->close(); }
# 242 "/usr/include/c++/5/fstream" 3
basic_filebuf &operator=(const basic_filebuf &) = delete;
# 243 "/usr/include/c++/5/fstream" 3
basic_filebuf &operator=(basic_filebuf &&);
# 244 "/usr/include/c++/5/fstream" 3
void swap(basic_filebuf &);
# 252 "/usr/include/c++/5/fstream" 3
bool is_open() const throw()
# 253 "/usr/include/c++/5/fstream" 3
{ return (_M_file).is_open(); }
# 297 "/usr/include/c++/5/fstream" 3
__filebuf_type *open(const char * __s, ::std::ios_base::openmode __mode);
# 307 "/usr/include/c++/5/fstream" 3
__filebuf_type *open(const ::std::__cxx11::string &__s, ::std::ios_base::openmode __mode)
# 308 "/usr/include/c++/5/fstream" 3
{ return this->open(__s.c_str(), __mode); }
# 324 "/usr/include/c++/5/fstream" 3
__filebuf_type *close();
# 328 "/usr/include/c++/5/fstream" 3
protected: void _M_allocate_internal_buffer();
# 331 "/usr/include/c++/5/fstream" 3
void _M_destroy_internal_buffer() throw();
# 335 "/usr/include/c++/5/fstream" 3
virtual ::std::streamsize showmanyc();
# 343 "/usr/include/c++/5/fstream" 3
virtual int_type underflow();
# 346 "/usr/include/c++/5/fstream" 3
virtual int_type pbackfail(int_type __c = _Traits::eof());
# 356 "/usr/include/c++/5/fstream" 3
virtual int_type overflow(int_type __c = _Traits::eof());
# 361 "/usr/include/c++/5/fstream" 3
bool _M_convert_to_external(char_type *, ::std::streamsize);
# 376 "/usr/include/c++/5/fstream" 3
virtual __streambuf_type *setbuf(char_type * __s, ::std::streamsize __n);
# 379 "/usr/include/c++/5/fstream" 3
virtual pos_type seekoff(off_type __off, ::std::ios_base::seekdir __way, ::std::ios_base::openmode __mode = (::std::ios_base::in | ::std::ios_base::out));
# 383 "/usr/include/c++/5/fstream" 3
virtual pos_type seekpos(pos_type __pos, ::std::ios_base::openmode __mode = (::std::ios_base::in | ::std::ios_base::out));
# 388 "/usr/include/c++/5/fstream" 3
pos_type _M_seek(off_type __off, ::std::ios_base::seekdir __way, __state_type __state);
# 391 "/usr/include/c++/5/fstream" 3
int _M_get_ext_pos(__state_type & __state);
# 394 "/usr/include/c++/5/fstream" 3
virtual int sync();
# 397 "/usr/include/c++/5/fstream" 3
virtual void imbue(const ::std::locale & __loc);
# 400 "/usr/include/c++/5/fstream" 3
virtual ::std::streamsize xsgetn(char_type * __s, ::std::streamsize __n);
# 403 "/usr/include/c++/5/fstream" 3
virtual ::std::streamsize xsputn(const char_type * __s, ::std::streamsize __n);
# 407 "/usr/include/c++/5/fstream" 3
bool _M_terminate_output();
# 422 "/usr/include/c++/5/fstream" 3
void _M_set_buffer(::std::streamsize __off)
# 423 "/usr/include/c++/5/fstream" 3
{
# 424 "/usr/include/c++/5/fstream" 3
const bool __testin = ((_M_mode) & ::std::ios_base::in);
# 425 "/usr/include/c++/5/fstream" 3
const bool __testout = (((_M_mode) & ::std::ios_base::out)) || (((_M_mode) & ::std::ios_base::app));
# 428 "/usr/include/c++/5/fstream" 3
if (__testin && (__off > (0))) {
# 429 "/usr/include/c++/5/fstream" 3
(this->setg(_M_buf, _M_buf, (_M_buf) + __off)); } else {
# 431 "/usr/include/c++/5/fstream" 3
(this->setg(_M_buf, _M_buf, _M_buf)); }
# 433 "/usr/include/c++/5/fstream" 3
if (__testout && (__off == (0)) && ((_M_buf_size) > (1))) {
# 434 "/usr/include/c++/5/fstream" 3
(this->setp(_M_buf, ((_M_buf) + (_M_buf_size)) - 1)); } else {
# 436 "/usr/include/c++/5/fstream" 3
(this->setp(0, 0)); }
# 437 "/usr/include/c++/5/fstream" 3
}
# 438 "/usr/include/c++/5/fstream" 3
};
# 454 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits>
# 455 "/usr/include/c++/5/fstream" 3
class basic_ifstream : public basic_istream< _CharT, _Traits> {
# 459 "/usr/include/c++/5/fstream" 3
public: typedef _CharT char_type;
# 460 "/usr/include/c++/5/fstream" 3
typedef _Traits traits_type;
# 461 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::int_type int_type;
# 462 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::pos_type pos_type;
# 463 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::off_type off_type;
# 466 "/usr/include/c++/5/fstream" 3
typedef basic_filebuf< _CharT, _Traits> __filebuf_type;
# 467 "/usr/include/c++/5/fstream" 3
typedef ::std::basic_istream< _CharT, _Traits> __istream_type;
# 470 "/usr/include/c++/5/fstream" 3
private: __filebuf_type _M_filebuf;
# 481 "/usr/include/c++/5/fstream" 3
public: basic_ifstream() : __istream_type(), _M_filebuf()
# 482 "/usr/include/c++/5/fstream" 3
{ (this->init(&(_M_filebuf))); }
# 495 "/usr/include/c++/5/fstream" 3
explicit basic_ifstream(const char *__s, ::std::ios_base::openmode __mode = ios_base::in) : __istream_type(), _M_filebuf()
# 497 "/usr/include/c++/5/fstream" 3
{
# 498 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 499 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 500 "/usr/include/c++/5/fstream" 3
}
# 511 "/usr/include/c++/5/fstream" 3
explicit basic_ifstream(const ::std::__cxx11::string &__s, ::std::ios_base::openmode
# 512 "/usr/include/c++/5/fstream" 3
__mode = ios_base::in) : __istream_type(), _M_filebuf()
# 514 "/usr/include/c++/5/fstream" 3
{
# 515 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 516 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 517 "/usr/include/c++/5/fstream" 3
}
# 519 "/usr/include/c++/5/fstream" 3
basic_ifstream(const basic_ifstream &) = delete;
# 521 "/usr/include/c++/5/fstream" 3
basic_ifstream(basic_ifstream &&__rhs) : __istream_type(::std::move(__rhs)), _M_filebuf(::std::move(__rhs._M_filebuf))
# 524 "/usr/include/c++/5/fstream" 3
{ __istream_type::set_rdbuf(&(_M_filebuf)); }
# 533 "/usr/include/c++/5/fstream" 3
~basic_ifstream()
# 534 "/usr/include/c++/5/fstream" 3
{ }
# 540 "/usr/include/c++/5/fstream" 3
basic_ifstream &operator=(const basic_ifstream &) = delete;
# 543 "/usr/include/c++/5/fstream" 3
basic_ifstream &operator=(basic_ifstream &&__rhs)
# 544 "/usr/include/c++/5/fstream" 3
{
# 545 "/usr/include/c++/5/fstream" 3
::std::basic_istream< _CharT, _Traits> ::operator=(::std::move(__rhs));
# 546 "/usr/include/c++/5/fstream" 3
(_M_filebuf) = ::std::move(__rhs._M_filebuf);
# 547 "/usr/include/c++/5/fstream" 3
return *this;
# 548 "/usr/include/c++/5/fstream" 3
}
# 551 "/usr/include/c++/5/fstream" 3
void swap(basic_ifstream &__rhs)
# 552 "/usr/include/c++/5/fstream" 3
{
# 553 "/usr/include/c++/5/fstream" 3
__istream_type::swap(__rhs);
# 554 "/usr/include/c++/5/fstream" 3
((_M_filebuf).swap(__rhs._M_filebuf));
# 555 "/usr/include/c++/5/fstream" 3
}
# 566 "/usr/include/c++/5/fstream" 3
__filebuf_type *rdbuf() const
# 567 "/usr/include/c++/5/fstream" 3
{ return const_cast< __filebuf_type *>(&(_M_filebuf)); }
# 574 "/usr/include/c++/5/fstream" 3
bool is_open()
# 575 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 580 "/usr/include/c++/5/fstream" 3
bool is_open() const
# 581 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 595 "/usr/include/c++/5/fstream" 3
void open(const char *__s, ::std::ios_base::openmode __mode = ios_base::in)
# 596 "/usr/include/c++/5/fstream" 3
{
# 597 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, (__mode | ::std::ios_base::in)))) {
# 598 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 602 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 603 "/usr/include/c++/5/fstream" 3
}
# 615 "/usr/include/c++/5/fstream" 3
void open(const ::std::__cxx11::string &__s, ::std::ios_base::openmode __mode = ios_base::in)
# 616 "/usr/include/c++/5/fstream" 3
{
# 617 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, (__mode | ::std::ios_base::in)))) {
# 618 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 622 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 623 "/usr/include/c++/5/fstream" 3
}
# 633 "/usr/include/c++/5/fstream" 3
void close()
# 634 "/usr/include/c++/5/fstream" 3
{
# 635 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).close())) {
# 636 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); }
# 637 "/usr/include/c++/5/fstream" 3
}
# 638 "/usr/include/c++/5/fstream" 3
};
# 655 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits>
# 656 "/usr/include/c++/5/fstream" 3
class basic_ofstream : public basic_ostream< _CharT, _Traits> {
# 660 "/usr/include/c++/5/fstream" 3
public: typedef _CharT char_type;
# 661 "/usr/include/c++/5/fstream" 3
typedef _Traits traits_type;
# 662 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::int_type int_type;
# 663 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::pos_type pos_type;
# 664 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::off_type off_type;
# 667 "/usr/include/c++/5/fstream" 3
typedef basic_filebuf< _CharT, _Traits> __filebuf_type;
# 668 "/usr/include/c++/5/fstream" 3
typedef ::std::basic_ostream< _CharT, _Traits> __ostream_type;
# 671 "/usr/include/c++/5/fstream" 3
private: __filebuf_type _M_filebuf;
# 682 "/usr/include/c++/5/fstream" 3
public: basic_ofstream() : __ostream_type(), _M_filebuf()
# 683 "/usr/include/c++/5/fstream" 3
{ (this->init(&(_M_filebuf))); }
# 697 "/usr/include/c++/5/fstream" 3
explicit basic_ofstream(const char *__s, ::std::ios_base::openmode
# 698 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::out | ::std::ios_base::trunc)) : __ostream_type(), _M_filebuf()
# 700 "/usr/include/c++/5/fstream" 3
{
# 701 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 702 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 703 "/usr/include/c++/5/fstream" 3
}
# 715 "/usr/include/c++/5/fstream" 3
explicit basic_ofstream(const ::std::__cxx11::string &__s, ::std::ios_base::openmode
# 716 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::out | ::std::ios_base::trunc)) : __ostream_type(), _M_filebuf()
# 718 "/usr/include/c++/5/fstream" 3
{
# 719 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 720 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 721 "/usr/include/c++/5/fstream" 3
}
# 723 "/usr/include/c++/5/fstream" 3
basic_ofstream(const basic_ofstream &) = delete;
# 725 "/usr/include/c++/5/fstream" 3
basic_ofstream(basic_ofstream &&__rhs) : __ostream_type(::std::move(__rhs)), _M_filebuf(::std::move(__rhs._M_filebuf))
# 728 "/usr/include/c++/5/fstream" 3
{ __ostream_type::set_rdbuf(&(_M_filebuf)); }
# 737 "/usr/include/c++/5/fstream" 3
~basic_ofstream()
# 738 "/usr/include/c++/5/fstream" 3
{ }
# 744 "/usr/include/c++/5/fstream" 3
basic_ofstream &operator=(const basic_ofstream &) = delete;
# 747 "/usr/include/c++/5/fstream" 3
basic_ofstream &operator=(basic_ofstream &&__rhs)
# 748 "/usr/include/c++/5/fstream" 3
{
# 749 "/usr/include/c++/5/fstream" 3
::std::basic_ostream< _CharT, _Traits> ::operator=(::std::move(__rhs));
# 750 "/usr/include/c++/5/fstream" 3
(_M_filebuf) = ::std::move(__rhs._M_filebuf);
# 751 "/usr/include/c++/5/fstream" 3
return *this;
# 752 "/usr/include/c++/5/fstream" 3
}
# 755 "/usr/include/c++/5/fstream" 3
void swap(basic_ofstream &__rhs)
# 756 "/usr/include/c++/5/fstream" 3
{
# 757 "/usr/include/c++/5/fstream" 3
__ostream_type::swap(__rhs);
# 758 "/usr/include/c++/5/fstream" 3
((_M_filebuf).swap(__rhs._M_filebuf));
# 759 "/usr/include/c++/5/fstream" 3
}
# 770 "/usr/include/c++/5/fstream" 3
__filebuf_type *rdbuf() const
# 771 "/usr/include/c++/5/fstream" 3
{ return const_cast< __filebuf_type *>(&(_M_filebuf)); }
# 778 "/usr/include/c++/5/fstream" 3
bool is_open()
# 779 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 784 "/usr/include/c++/5/fstream" 3
bool is_open() const
# 785 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 799 "/usr/include/c++/5/fstream" 3
void open(const char *__s, ::std::ios_base::openmode
# 800 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::out | ::std::ios_base::trunc))
# 801 "/usr/include/c++/5/fstream" 3
{
# 802 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, (__mode | ::std::ios_base::out)))) {
# 803 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 807 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 808 "/usr/include/c++/5/fstream" 3
}
# 820 "/usr/include/c++/5/fstream" 3
void open(const ::std::__cxx11::string &__s, ::std::ios_base::openmode
# 821 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::out | ::std::ios_base::trunc))
# 822 "/usr/include/c++/5/fstream" 3
{
# 823 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, (__mode | ::std::ios_base::out)))) {
# 824 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 828 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 829 "/usr/include/c++/5/fstream" 3
}
# 839 "/usr/include/c++/5/fstream" 3
void close()
# 840 "/usr/include/c++/5/fstream" 3
{
# 841 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).close())) {
# 842 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); }
# 843 "/usr/include/c++/5/fstream" 3
}
# 844 "/usr/include/c++/5/fstream" 3
};
# 861 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits>
# 862 "/usr/include/c++/5/fstream" 3
class basic_fstream : public basic_iostream< _CharT, _Traits> {
# 866 "/usr/include/c++/5/fstream" 3
public: typedef _CharT char_type;
# 867 "/usr/include/c++/5/fstream" 3
typedef _Traits traits_type;
# 868 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::int_type int_type;
# 869 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::pos_type pos_type;
# 870 "/usr/include/c++/5/fstream" 3
typedef typename _Traits::off_type off_type;
# 873 "/usr/include/c++/5/fstream" 3
typedef basic_filebuf< _CharT, _Traits> __filebuf_type;
# 874 "/usr/include/c++/5/fstream" 3
typedef ::std::basic_ios< _CharT, _Traits> __ios_type;
# 875 "/usr/include/c++/5/fstream" 3
typedef ::std::basic_iostream< _CharT, _Traits> __iostream_type;
# 878 "/usr/include/c++/5/fstream" 3
private: __filebuf_type _M_filebuf;
# 889 "/usr/include/c++/5/fstream" 3
public: basic_fstream() : __iostream_type(), _M_filebuf()
# 891 "/usr/include/c++/5/fstream" 3
{ (this->init(&(_M_filebuf))); }
# 902 "/usr/include/c++/5/fstream" 3
explicit basic_fstream(const char *__s, ::std::ios_base::openmode
# 903 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::in | ::std::ios_base::out)) : __iostream_type(0), _M_filebuf()
# 905 "/usr/include/c++/5/fstream" 3
{
# 906 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 907 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 908 "/usr/include/c++/5/fstream" 3
}
# 917 "/usr/include/c++/5/fstream" 3
explicit basic_fstream(const ::std::__cxx11::string &__s, ::std::ios_base::openmode
# 918 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::in | ::std::ios_base::out)) : __iostream_type(0), _M_filebuf()
# 920 "/usr/include/c++/5/fstream" 3
{
# 921 "/usr/include/c++/5/fstream" 3
(this->init(&(_M_filebuf)));
# 922 "/usr/include/c++/5/fstream" 3
(this->open(__s, __mode));
# 923 "/usr/include/c++/5/fstream" 3
}
# 925 "/usr/include/c++/5/fstream" 3
basic_fstream(const basic_fstream &) = delete;
# 927 "/usr/include/c++/5/fstream" 3
basic_fstream(basic_fstream &&__rhs) : __iostream_type(::std::move(__rhs)), _M_filebuf(::std::move(__rhs._M_filebuf))
# 930 "/usr/include/c++/5/fstream" 3
{ __iostream_type::set_rdbuf(&(_M_filebuf)); }
# 939 "/usr/include/c++/5/fstream" 3
~basic_fstream()
# 940 "/usr/include/c++/5/fstream" 3
{ }
# 946 "/usr/include/c++/5/fstream" 3
basic_fstream &operator=(const basic_fstream &) = delete;
# 949 "/usr/include/c++/5/fstream" 3
basic_fstream &operator=(basic_fstream &&__rhs)
# 950 "/usr/include/c++/5/fstream" 3
{
# 951 "/usr/include/c++/5/fstream" 3
::std::basic_iostream< _CharT, _Traits> ::operator=(::std::move(__rhs));
# 952 "/usr/include/c++/5/fstream" 3
(_M_filebuf) = ::std::move(__rhs._M_filebuf);
# 953 "/usr/include/c++/5/fstream" 3
return *this;
# 954 "/usr/include/c++/5/fstream" 3
}
# 957 "/usr/include/c++/5/fstream" 3
void swap(basic_fstream &__rhs)
# 958 "/usr/include/c++/5/fstream" 3
{
# 959 "/usr/include/c++/5/fstream" 3
__iostream_type::swap(__rhs);
# 960 "/usr/include/c++/5/fstream" 3
((_M_filebuf).swap(__rhs._M_filebuf));
# 961 "/usr/include/c++/5/fstream" 3
}
# 972 "/usr/include/c++/5/fstream" 3
__filebuf_type *rdbuf() const
# 973 "/usr/include/c++/5/fstream" 3
{ return const_cast< __filebuf_type *>(&(_M_filebuf)); }
# 980 "/usr/include/c++/5/fstream" 3
bool is_open()
# 981 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 986 "/usr/include/c++/5/fstream" 3
bool is_open() const
# 987 "/usr/include/c++/5/fstream" 3
{ return ((_M_filebuf).is_open()); }
# 1001 "/usr/include/c++/5/fstream" 3
void open(const char *__s, ::std::ios_base::openmode
# 1002 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::in | ::std::ios_base::out))
# 1003 "/usr/include/c++/5/fstream" 3
{
# 1004 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, __mode))) {
# 1005 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 1009 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 1010 "/usr/include/c++/5/fstream" 3
}
# 1022 "/usr/include/c++/5/fstream" 3
void open(const ::std::__cxx11::string &__s, ::std::ios_base::openmode
# 1023 "/usr/include/c++/5/fstream" 3
__mode = (::std::ios_base::in | ::std::ios_base::out))
# 1024 "/usr/include/c++/5/fstream" 3
{
# 1025 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).open(__s, __mode))) {
# 1026 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); } else {
# 1030 "/usr/include/c++/5/fstream" 3
(this->clear()); }
# 1031 "/usr/include/c++/5/fstream" 3
}
# 1041 "/usr/include/c++/5/fstream" 3
void close()
# 1042 "/usr/include/c++/5/fstream" 3
{
# 1043 "/usr/include/c++/5/fstream" 3
if (!((_M_filebuf).close())) {
# 1044 "/usr/include/c++/5/fstream" 3
(this->setstate(ios_base::failbit)); }
# 1045 "/usr/include/c++/5/fstream" 3
}
# 1046 "/usr/include/c++/5/fstream" 3
};
# 1050 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits> inline void
# 1052 "/usr/include/c++/5/fstream" 3
swap(basic_filebuf< _CharT, _Traits> &__x, basic_filebuf< _CharT, _Traits> &
# 1053 "/usr/include/c++/5/fstream" 3
__y)
# 1054 "/usr/include/c++/5/fstream" 3
{ (__x.swap(__y)); }
# 1057 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits> inline void
# 1059 "/usr/include/c++/5/fstream" 3
swap(basic_ifstream< _CharT, _Traits> &__x, basic_ifstream< _CharT, _Traits> &
# 1060 "/usr/include/c++/5/fstream" 3
__y)
# 1061 "/usr/include/c++/5/fstream" 3
{ (__x.swap(__y)); }
# 1064 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits> inline void
# 1066 "/usr/include/c++/5/fstream" 3
swap(basic_ofstream< _CharT, _Traits> &__x, basic_ofstream< _CharT, _Traits> &
# 1067 "/usr/include/c++/5/fstream" 3
__y)
# 1068 "/usr/include/c++/5/fstream" 3
{ (__x.swap(__y)); }
# 1071 "/usr/include/c++/5/fstream" 3
template< class _CharT, class _Traits> inline void
# 1073 "/usr/include/c++/5/fstream" 3
swap(basic_fstream< _CharT, _Traits> &__x, basic_fstream< _CharT, _Traits> &
# 1074 "/usr/include/c++/5/fstream" 3
__y)
# 1075 "/usr/include/c++/5/fstream" 3
{ (__x.swap(__y)); }
# 1079 "/usr/include/c++/5/fstream" 3
}
# 42 "/usr/include/c++/5/bits/fstream.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 46 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> void
# 49 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_allocate_internal_buffer()
# 50 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 53 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((!(_M_buf_allocated)) && (!(_M_buf)))
# 54 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 55 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf) = (new char_type [_M_buf_size]);
# 56 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_allocated) = true;
# 57 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 58 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 60 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> void
# 63 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_destroy_internal_buffer() throw()
# 64 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 65 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_buf_allocated)
# 66 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 67 "/usr/include/c++/5/bits/fstream.tcc" 3
delete [] (_M_buf);
# 68 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf) = 0;
# 69 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_allocated) = false;
# 70 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 71 "/usr/include/c++/5/bits/fstream.tcc" 3
delete [] (_M_ext_buf);
# 72 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf) = (0);
# 73 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf_size) = (0);
# 74 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = (0);
# 75 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_end) = (0);
# 76 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 78 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits>
# 80 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::basic_filebuf() : __streambuf_type(), _M_lock(), _M_file(&(_M_lock)), _M_mode(((::std::ios_base::openmode)0)), _M_state_beg(), _M_state_cur(), _M_state_last(), _M_buf((0)), _M_buf_size((8192)), _M_buf_allocated(false), _M_reading(false), _M_writing(false), _M_pback(), _M_pback_cur_save((0)), _M_pback_end_save((0)), _M_pback_init(false), _M_codecvt((0)), _M_ext_buf((0)), _M_ext_buf_size((0)), _M_ext_next((0)), _M_ext_end((0))
# 87 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 88 "/usr/include/c++/5/bits/fstream.tcc" 3
if (has_facet< __codecvt_type> ((this->_M_buf_locale))) {
# 89 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_codecvt) = (&use_facet< __codecvt_type> ((this->_M_buf_locale))); }
# 90 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 93 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits>
# 95 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::basic_filebuf(basic_filebuf &&__rhs) : __streambuf_type(__rhs), _M_lock(), _M_file(std::move(__rhs._M_file), &(_M_lock)), _M_mode(::std::__exchange(__rhs._M_mode, (::std::ios_base::openmode)0)), _M_state_beg(::std::move(__rhs._M_state_beg)), _M_state_cur(::std::move(__rhs._M_state_cur)), _M_state_last(::std::move(__rhs._M_state_last)), _M_buf(::std::__exchange(__rhs._M_buf, nullptr)), _M_buf_size(std::__exchange(__rhs._M_buf_size, 1)), _M_buf_allocated(std::__exchange(__rhs._M_buf_allocated, false)), _M_reading(std::__exchange(__rhs._M_reading, false)), _M_writing(std::__exchange(__rhs._M_writing, false)), _M_pback(__rhs._M_pback), _M_pback_cur_save(::std::__exchange(__rhs._M_pback_cur_save, nullptr)), _M_pback_end_save(::std::__exchange(__rhs._M_pback_end_save, nullptr)), _M_pback_init(std::__exchange(__rhs._M_pback_init, false)), _M_codecvt(__rhs._M_codecvt), _M_ext_buf(std::__exchange(__rhs._M_ext_buf, nullptr)), _M_ext_buf_size(std::__exchange(__rhs._M_ext_buf_size, 0)), _M_ext_next(std::__exchange(__rhs._M_ext_next, nullptr)), _M_ext_end(std::__exchange(__rhs._M_ext_end, nullptr))
# 116 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 117 "/usr/include/c++/5/bits/fstream.tcc" 3
__rhs._M_set_buffer(-1);
# 118 "/usr/include/c++/5/bits/fstream.tcc" 3
(__rhs._M_state_last) = ((__rhs._M_state_cur) = (__rhs._M_state_beg));
# 119 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 121 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> basic_filebuf< _CharT, _Traits> &
# 124 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::operator=(basic_filebuf &&__rhs)
# 125 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 126 "/usr/include/c++/5/bits/fstream.tcc" 3
this->close();
# 127 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::basic_streambuf< _CharT, _Traits> ::operator=(__rhs);
# 128 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_file).swap(__rhs._M_file);
# 129 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_mode) = ::std::__exchange(__rhs._M_mode, (::std::ios_base::openmode)0);
# 130 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_beg) = ::std::move(__rhs._M_state_beg);
# 131 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_cur) = ::std::move(__rhs._M_state_cur);
# 132 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_last) = ::std::move(__rhs._M_state_last);
# 133 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf) = ::std::__exchange(__rhs._M_buf, nullptr);
# 134 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_size) = std::__exchange(__rhs._M_buf_size, 1);
# 135 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_allocated) = std::__exchange(__rhs._M_buf_allocated, false);
# 136 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf) = std::__exchange(__rhs._M_ext_buf, nullptr);
# 137 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf_size) = std::__exchange(__rhs._M_ext_buf_size, 0);
# 138 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = std::__exchange(__rhs._M_ext_next, nullptr);
# 139 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_end) = std::__exchange(__rhs._M_ext_end, nullptr);
# 140 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = std::__exchange(__rhs._M_reading, false);
# 141 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = std::__exchange(__rhs._M_writing, false);
# 142 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_pback_cur_save) = ::std::__exchange(__rhs._M_pback_cur_save, nullptr);
# 143 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_pback_end_save) = ::std::__exchange(__rhs._M_pback_end_save, nullptr);
# 144 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_pback_init) = std::__exchange(__rhs._M_pback_init, false);
# 145 "/usr/include/c++/5/bits/fstream.tcc" 3
__rhs._M_set_buffer(-1);
# 146 "/usr/include/c++/5/bits/fstream.tcc" 3
(__rhs._M_state_last) = ((__rhs._M_state_cur) = (__rhs._M_state_beg));
# 147 "/usr/include/c++/5/bits/fstream.tcc" 3
return *this;
# 148 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 150 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> void
# 153 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::swap(basic_filebuf &__rhs)
# 154 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 155 "/usr/include/c++/5/bits/fstream.tcc" 3
__streambuf_type::swap(__rhs);
# 156 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_file).swap(__rhs._M_file);
# 157 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_mode, __rhs._M_mode);
# 158 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_state_beg, __rhs._M_state_beg);
# 159 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_state_cur, __rhs._M_state_cur);
# 160 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_state_last, __rhs._M_state_last);
# 161 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_buf, __rhs._M_buf);
# 162 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_buf_size, __rhs._M_buf_size);
# 163 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_buf_allocated, __rhs._M_buf_allocated);
# 164 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_ext_buf, __rhs._M_ext_buf);
# 165 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_ext_buf_size, __rhs._M_ext_buf_size);
# 166 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_ext_next, __rhs._M_ext_next);
# 167 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_ext_end, __rhs._M_ext_end);
# 168 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_reading, __rhs._M_reading);
# 169 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_writing, __rhs._M_writing);
# 170 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_pback_cur_save, __rhs._M_pback_cur_save);
# 171 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::swap(_M_pback_end_save, __rhs._M_pback_end_save);
# 172 "/usr/include/c++/5/bits/fstream.tcc" 3
std::swap(_M_pback_init, __rhs._M_pback_init);
# 173 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 176 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::__filebuf_type *
# 179 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::open(const char *__s, ::std::ios_base::openmode __mode)
# 180 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 181 "/usr/include/c++/5/bits/fstream.tcc" 3
__filebuf_type *__ret = (0);
# 182 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!this->is_open())
# 183 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 184 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_file).open(__s, __mode);
# 185 "/usr/include/c++/5/bits/fstream.tcc" 3
if (this->is_open())
# 186 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 187 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_allocate_internal_buffer();
# 188 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_mode) = __mode;
# 191 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = false;
# 192 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = false;
# 193 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 196 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_last) = ((_M_state_cur) = (_M_state_beg));
# 199 "/usr/include/c++/5/bits/fstream.tcc" 3
if (((__mode & ::std::ios_base::ate)) && (this->seekoff(0, ::std::ios_base::end, __mode) == ((pos_type)((off_type)(-1))))) {
# 202 "/usr/include/c++/5/bits/fstream.tcc" 3
this->close(); } else {
# 204 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = this; }
# 205 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 206 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 207 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 208 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 210 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::__filebuf_type *
# 213 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::close()
# 214 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 215 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!this->is_open()) {
# 216 "/usr/include/c++/5/bits/fstream.tcc" 3
return 0; }
# 218 "/usr/include/c++/5/bits/fstream.tcc" 3
bool __testfail = false;
# 219 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 221 "/usr/include/c++/5/bits/fstream.tcc" 3
struct __close_sentry {
# 223 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf *__fb;
# 224 "/usr/include/c++/5/bits/fstream.tcc" 3
__close_sentry(basic_filebuf *__fbi) : __fb(__fbi) { }
# 225 "/usr/include/c++/5/bits/fstream.tcc" 3
~__close_sentry()
# 226 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 227 "/usr/include/c++/5/bits/fstream.tcc" 3
((__fb)->_M_mode) = ((::std::ios_base::openmode)0);
# 228 "/usr/include/c++/5/bits/fstream.tcc" 3
((__fb)->_M_pback_init) = false;
# 229 "/usr/include/c++/5/bits/fstream.tcc" 3
(__fb)->_M_destroy_internal_buffer();
# 230 "/usr/include/c++/5/bits/fstream.tcc" 3
((__fb)->_M_reading) = false;
# 231 "/usr/include/c++/5/bits/fstream.tcc" 3
((__fb)->_M_writing) = false;
# 232 "/usr/include/c++/5/bits/fstream.tcc" 3
(__fb)->_M_set_buffer(-1);
# 233 "/usr/include/c++/5/bits/fstream.tcc" 3
((__fb)->_M_state_last) = (((__fb)->_M_state_cur) = ((__fb)->_M_state_beg));
# 234 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 235 "/usr/include/c++/5/bits/fstream.tcc" 3
} __cs(this);
# 237 "/usr/include/c++/5/bits/fstream.tcc" 3
try
# 238 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 239 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!_M_terminate_output()) {
# 240 "/usr/include/c++/5/bits/fstream.tcc" 3
__testfail = true; }
# 241 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 242 "/usr/include/c++/5/bits/fstream.tcc" 3
catch (::__cxxabiv1::__forced_unwind &)
# 243 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 244 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_file).close();
# 245 "/usr/include/c++/5/bits/fstream.tcc" 3
throw;
# 246 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 247 "/usr/include/c++/5/bits/fstream.tcc" 3
catch (...)
# 248 "/usr/include/c++/5/bits/fstream.tcc" 3
{ __testfail = true; }
# 249 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 251 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!((_M_file).close())) {
# 252 "/usr/include/c++/5/bits/fstream.tcc" 3
__testfail = true; }
# 254 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testfail) {
# 255 "/usr/include/c++/5/bits/fstream.tcc" 3
return 0; } else {
# 257 "/usr/include/c++/5/bits/fstream.tcc" 3
return this; }
# 258 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 260 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 263 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::showmanyc()
# 264 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 265 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __ret = (-1);
# 266 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testin = ((_M_mode) & ::std::ios_base::in);
# 267 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testin && this->is_open())
# 268 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 271 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = ((this->egptr()) - (this->gptr()));
# 279 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__check_facet(_M_codecvt).encoding()) >= 0) {
# 281 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret += ((_M_file).showmanyc() / ((_M_codecvt)->max_length())); }
# 282 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 283 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 284 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 286 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::int_type
# 289 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::underflow()
# 290 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 291 "/usr/include/c++/5/bits/fstream.tcc" 3
int_type __ret = traits_type::eof();
# 292 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testin = ((_M_mode) & ::std::ios_base::in);
# 293 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testin)
# 294 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 295 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_writing)
# 296 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 297 "/usr/include/c++/5/bits/fstream.tcc" 3
if (overflow() == traits_type::eof()) {
# 298 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret; }
# 299 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 300 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = false;
# 301 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 305 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_destroy_pback();
# 307 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((this->gptr()) < (this->egptr())) {
# 308 "/usr/include/c++/5/bits/fstream.tcc" 3
return traits_type::to_int_type(*(this->gptr())); }
# 311 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::size_t __buflen = ((_M_buf_size) > (1)) ? (_M_buf_size) - (1) : (1);
# 314 "/usr/include/c++/5/bits/fstream.tcc" 3
bool __got_eof = false;
# 316 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __ilen = (0);
# 317 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::codecvt_base::result __r = codecvt_base::ok;
# 318 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__check_facet(_M_codecvt).always_noconv()))
# 319 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 320 "/usr/include/c++/5/bits/fstream.tcc" 3
__ilen = (_M_file).xsgetn(reinterpret_cast< char *>((this->eback())), __buflen);
# 322 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__ilen == (0)) {
# 323 "/usr/include/c++/5/bits/fstream.tcc" 3
__got_eof = true; }
# 324 "/usr/include/c++/5/bits/fstream.tcc" 3
} else
# 326 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 329 "/usr/include/c++/5/bits/fstream.tcc" 3
const int __enc = ((_M_codecvt)->encoding());
# 330 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __blen;
# 331 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __rlen;
# 332 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__enc > 0) {
# 333 "/usr/include/c++/5/bits/fstream.tcc" 3
__blen = (__rlen = (__buflen * __enc)); } else
# 335 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 336 "/usr/include/c++/5/bits/fstream.tcc" 3
__blen = ((__buflen + ((_M_codecvt)->max_length())) - 1);
# 337 "/usr/include/c++/5/bits/fstream.tcc" 3
__rlen = __buflen;
# 338 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 339 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __remainder = (_M_ext_end) - (_M_ext_next);
# 340 "/usr/include/c++/5/bits/fstream.tcc" 3
__rlen = ((__rlen > __remainder) ? __rlen - __remainder : (0));
# 344 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_reading) && ((this->egptr()) == (this->eback())) && __remainder) {
# 345 "/usr/include/c++/5/bits/fstream.tcc" 3
__rlen = (0); }
# 349 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_ext_buf_size) < __blen)
# 350 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 351 "/usr/include/c++/5/bits/fstream.tcc" 3
char *__buf = new char [__blen];
# 352 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__remainder) {
# 353 "/usr/include/c++/5/bits/fstream.tcc" 3
__builtin_memcpy(__buf, _M_ext_next, __remainder); }
# 355 "/usr/include/c++/5/bits/fstream.tcc" 3
delete [] (_M_ext_buf);
# 356 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf) = __buf;
# 357 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_buf_size) = __blen;
# 358 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 359 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__remainder) {
# 360 "/usr/include/c++/5/bits/fstream.tcc" 3
__builtin_memmove(_M_ext_buf, _M_ext_next, __remainder); } }
# 362 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = (_M_ext_buf);
# 363 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_end) = ((_M_ext_buf) + __remainder);
# 364 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_last) = (_M_state_cur);
# 366 "/usr/include/c++/5/bits/fstream.tcc" 3
do
# 367 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 368 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__rlen > (0))
# 369 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 373 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((((_M_ext_end) - (_M_ext_buf)) + __rlen) > (_M_ext_buf_size))
# 374 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 375 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::underflow codecvt::max_length() is not valid");
# 378 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 379 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __elen = (_M_file).xsgetn(_M_ext_end, __rlen);
# 380 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__elen == (0)) {
# 381 "/usr/include/c++/5/bits/fstream.tcc" 3
__got_eof = true; } else {
# 382 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__elen == (-1)) {
# 383 "/usr/include/c++/5/bits/fstream.tcc" 3
break; } }
# 384 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_end) += __elen;
# 385 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 387 "/usr/include/c++/5/bits/fstream.tcc" 3
char_type *__iend = (this->eback());
# 388 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_ext_next) < (_M_ext_end)) {
# 389 "/usr/include/c++/5/bits/fstream.tcc" 3
__r = ((_M_codecvt)->in(_M_state_cur, _M_ext_next, _M_ext_end, _M_ext_next, (this->eback()), (this->eback()) + __buflen, __iend)); }
# 393 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::noconv))
# 394 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 395 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::size_t __avail = (_M_ext_end) - (_M_ext_buf);
# 396 "/usr/include/c++/5/bits/fstream.tcc" 3
__ilen = (std::min(__avail, __buflen));
# 397 "/usr/include/c++/5/bits/fstream.tcc" 3
traits_type::copy((this->eback()), reinterpret_cast< char_type *>(_M_ext_buf), __ilen);
# 400 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = ((_M_ext_buf) + __ilen);
# 401 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 403 "/usr/include/c++/5/bits/fstream.tcc" 3
__ilen = (__iend - (this->eback())); }
# 408 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::error)) {
# 409 "/usr/include/c++/5/bits/fstream.tcc" 3
break; }
# 411 "/usr/include/c++/5/bits/fstream.tcc" 3
__rlen = (1);
# 412 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 413 "/usr/include/c++/5/bits/fstream.tcc" 3
while ((__ilen == (0)) && (!__got_eof));
# 414 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 416 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__ilen > (0))
# 417 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 418 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(__ilen);
# 419 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = true;
# 420 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = traits_type::to_int_type(*(this->gptr()));
# 421 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 422 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__got_eof)
# 423 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 427 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 428 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = false;
# 431 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::partial)) {
# 432 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::underflow incomplete character in file"); }
# 434 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 435 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::error)) {
# 436 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::underflow invalid byte sequence in file"); } else {
# 439 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::underflow error reading the file"); } } }
# 441 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 442 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 443 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 445 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::int_type
# 448 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::pbackfail(int_type __i)
# 449 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 450 "/usr/include/c++/5/bits/fstream.tcc" 3
int_type __ret = traits_type::eof();
# 451 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testin = ((_M_mode) & ::std::ios_base::in);
# 452 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testin)
# 453 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 454 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_writing)
# 455 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 456 "/usr/include/c++/5/bits/fstream.tcc" 3
if (overflow() == traits_type::eof()) {
# 457 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret; }
# 458 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 459 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = false;
# 460 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 463 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testpb = _M_pback_init;
# 464 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testeof = traits_type::eq_int_type(__i, __ret);
# 465 "/usr/include/c++/5/bits/fstream.tcc" 3
int_type __tmp;
# 466 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((this->eback()) < (this->gptr()))
# 467 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 468 "/usr/include/c++/5/bits/fstream.tcc" 3
(this->gbump(-1));
# 469 "/usr/include/c++/5/bits/fstream.tcc" 3
__tmp = traits_type::to_int_type(*(this->gptr()));
# 470 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 471 "/usr/include/c++/5/bits/fstream.tcc" 3
if (this->seekoff(-1, ::std::ios_base::cur) != ((pos_type)((off_type)(-1))))
# 472 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 473 "/usr/include/c++/5/bits/fstream.tcc" 3
__tmp = this->underflow();
# 474 "/usr/include/c++/5/bits/fstream.tcc" 3
if (traits_type::eq_int_type(__tmp, __ret)) {
# 475 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret; }
# 476 "/usr/include/c++/5/bits/fstream.tcc" 3
} else
# 478 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 484 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 485 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 489 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((!__testeof) && traits_type::eq_int_type(__i, __tmp)) {
# 490 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = __i; } else {
# 491 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testeof) {
# 492 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = traits_type::not_eof(__i); } else {
# 493 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!__testpb)
# 494 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 495 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_create_pback();
# 496 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = true;
# 497 "/usr/include/c++/5/bits/fstream.tcc" 3
(*(this->gptr())) = traits_type::to_char_type(__i);
# 498 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = __i;
# 499 "/usr/include/c++/5/bits/fstream.tcc" 3
} } }
# 500 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 501 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 502 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 504 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::int_type
# 507 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::overflow(int_type __c)
# 508 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 509 "/usr/include/c++/5/bits/fstream.tcc" 3
int_type __ret = traits_type::eof();
# 510 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testeof = traits_type::eq_int_type(__c, __ret);
# 511 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testout = (((_M_mode) & ::std::ios_base::out)) || (((_M_mode) & ::std::ios_base::app));
# 513 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testout)
# 514 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 515 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_reading)
# 516 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 517 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_destroy_pback();
# 518 "/usr/include/c++/5/bits/fstream.tcc" 3
const int __gptr_off = _M_get_ext_pos(_M_state_last);
# 519 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_seek(__gptr_off, ios_base::cur, _M_state_last) == ((pos_type)((off_type)(-1)))) {
# 521 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret; }
# 522 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 523 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((this->pbase()) < (this->pptr()))
# 524 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 526 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!__testeof)
# 527 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 528 "/usr/include/c++/5/bits/fstream.tcc" 3
(*(this->pptr())) = traits_type::to_char_type(__c);
# 529 "/usr/include/c++/5/bits/fstream.tcc" 3
(this->pbump(1));
# 530 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 534 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_convert_to_external((this->pbase()), (this->pptr()) - (this->pbase())))
# 536 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 537 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(0);
# 538 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = traits_type::not_eof(__c);
# 539 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 540 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 541 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_buf_size) > (1))
# 542 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 546 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(0);
# 547 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = true;
# 548 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!__testeof)
# 549 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 550 "/usr/include/c++/5/bits/fstream.tcc" 3
(*(this->pptr())) = traits_type::to_char_type(__c);
# 551 "/usr/include/c++/5/bits/fstream.tcc" 3
(this->pbump(1));
# 552 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 553 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = traits_type::not_eof(__c);
# 554 "/usr/include/c++/5/bits/fstream.tcc" 3
} else
# 556 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 558 "/usr/include/c++/5/bits/fstream.tcc" 3
char_type __conv = traits_type::to_char_type(__c);
# 559 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testeof || _M_convert_to_external(&__conv, 1))
# 560 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 561 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = true;
# 562 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = traits_type::not_eof(__c);
# 563 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 564 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 565 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 566 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 567 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 569 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> bool
# 572 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_convert_to_external(_CharT *__ibuf, ::std::streamsize __ilen)
# 573 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 575 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __elen;
# 576 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __plen;
# 577 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__check_facet(_M_codecvt).always_noconv()))
# 578 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 579 "/usr/include/c++/5/bits/fstream.tcc" 3
__elen = (_M_file).xsputn(reinterpret_cast< char *>(__ibuf), __ilen);
# 580 "/usr/include/c++/5/bits/fstream.tcc" 3
__plen = __ilen;
# 581 "/usr/include/c++/5/bits/fstream.tcc" 3
} else
# 583 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 586 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __blen = __ilen * ((_M_codecvt)->max_length());
# 587 "/usr/include/c++/5/bits/fstream.tcc" 3
char *__buf = static_cast< char *>(__builtin_alloca(__blen));
# 589 "/usr/include/c++/5/bits/fstream.tcc" 3
char *__bend;
# 590 "/usr/include/c++/5/bits/fstream.tcc" 3
const char_type *__iend;
# 591 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::codecvt_base::result __r;
# 592 "/usr/include/c++/5/bits/fstream.tcc" 3
__r = ((_M_codecvt)->out(_M_state_cur, __ibuf, __ibuf + __ilen, __iend, __buf, __buf + __blen, __bend));
# 595 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__r == (codecvt_base::ok)) || (__r == (codecvt_base::partial))) {
# 596 "/usr/include/c++/5/bits/fstream.tcc" 3
__blen = (__bend - __buf); } else {
# 597 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::noconv))
# 598 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 600 "/usr/include/c++/5/bits/fstream.tcc" 3
__buf = (reinterpret_cast< char *>(__ibuf));
# 601 "/usr/include/c++/5/bits/fstream.tcc" 3
__blen = __ilen;
# 602 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 604 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::_M_convert_to_external conversion error"); } }
# 607 "/usr/include/c++/5/bits/fstream.tcc" 3
__elen = (_M_file).xsputn(__buf, __blen);
# 608 "/usr/include/c++/5/bits/fstream.tcc" 3
__plen = __blen;
# 611 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__r == (codecvt_base::partial)) && (__elen == __plen))
# 612 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 613 "/usr/include/c++/5/bits/fstream.tcc" 3
const char_type *__iresume = __iend;
# 614 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __rlen = (this->pptr()) - __iend;
# 615 "/usr/include/c++/5/bits/fstream.tcc" 3
__r = ((_M_codecvt)->out(_M_state_cur, __iresume, __iresume + __rlen, __iend, __buf, __buf + __blen, __bend));
# 618 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r != (codecvt_base::error))
# 619 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 620 "/usr/include/c++/5/bits/fstream.tcc" 3
__rlen = (__bend - __buf);
# 621 "/usr/include/c++/5/bits/fstream.tcc" 3
__elen = (_M_file).xsputn(__buf, __rlen);
# 622 "/usr/include/c++/5/bits/fstream.tcc" 3
__plen = __rlen;
# 623 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 625 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::_M_convert_to_external conversion error"); }
# 627 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 628 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 629 "/usr/include/c++/5/bits/fstream.tcc" 3
return __elen == __plen;
# 630 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 632 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 635 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::xsgetn(_CharT *__s, ::std::streamsize __n)
# 636 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 638 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __ret = (0);
# 639 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_pback_init)
# 640 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 641 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__n > (0)) && ((this->gptr()) == (this->eback())))
# 642 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 643 "/usr/include/c++/5/bits/fstream.tcc" 3
(*(__s++)) = (*(this->gptr()));
# 644 "/usr/include/c++/5/bits/fstream.tcc" 3
(this->gbump(1));
# 645 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = (1);
# 646 "/usr/include/c++/5/bits/fstream.tcc" 3
--__n;
# 647 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 648 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_destroy_pback();
# 649 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 650 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_writing)
# 651 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 652 "/usr/include/c++/5/bits/fstream.tcc" 3
if (overflow() == traits_type::eof()) {
# 653 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret; }
# 654 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 655 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = false;
# 656 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 661 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testin = ((_M_mode) & ::std::ios_base::in);
# 662 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __buflen = ((_M_buf_size) > (1)) ? (_M_buf_size) - (1) : (1);
# 664 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__n > __buflen) && (__check_facet(_M_codecvt).always_noconv()) && __testin)
# 666 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 668 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __avail = (this->egptr()) - (this->gptr());
# 669 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__avail != (0))
# 670 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 671 "/usr/include/c++/5/bits/fstream.tcc" 3
traits_type::copy(__s, (this->gptr()), __avail);
# 672 "/usr/include/c++/5/bits/fstream.tcc" 3
__s += __avail;
# 673 "/usr/include/c++/5/bits/fstream.tcc" 3
(this->setg((this->eback()), (this->gptr()) + __avail, (this->egptr())));
# 675 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret += __avail;
# 676 "/usr/include/c++/5/bits/fstream.tcc" 3
__n -= __avail;
# 677 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 681 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __len;
# 682 "/usr/include/c++/5/bits/fstream.tcc" 3
for (; ;)
# 683 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 684 "/usr/include/c++/5/bits/fstream.tcc" 3
__len = (_M_file).xsgetn(reinterpret_cast< char *>(__s), __n);
# 686 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__len == (-1)) {
# 687 "/usr/include/c++/5/bits/fstream.tcc" 3
__throw_ios_failure("basic_filebuf::xsgetn error reading the file"); }
# 689 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__len == (0)) {
# 690 "/usr/include/c++/5/bits/fstream.tcc" 3
break; }
# 692 "/usr/include/c++/5/bits/fstream.tcc" 3
__n -= __len;
# 693 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret += __len;
# 694 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__n == (0)) {
# 695 "/usr/include/c++/5/bits/fstream.tcc" 3
break; }
# 697 "/usr/include/c++/5/bits/fstream.tcc" 3
__s += __len;
# 698 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 700 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__n == (0))
# 701 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 702 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(0);
# 703 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = true;
# 704 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 705 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__len == (0))
# 706 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 710 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 711 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = false;
# 712 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 713 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 715 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret += __streambuf_type::xsgetn(__s, __n); }
# 717 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 718 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 720 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> streamsize
# 723 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::xsputn(const _CharT *__s, ::std::streamsize __n)
# 724 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 725 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __ret = (0);
# 729 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testout = (((_M_mode) & ::std::ios_base::out)) || (((_M_mode) & ::std::ios_base::app));
# 731 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__check_facet(_M_codecvt).always_noconv()) && __testout && (!(_M_reading)))
# 733 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 735 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __chunk = (1UL << 10);
# 736 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __bufavail = (this->epptr()) - (this->pptr());
# 739 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((!(_M_writing)) && ((_M_buf_size) > (1))) {
# 740 "/usr/include/c++/5/bits/fstream.tcc" 3
__bufavail = ((_M_buf_size) - (1)); }
# 742 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __limit = std::min(__chunk, __bufavail);
# 743 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__n >= __limit)
# 744 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 745 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __buffill = (this->pptr()) - (this->pbase());
# 746 "/usr/include/c++/5/bits/fstream.tcc" 3
const char *__buf = reinterpret_cast< const char *>((this->pbase()));
# 747 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = (_M_file).xsputn_2(__buf, __buffill, reinterpret_cast< const char *>(__s), __n);
# 750 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__ret == (__buffill + __n))
# 751 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 752 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(0);
# 753 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = true;
# 754 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 755 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__ret > __buffill) {
# 756 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret -= __buffill; } else {
# 758 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = (0); }
# 759 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 761 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = __streambuf_type::xsputn(__s, __n); }
# 762 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 764 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = __streambuf_type::xsputn(__s, __n); }
# 765 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 766 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 768 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::__streambuf_type *
# 771 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::setbuf(char_type *__s, ::std::streamsize __n)
# 772 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 773 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!this->is_open())
# 774 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 775 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__s == 0) && (__n == (0))) {
# 776 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_size) = (1); } else {
# 777 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__s && (__n > (0)))
# 778 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 787 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf) = __s;
# 788 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_buf_size) = __n;
# 789 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 790 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 791 "/usr/include/c++/5/bits/fstream.tcc" 3
return this;
# 792 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 797 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::pos_type
# 800 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::seekoff(off_type __off, ::std::ios_base::seekdir __way, ::std::ios_base::openmode)
# 801 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 802 "/usr/include/c++/5/bits/fstream.tcc" 3
int __width = 0;
# 803 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_codecvt) {
# 804 "/usr/include/c++/5/bits/fstream.tcc" 3
__width = ((_M_codecvt)->encoding()); }
# 805 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__width < 0) {
# 806 "/usr/include/c++/5/bits/fstream.tcc" 3
__width = 0; }
# 808 "/usr/include/c++/5/bits/fstream.tcc" 3
pos_type __ret = ((pos_type)((off_type)(-1)));
# 809 "/usr/include/c++/5/bits/fstream.tcc" 3
const bool __testfail = (__off != 0) && (__width <= 0);
# 810 "/usr/include/c++/5/bits/fstream.tcc" 3
if (this->is_open() && (!__testfail))
# 811 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 816 "/usr/include/c++/5/bits/fstream.tcc" 3
bool __no_movement = (__way == ::std::ios_base::cur) && (__off == 0) && ((!(_M_writing)) || ((_M_codecvt)->always_noconv()));
# 820 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!__no_movement) {
# 821 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_destroy_pback(); }
# 828 "/usr/include/c++/5/bits/fstream.tcc" 3
__state_type __state = _M_state_beg;
# 829 "/usr/include/c++/5/bits/fstream.tcc" 3
off_type __computed_off = __off * __width;
# 830 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_reading) && (__way == ::std::ios_base::cur))
# 831 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 832 "/usr/include/c++/5/bits/fstream.tcc" 3
__state = (_M_state_last);
# 833 "/usr/include/c++/5/bits/fstream.tcc" 3
__computed_off += _M_get_ext_pos(__state);
# 834 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 835 "/usr/include/c++/5/bits/fstream.tcc" 3
if (!__no_movement) {
# 836 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = _M_seek(__computed_off, __way, __state); } else
# 838 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 839 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_writing) {
# 840 "/usr/include/c++/5/bits/fstream.tcc" 3
__computed_off = ((this->pptr()) - (this->pbase())); }
# 842 "/usr/include/c++/5/bits/fstream.tcc" 3
off_type __file_off = (_M_file).seekoff(0, ::std::ios_base::cur);
# 843 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__file_off != ((off_type)(-1)))
# 844 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 845 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = (__file_off + __computed_off);
# 846 "/usr/include/c++/5/bits/fstream.tcc" 3
(__ret.state(__state));
# 847 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 848 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 849 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 850 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 851 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 857 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::pos_type
# 860 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::seekpos(pos_type __pos, ::std::ios_base::openmode)
# 861 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 862 "/usr/include/c++/5/bits/fstream.tcc" 3
pos_type __ret = ((pos_type)((off_type)(-1)));
# 863 "/usr/include/c++/5/bits/fstream.tcc" 3
if (this->is_open())
# 864 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 866 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_destroy_pback();
# 867 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = _M_seek((off_type)__pos, ios_base::beg, (__pos.state()));
# 868 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 869 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 870 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 872 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> typename basic_filebuf< _CharT, _Traits> ::pos_type
# 875 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_seek(off_type __off, ::std::ios_base::seekdir __way, __state_type __state)
# 876 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 877 "/usr/include/c++/5/bits/fstream.tcc" 3
pos_type __ret = ((pos_type)((off_type)(-1)));
# 878 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_terminate_output())
# 879 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 880 "/usr/include/c++/5/bits/fstream.tcc" 3
off_type __file_off = (_M_file).seekoff(__off, __way);
# 881 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__file_off != ((off_type)(-1)))
# 882 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 883 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_reading) = false;
# 884 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_writing) = false;
# 885 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = ((_M_ext_end) = (_M_ext_buf));
# 886 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 887 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_cur) = __state;
# 888 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = __file_off;
# 889 "/usr/include/c++/5/bits/fstream.tcc" 3
(__ret.state(_M_state_cur));
# 890 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 891 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 892 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 893 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 898 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> int
# 900 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_get_ext_pos(__state_type &__state)
# 901 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 902 "/usr/include/c++/5/bits/fstream.tcc" 3
if (((_M_codecvt)->always_noconv())) {
# 903 "/usr/include/c++/5/bits/fstream.tcc" 3
return (this->gptr()) - (this->egptr()); } else
# 905 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 909 "/usr/include/c++/5/bits/fstream.tcc" 3
const int __gptr_off = ((_M_codecvt)->length(__state, _M_ext_buf, _M_ext_next, (this->gptr()) - (this->eback())));
# 912 "/usr/include/c++/5/bits/fstream.tcc" 3
return ((_M_ext_buf) + __gptr_off) - (_M_ext_end);
# 913 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 914 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 916 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> bool
# 919 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::_M_terminate_output()
# 920 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 922 "/usr/include/c++/5/bits/fstream.tcc" 3
bool __testvalid = true;
# 923 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((this->pbase()) < (this->pptr()))
# 924 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 925 "/usr/include/c++/5/bits/fstream.tcc" 3
const int_type __tmp = this->overflow();
# 926 "/usr/include/c++/5/bits/fstream.tcc" 3
if (traits_type::eq_int_type(__tmp, traits_type::eof())) {
# 927 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = false; }
# 928 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 931 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_writing) && (!(__check_facet(_M_codecvt).always_noconv())) && __testvalid)
# 933 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 937 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::size_t __blen = (128);
# 938 "/usr/include/c++/5/bits/fstream.tcc" 3
char __buf[__blen];
# 939 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::codecvt_base::result __r;
# 940 "/usr/include/c++/5/bits/fstream.tcc" 3
::std::streamsize __ilen = (0);
# 942 "/usr/include/c++/5/bits/fstream.tcc" 3
do
# 943 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 944 "/usr/include/c++/5/bits/fstream.tcc" 3
char *__next;
# 945 "/usr/include/c++/5/bits/fstream.tcc" 3
__r = ((_M_codecvt)->unshift(_M_state_cur, __buf, (__buf) + __blen, __next));
# 947 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__r == (codecvt_base::error)) {
# 948 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = false; } else {
# 949 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__r == (codecvt_base::ok)) || (__r == (codecvt_base::partial)))
# 951 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 952 "/usr/include/c++/5/bits/fstream.tcc" 3
__ilen = (__next - (__buf));
# 953 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__ilen > (0))
# 954 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 955 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __elen = (_M_file).xsputn(__buf, __ilen);
# 956 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__elen != __ilen) {
# 957 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = false; }
# 958 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 959 "/usr/include/c++/5/bits/fstream.tcc" 3
} }
# 960 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 961 "/usr/include/c++/5/bits/fstream.tcc" 3
while ((__r == (codecvt_base::partial)) && (__ilen > (0)) && __testvalid);
# 963 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testvalid)
# 964 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 969 "/usr/include/c++/5/bits/fstream.tcc" 3
const int_type __tmp = this->overflow();
# 970 "/usr/include/c++/5/bits/fstream.tcc" 3
if (traits_type::eq_int_type(__tmp, traits_type::eof())) {
# 971 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = false; }
# 972 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 973 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 974 "/usr/include/c++/5/bits/fstream.tcc" 3
return __testvalid;
# 975 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 977 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> int
# 980 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::sync()
# 981 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 984 "/usr/include/c++/5/bits/fstream.tcc" 3
int __ret = 0;
# 985 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((this->pbase()) < (this->pptr()))
# 986 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 987 "/usr/include/c++/5/bits/fstream.tcc" 3
const int_type __tmp = this->overflow();
# 988 "/usr/include/c++/5/bits/fstream.tcc" 3
if (traits_type::eq_int_type(__tmp, traits_type::eof())) {
# 989 "/usr/include/c++/5/bits/fstream.tcc" 3
__ret = (-1); }
# 990 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 991 "/usr/include/c++/5/bits/fstream.tcc" 3
return __ret;
# 992 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 994 "/usr/include/c++/5/bits/fstream.tcc" 3
template< class _CharT, class _Traits> void
# 997 "/usr/include/c++/5/bits/fstream.tcc" 3
basic_filebuf< _CharT, _Traits> ::imbue(const ::std::locale &__loc)
# 998 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 999 "/usr/include/c++/5/bits/fstream.tcc" 3
bool __testvalid = true;
# 1001 "/usr/include/c++/5/bits/fstream.tcc" 3
const __codecvt_type *_M_codecvt_tmp = (0);
# 1002 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__builtin_expect(has_facet< __codecvt_type> (__loc), true)) {
# 1003 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_codecvt_tmp = (&use_facet< __codecvt_type> (__loc)); }
# 1005 "/usr/include/c++/5/bits/fstream.tcc" 3
if (this->is_open())
# 1006 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 1008 "/usr/include/c++/5/bits/fstream.tcc" 3
if (((_M_reading) || (_M_writing)) && ((__check_facet(_M_codecvt).encoding()) == (-1))) {
# 1010 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = false; } else
# 1012 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 1013 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_reading)
# 1014 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 1015 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((__check_facet(_M_codecvt).always_noconv()))
# 1016 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 1017 "/usr/include/c++/5/bits/fstream.tcc" 3
if (_M_codecvt_tmp && (!(__check_facet(_M_codecvt_tmp).always_noconv()))) {
# 1019 "/usr/include/c++/5/bits/fstream.tcc" 3
__testvalid = (this->seekoff(0, ::std::ios_base::cur, _M_mode) != ((pos_type)((off_type)(-1)))); }
# 1021 "/usr/include/c++/5/bits/fstream.tcc" 3
} else
# 1023 "/usr/include/c++/5/bits/fstream.tcc" 3
{
# 1025 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = ((_M_ext_buf) + ((_M_codecvt)->length(_M_state_last, _M_ext_buf, _M_ext_next, (this->gptr()) - (this->eback()))));
# 1029 "/usr/include/c++/5/bits/fstream.tcc" 3
const ::std::streamsize __remainder = (_M_ext_end) - (_M_ext_next);
# 1030 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__remainder) {
# 1031 "/usr/include/c++/5/bits/fstream.tcc" 3
__builtin_memmove(_M_ext_buf, _M_ext_next, __remainder); }
# 1033 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_next) = (_M_ext_buf);
# 1034 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_ext_end) = ((_M_ext_buf) + __remainder);
# 1035 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1);
# 1036 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_state_last) = ((_M_state_cur) = (_M_state_beg));
# 1037 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 1038 "/usr/include/c++/5/bits/fstream.tcc" 3
} else {
# 1039 "/usr/include/c++/5/bits/fstream.tcc" 3
if ((_M_writing) && (__testvalid = _M_terminate_output())) {
# 1040 "/usr/include/c++/5/bits/fstream.tcc" 3
_M_set_buffer(-1); } }
# 1041 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 1042 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 1044 "/usr/include/c++/5/bits/fstream.tcc" 3
if (__testvalid) {
# 1045 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_codecvt) = _M_codecvt_tmp; } else {
# 1047 "/usr/include/c++/5/bits/fstream.tcc" 3
(_M_codecvt) = 0; }
# 1048 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 1053 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_filebuf< char, char_traits< char> > ;
# 1054 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_ifstream< char, char_traits< char> > ;
# 1055 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_ofstream< char, char_traits< char> > ;
# 1056 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_fstream< char, char_traits< char> > ;
# 1059 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_filebuf< wchar_t, char_traits< wchar_t> > ;
# 1060 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_ifstream< wchar_t, char_traits< wchar_t> > ;
# 1061 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_ofstream< wchar_t, char_traits< wchar_t> > ;
# 1062 "/usr/include/c++/5/bits/fstream.tcc" 3
extern template class basic_fstream< wchar_t, char_traits< wchar_t> > ;
# 1067 "/usr/include/c++/5/bits/fstream.tcc" 3
}
# 80 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"

# 80 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline int stringRemoveDelimiter(char delimiter, const char *string)
# 81 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 82 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = 0;
# 84 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
while ((string[string_start]) == delimiter)
# 85 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 86 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
string_start++;
# 87 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 89 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (string_start >= (((int)strlen(string)) - 1))
# 90 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 91 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return 0;
# 92 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 94 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return string_start;
# 95 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 97 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline int getFileExtension(char *filename, char **extension)
# 98 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 99 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_length = (int)strlen(filename);
# 101 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
while ((filename[string_length--]) != ('.'))
# 102 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 103 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (string_length == 0) {
# 104 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
break; }
# 105 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 107 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (string_length > 0) { string_length += 2; }
# 109 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (string_length == 0) {
# 110 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(*extension) = (__null); } else {
# 112 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(*extension) = (&(filename[string_length])); }
# 114 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return string_length;
# 115 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 118 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline bool checkCmdLineFlag(const int argc, const char **argv, const char *string_ref)
# 119 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 120 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bool bFound = false;
# 122 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (argc >= 1)
# 123 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 124 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 125 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 126 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 127 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *string_argv = &((argv[i])[string_start]);
# 129 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *equal_pos = strchr(string_argv, '=');
# 130 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int argv_length = (int)((equal_pos == (0)) ? strlen(string_argv) : (equal_pos - string_argv));
# 132 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int length = (int)strlen(string_ref);
# 134 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if ((length == argv_length) && (!(strncasecmp(string_argv, string_ref, length))))
# 135 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 136 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bFound = true;
# 137 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
continue;
# 138 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 139 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} }
# 140 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 142 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return bFound;
# 143 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 146 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
template< class T> inline bool
# 147 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
getCmdLineArgumentValue(const int argc, const char **argv, const char *string_ref, T *value)
# 148 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 149 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bool bFound = false;
# 151 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (argc >= 1)
# 152 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 153 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (int i = 1; i < argc; i++)
# 154 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 155 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 156 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *string_argv = &((argv[i])[string_start]);
# 157 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int length = (int)strlen(string_ref);
# 159 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 160 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 161 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if ((length + 1) <= ((int)strlen(string_argv)))
# 162 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 163 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int auto_inc = ((string_argv[length]) == ('=')) ? 1 : 0;
# 164 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(*value) = ((T)atoi(&(string_argv[length + auto_inc])));
# 165 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 167 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bFound = true;
# 168 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
i = argc;
# 169 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 170 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 171 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 173 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return bFound;
# 174 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 176 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline int getCmdLineArgumentInt(const int argc, const char **argv, const char *string_ref)
# 177 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 178 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bool bFound = false;
# 179 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int value = (-1);
# 181 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (argc >= 1)
# 182 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 183 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 184 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 185 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 186 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *string_argv = &((argv[i])[string_start]);
# 187 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int length = (int)strlen(string_ref);
# 189 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 190 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 191 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if ((length + 1) <= ((int)strlen(string_argv)))
# 192 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 193 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int auto_inc = ((string_argv[length]) == ('=')) ? 1 : 0;
# 194 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
value = atoi(&(string_argv[length + auto_inc]));
# 195 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} else
# 197 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 198 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
value = 0;
# 199 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 201 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bFound = true;
# 202 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
continue;
# 203 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 204 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} }
# 205 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 207 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (bFound)
# 208 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 209 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return value;
# 210 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} else
# 212 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 213 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return 0;
# 214 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 215 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 217 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline float getCmdLineArgumentFloat(const int argc, const char **argv, const char *string_ref)
# 218 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 219 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bool bFound = false;
# 220 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
float value = (-1);
# 222 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (argc >= 1)
# 223 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 224 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 225 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 226 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 227 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *string_argv = &((argv[i])[string_start]);
# 228 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int length = (int)strlen(string_ref);
# 230 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 231 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 232 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if ((length + 1) <= ((int)strlen(string_argv)))
# 233 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 234 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int auto_inc = ((string_argv[length]) == ('=')) ? 1 : 0;
# 235 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
value = ((float)atof(&(string_argv[length + auto_inc])));
# 236 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} else
# 238 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 239 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
value = (0.0F);
# 240 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 242 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bFound = true;
# 243 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
continue;
# 244 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 245 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} }
# 246 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 248 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (bFound)
# 249 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 250 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return value;
# 251 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} else
# 253 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 254 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return 0;
# 255 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 256 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 258 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline bool getCmdLineArgumentString(const int argc, const char **argv, const char *
# 259 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
string_ref, char **string_retval)
# 260 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 261 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bool bFound = false;
# 263 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (argc >= 1)
# 264 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 265 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (int i = 1; i < argc; i++) {
# 266 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 267 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int string_start = stringRemoveDelimiter('-', argv[i]);
# 268 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
char *string_argv = (char *)(&((argv[i])[string_start]));
# 269 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
int length = (int)strlen(string_ref);
# 271 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (!(strncasecmp(string_argv, string_ref, length)))
# 272 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 273 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(*string_retval) = (&(string_argv[length + 1]));
# 274 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
bFound = true;
# 275 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
continue;
# 276 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 277 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} }
# 278 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 280 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (!bFound)
# 281 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 282 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(*string_retval) = (__null);
# 283 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 285 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return bFound;
# 286 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 296 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
inline char *sdkFindFilePath(const char *filename, const char *executable_path)
# 297 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 302 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
const char *searchPath[] = {"./", "./<executable_name>_data_files/", "./common/", "./common/data/", "./data/", "./src/", "./src/<executable_name>/data/", "./inc/", "./0_Simple/", "./1_Utilities/", "./2_Graphics/", "./3_Imaging/", "./4_Finance/", "./5_Simulations/", "./6_Advanced/", "./7_CUDALibraries/", "./8_Android/", "./samples/", "./0_Simple/<executable_name>/data/", "./1_Utilities/<executable_name>/data/", "./2_Graphics/<executable_name>/data/", "./3_Imaging/<executable_name>/data/", "./4_Finance/<executable_name>/data/", "./5_Simulations/<executable_name>/data/", "./6_Advanced/<executable_name>/data/", "./7_CUDALibraries/<executable_name>/", "./7_CUDALibraries/<executable_name>/data/", "../", "../common/", "../common/data/", "../data/", "../src/", "../inc/", "../0_Simple/<executable_name>/data/", "../1_Utilities/<executable_name>/data/", "../2_Graphics/<executable_name>/data/", "../3_Imaging/<executable_name>/data/", "../4_Finance/<executable_name>/data/", "../5_Simulations/<executable_name>/data/", "../6_Advanced/<executable_name>/data/", "../7_CUDALibraries/<executable_name>/data/", "../8_Android/<executable_name>/data/", "../samples/<executable_name>/data/", "../../", "../../common/", "../../common/data/", "../../data/", "../../src/", "../../inc/", "../../sandbox/<executable_name>/data/", "../../0_Simple/<executable_name>/data/", "../../1_Utilities/<executable_name>/data/", "../../2_Graphics/<executable_name>/data/", "../../3_Imaging/<executable_name>/data/", "../../4_Finance/<executable_name>/data/", "../../5_Simulations/<executable_name>/data/", "../../6_Advanced/<executable_name>/data/", "../../7_CUDALibraries/<executable_name>/data/", "../../8_Android/<executable_name>/data/", "../../samples/<executable_name>/data/", "../../../", "../../../src/<executable_name>/", "../../../src/<executable_name>/data/", "../../../src/<executable_name>/src/", "../../../src/<executable_name>/inc/", "../../../sandbox/<executable_name>/", "../../../sandbox/<executable_name>/data/", "../../../sandbox/<executable_name>/src/", "../../../sandbox/<executable_name>/inc/", "../../../0_Simple/<executable_name>/data/", "../../../1_Utilities/<executable_name>/data/", "../../../2_Graphics/<executable_name>/data/", "../../../3_Imaging/<executable_name>/data/", "../../../4_Finance/<executable_name>/data/", "../../../5_Simulations/<executable_name>/data/", "../../../6_Advanced/<executable_name>/data/", "../../../7_CUDALibraries/<executable_name>/data/", "../../../8_Android/<executable_name>/data/", "../../../0_Simple/<executable_name>/", "../../../1_Utilities/<executable_name>/", "../../../2_Graphics/<executable_name>/", "../../../3_Imaging/<executable_name>/", "../../../4_Finance/<executable_name>/", "../../../5_Simulations/<executable_name>/", "../../../6_Advanced/<executable_name>/", "../../../7_CUDALibraries/<executable_name>/", "../../../8_Android/<executable_name>/", "../../../samples/<executable_name>/data/", "../../../common/", "../../../common/data/", "../../../data/", "../../../../", "../../../../src/<executable_name>/", "../../../../src/<executable_name>/data/", "../../../../src/<executable_name>/src/", "../../../../src/<executable_name>/inc/", "../../../../sandbox/<executable_name>/", "../../../../sandbox/<executable_name>/data/", "../../../../sandbox/<executable_name>/src/", "../../../../sandbox/<executable_name>/inc/", "../../../../0_Simple/<executable_name>/data/", "../../../../1_Utilities/<executable_name>/data/", "../../../../2_Graphics/<executable_name>/data/", "../../../../3_Imaging/<executable_name>/data/", "../../../../4_Finance/<executable_name>/data/", "../../../../5_Simulations/<executable_name>/data/", "../../../../6_Advanced/<executable_name>/data/", "../../../../7_CUDALibraries/<executable_name>/data/", "../../../../8_Android/<executable_name>/data/", "../../../../0_Simple/<executable_name>/", "../../../../1_Utilities/<executable_name>/", "../../../../2_Graphics/<executable_name>/", "../../../../3_Imaging/<executable_name>/", "../../../../4_Finance/<executable_name>/", "../../../../5_Simulations/<executable_name>/", "../../../../6_Advanced/<executable_name>/", "../../../../7_CUDALibraries/<executable_name>/", "../../../../8_Android/<executable_name>/", "../../../../samples/<executable_name>/data/", "../../../../common/", "../../../../common/data/", "../../../../data/", "../../../../../", "../../../../../src/<executable_name>/", "../../../../../src/<executable_name>/data/", "../../../../../src/<executable_name>/src/", "../../../../../src/<executable_name>/inc/", "../../../../../sandbox/<executable_name>/", "../../../../../sandbox/<executable_name>/data/", "../../../../../sandbox/<executable_name>/src/", "../../../../../sandbox/<executable_name>/inc/", "../../../../../0_Simple/<executable_name>/data/", "../../../../../1_Utilities/<executable_name>/data/", "../../../../../2_Graphics/<executable_name>/data/", "../../../../../3_Imaging/<executable_name>/data/", "../../../../../4_Finance/<executable_name>/data/", "../../../../../5_Simulations/<executable_name>/data/", "../../../../../6_Advanced/<executable_name>/data/", "../../../../../7_CUDALibraries/<executable_name>/data/", "../../../../../8_Android/<executable_name>/data/", "../../../../../samples/<executable_name>/data/", "../../../../../common/", "../../../../../common/data/"};
# 453 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
std::__cxx11::string executable_name;
# 455 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (executable_path != (0))
# 456 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 457 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
(executable_name = ((std::__cxx11::string)(executable_path)));
# 472 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
::size_t delimiter_pos = executable_name.find_last_of('/');
# 473 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
executable_name.erase(0, delimiter_pos + (1));
# 475 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 478 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
for (unsigned i = (0); i < (sizeof searchPath / sizeof(char *)); ++i) {
# 479 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 480 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
std::__cxx11::string path((searchPath)[i]);
# 481 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
::size_t executable_name_pos = path.find("<executable_name>");
# 485 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (executable_name_pos != std::__cxx11::basic_string< char, std::char_traits< char> , std::allocator< char> > ::npos)
# 486 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 487 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (executable_path != (0))
# 488 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 489 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
path.replace(executable_name_pos, strlen("<executable_name>"), executable_name);
# 490 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} else
# 492 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 494 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
continue;
# 495 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 496 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 503 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
path.append(filename);
# 504 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
FILE *fp;
# 505 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
fp = fopen(path.c_str(), "rb");
# 507 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (fp != (__null))
# 508 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 509 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
fclose(fp);
# 512 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
char *file_path = (char *)malloc(path.length() + (1));
# 513 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
strcpy(file_path, path.c_str());
# 514 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return file_path;
# 515 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 517 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
if (fp)
# 518 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
{
# 519 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
fclose(fp);
# 520 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 521 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
} }
# 524 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
return 0;
# 525 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_string.h"
}
# 36 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
static const char *_cudaGetErrorEnum(cudaError_t error)
# 37 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 38 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
switch (error)
# 39 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 40 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaSuccess:
# 41 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaSuccess";
# 43 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMissingConfiguration:
# 44 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMissingConfiguration";
# 46 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMemoryAllocation:
# 47 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMemoryAllocation";
# 49 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInitializationError:
# 50 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInitializationError";
# 52 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchFailure:
# 53 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchFailure";
# 55 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorPriorLaunchFailure:
# 56 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorPriorLaunchFailure";
# 58 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchTimeout:
# 59 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchTimeout";
# 61 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchOutOfResources:
# 62 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchOutOfResources";
# 64 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidDeviceFunction:
# 65 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidDeviceFunction";
# 67 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidConfiguration:
# 68 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidConfiguration";
# 70 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidDevice:
# 71 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidDevice";
# 73 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidValue:
# 74 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidValue";
# 76 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidPitchValue:
# 77 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidPitchValue";
# 79 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidSymbol:
# 80 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidSymbol";
# 82 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMapBufferObjectFailed:
# 83 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMapBufferObjectFailed";
# 85 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorUnmapBufferObjectFailed:
# 86 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorUnmapBufferObjectFailed";
# 88 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidHostPointer:
# 89 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidHostPointer";
# 91 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidDevicePointer:
# 92 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidDevicePointer";
# 94 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidTexture:
# 95 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidTexture";
# 97 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidTextureBinding:
# 98 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidTextureBinding";
# 100 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidChannelDescriptor:
# 101 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidChannelDescriptor";
# 103 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidMemcpyDirection:
# 104 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidMemcpyDirection";
# 106 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorAddressOfConstant:
# 107 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorAddressOfConstant";
# 109 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorTextureFetchFailed:
# 110 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorTextureFetchFailed";
# 112 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorTextureNotBound:
# 113 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorTextureNotBound";
# 115 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorSynchronizationError:
# 116 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorSynchronizationError";
# 118 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidFilterSetting:
# 119 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidFilterSetting";
# 121 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidNormSetting:
# 122 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidNormSetting";
# 124 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMixedDeviceExecution:
# 125 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMixedDeviceExecution";
# 127 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorCudartUnloading:
# 128 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorCudartUnloading";
# 130 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorUnknown:
# 131 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorUnknown";
# 133 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNotYetImplemented:
# 134 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNotYetImplemented";
# 136 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMemoryValueTooLarge:
# 137 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMemoryValueTooLarge";
# 139 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidResourceHandle:
# 140 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidResourceHandle";
# 142 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNotReady:
# 143 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNotReady";
# 145 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInsufficientDriver:
# 146 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInsufficientDriver";
# 148 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorSetOnActiveProcess:
# 149 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorSetOnActiveProcess";
# 151 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidSurface:
# 152 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidSurface";
# 154 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNoDevice:
# 155 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNoDevice";
# 157 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorECCUncorrectable:
# 158 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorECCUncorrectable";
# 160 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorSharedObjectSymbolNotFound:
# 161 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorSharedObjectSymbolNotFound";
# 163 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorSharedObjectInitFailed:
# 164 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorSharedObjectInitFailed";
# 166 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorUnsupportedLimit:
# 167 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorUnsupportedLimit";
# 169 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorDuplicateVariableName:
# 170 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorDuplicateVariableName";
# 172 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorDuplicateTextureName:
# 173 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorDuplicateTextureName";
# 175 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorDuplicateSurfaceName:
# 176 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorDuplicateSurfaceName";
# 178 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorDevicesUnavailable:
# 179 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorDevicesUnavailable";
# 181 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidKernelImage:
# 182 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidKernelImage";
# 184 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNoKernelImageForDevice:
# 185 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNoKernelImageForDevice";
# 187 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorIncompatibleDriverContext:
# 188 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorIncompatibleDriverContext";
# 190 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorPeerAccessAlreadyEnabled:
# 191 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorPeerAccessAlreadyEnabled";
# 193 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorPeerAccessNotEnabled:
# 194 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorPeerAccessNotEnabled";
# 196 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorDeviceAlreadyInUse:
# 197 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorDeviceAlreadyInUse";
# 199 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorProfilerDisabled:
# 200 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorProfilerDisabled";
# 202 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorProfilerNotInitialized:
# 203 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorProfilerNotInitialized";
# 205 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorProfilerAlreadyStarted:
# 206 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorProfilerAlreadyStarted";
# 208 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorProfilerAlreadyStopped:
# 209 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorProfilerAlreadyStopped";
# 212 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorAssert:
# 213 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorAssert";
# 215 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorTooManyPeers:
# 216 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorTooManyPeers";
# 218 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorHostMemoryAlreadyRegistered:
# 219 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorHostMemoryAlreadyRegistered";
# 221 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorHostMemoryNotRegistered:
# 222 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorHostMemoryNotRegistered";
# 225 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorOperatingSystem:
# 226 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorOperatingSystem";
# 228 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorPeerAccessUnsupported:
# 229 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorPeerAccessUnsupported";
# 231 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchMaxDepthExceeded:
# 232 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchMaxDepthExceeded";
# 234 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchFileScopedTex:
# 235 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchFileScopedTex";
# 237 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchFileScopedSurf:
# 238 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchFileScopedSurf";
# 240 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorSyncDepthExceeded:
# 241 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorSyncDepthExceeded";
# 243 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorLaunchPendingCountExceeded:
# 244 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorLaunchPendingCountExceeded";
# 246 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNotPermitted:
# 247 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNotPermitted";
# 249 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNotSupported:
# 250 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNotSupported";
# 253 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorHardwareStackError:
# 254 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorHardwareStackError";
# 256 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorIllegalInstruction:
# 257 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorIllegalInstruction";
# 259 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorMisalignedAddress:
# 260 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorMisalignedAddress";
# 262 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidAddressSpace:
# 263 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidAddressSpace";
# 265 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidPc:
# 266 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidPc";
# 268 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorIllegalAddress:
# 269 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorIllegalAddress";
# 272 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidPtx:
# 273 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidPtx";
# 275 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorInvalidGraphicsContext:
# 276 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorInvalidGraphicsContext";
# 278 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorStartupFailure:
# 279 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorStartupFailure";
# 281 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorApiFailureBase:
# 282 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorApiFailureBase";
# 285 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case cudaErrorNvlinkUncorrectable:
# 286 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "cudaErrorNvlinkUncorrectable";
# 287 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 289 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "<unknown>";
# 290 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 295 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
static const char *_cudaGetErrorEnum(CUresult error)
# 296 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 297 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
switch (error)
# 298 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 299 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_SUCCESS:
# 300 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_SUCCESS";
# 302 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_VALUE:
# 303 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_VALUE";
# 305 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_OUT_OF_MEMORY:
# 306 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_OUT_OF_MEMORY";
# 308 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_INITIALIZED:
# 309 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_INITIALIZED";
# 311 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_DEINITIALIZED:
# 312 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_DEINITIALIZED";
# 314 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PROFILER_DISABLED:
# 315 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PROFILER_DISABLED";
# 317 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PROFILER_NOT_INITIALIZED:
# 318 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PROFILER_NOT_INITIALIZED";
# 320 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PROFILER_ALREADY_STARTED:
# 321 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PROFILER_ALREADY_STARTED";
# 323 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PROFILER_ALREADY_STOPPED:
# 324 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PROFILER_ALREADY_STOPPED";
# 326 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NO_DEVICE:
# 327 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NO_DEVICE";
# 329 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_DEVICE:
# 330 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_DEVICE";
# 332 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_IMAGE:
# 333 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_IMAGE";
# 335 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_CONTEXT:
# 336 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_CONTEXT";
# 338 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_CONTEXT_ALREADY_CURRENT:
# 339 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_CONTEXT_ALREADY_CURRENT";
# 341 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_MAP_FAILED:
# 342 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_MAP_FAILED";
# 344 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_UNMAP_FAILED:
# 345 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_UNMAP_FAILED";
# 347 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ARRAY_IS_MAPPED:
# 348 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ARRAY_IS_MAPPED";
# 350 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ALREADY_MAPPED:
# 351 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ALREADY_MAPPED";
# 353 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NO_BINARY_FOR_GPU:
# 354 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NO_BINARY_FOR_GPU";
# 356 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ALREADY_ACQUIRED:
# 357 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ALREADY_ACQUIRED";
# 359 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_MAPPED:
# 360 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_MAPPED";
# 362 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_MAPPED_AS_ARRAY:
# 363 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_MAPPED_AS_ARRAY";
# 365 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_MAPPED_AS_POINTER:
# 366 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_MAPPED_AS_POINTER";
# 368 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ECC_UNCORRECTABLE:
# 369 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ECC_UNCORRECTABLE";
# 371 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_UNSUPPORTED_LIMIT:
# 372 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_UNSUPPORTED_LIMIT";
# 374 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_CONTEXT_ALREADY_IN_USE:
# 375 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_CONTEXT_ALREADY_IN_USE";
# 377 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PEER_ACCESS_UNSUPPORTED:
# 378 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PEER_ACCESS_UNSUPPORTED";
# 380 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_PTX:
# 381 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_PTX";
# 383 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_GRAPHICS_CONTEXT:
# 384 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_GRAPHICS_CONTEXT";
# 386 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NVLINK_UNCORRECTABLE:
# 387 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NVLINK_UNCORRECTABLE";
# 389 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_SOURCE:
# 390 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_SOURCE";
# 392 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_FILE_NOT_FOUND:
# 393 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_FILE_NOT_FOUND";
# 395 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND:
# 396 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND";
# 398 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_SHARED_OBJECT_INIT_FAILED:
# 399 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_SHARED_OBJECT_INIT_FAILED";
# 401 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_OPERATING_SYSTEM:
# 402 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_OPERATING_SYSTEM";
# 404 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_HANDLE:
# 405 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_HANDLE";
# 407 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_FOUND:
# 408 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_FOUND";
# 410 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_READY:
# 411 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_READY";
# 413 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ILLEGAL_ADDRESS:
# 414 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ILLEGAL_ADDRESS";
# 416 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_LAUNCH_FAILED:
# 417 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_LAUNCH_FAILED";
# 419 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES:
# 420 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES";
# 422 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_LAUNCH_TIMEOUT:
# 423 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_LAUNCH_TIMEOUT";
# 425 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING:
# 426 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING";
# 428 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED:
# 429 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED";
# 431 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PEER_ACCESS_NOT_ENABLED:
# 432 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PEER_ACCESS_NOT_ENABLED";
# 434 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE:
# 435 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE";
# 437 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_CONTEXT_IS_DESTROYED:
# 438 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_CONTEXT_IS_DESTROYED";
# 440 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ASSERT:
# 441 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ASSERT";
# 443 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_TOO_MANY_PEERS:
# 444 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_TOO_MANY_PEERS";
# 446 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED:
# 447 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED";
# 449 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED:
# 450 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED";
# 452 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_HARDWARE_STACK_ERROR:
# 453 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_HARDWARE_STACK_ERROR";
# 455 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_ILLEGAL_INSTRUCTION:
# 456 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_ILLEGAL_INSTRUCTION";
# 458 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_MISALIGNED_ADDRESS:
# 459 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_MISALIGNED_ADDRESS";
# 461 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_ADDRESS_SPACE:
# 462 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_ADDRESS_SPACE";
# 464 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_INVALID_PC:
# 465 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_INVALID_PC";
# 467 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_PERMITTED:
# 468 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_PERMITTED";
# 470 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_NOT_SUPPORTED:
# 471 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_NOT_SUPPORTED";
# 473 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
case CUDA_ERROR_UNKNOWN:
# 474 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "CUDA_ERROR_UNKNOWN";
# 475 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 477 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return "<unknown>";
# 478 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 984 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
template< class T> void
# 985 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(T result, const char *const func, const char *const file, const int line)
# 986 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 987 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (result)
# 988 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 989 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "CUDA error at %s:%d code=%d(%s) \"%s\" \n", file, line, static_cast< unsigned>(result), _cudaGetErrorEnum(result), func);
# 991 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceReset();
# 993 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 994 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 995 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1004 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline void __getLastCudaError(const char *errorMessage, const char *file, const int line)
# 1005 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1006 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaError_t err = cudaGetLastError();
# 1008 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((cudaSuccess) != err)
# 1009 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1010 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "%s(%i) : getLastCudaError() CUDA error : %s : (%d) %s.\n", file, line, errorMessage, (int)err, cudaGetErrorString(err));
# 1012 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceReset();
# 1013 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1014 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1015 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1023 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline int ftoi(float value)
# 1024 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1025 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return (value >= (0)) ? (int)(value + (0.5)) : ((int)(value - (0.5)));
# 1026 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1029 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline int _ConvertSMVer2Cores(int major, int minor)
# 1030 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1036 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
typedef
# 1033 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
struct {
# 1034 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int SM;
# 1035 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int Cores;
# 1036 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} sSMtoCores;
# 1038 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
sSMtoCores nGpuArchCoresPerSM[] = {{32, 32}, {33, 48}, {48, 192}, {50, 192}, {53, 192}, {55, 192}, {80, 128}, {82, 128}, {83, 128}, {96, 64}, {97, 128}, {98, 128}, {(-1), (-1)}};
# 1055 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int index = 0;
# 1057 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
while ((((nGpuArchCoresPerSM)[index]).SM) != (-1))
# 1058 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1059 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((((nGpuArchCoresPerSM)[index]).SM) == ((major << 4) + minor))
# 1060 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1061 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return ((nGpuArchCoresPerSM)[index]).Cores;
# 1062 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1064 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
index++;
# 1065 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1068 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("MapSMtoCores for SM %d.%d is undefined.  Default to use %d Cores/SM\n", major, minor, ((nGpuArchCoresPerSM)[index - 1]).Cores);
# 1069 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return ((nGpuArchCoresPerSM)[index - 1]).Cores;
# 1070 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1075 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline int gpuDeviceInit(int devID)
# 1076 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1077 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int device_count;
# 1078 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDeviceCount(&device_count), "cudaGetDeviceCount(&device_count)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1078);
# 1080 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (device_count == 0)
# 1081 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1082 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "gpuDeviceInit() CUDA error: no devices supporting CUDA.\n");
# 1083 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1084 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1086 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (devID < 0)
# 1087 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1088 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
devID = 0;
# 1089 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1091 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (devID > (device_count - 1))
# 1092 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1093 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "\n");
# 1094 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, ">> %d CUDA capable GPU device(s) detected. <<\n", device_count);
# 1095 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, ">> gpuDeviceInit (-device=%d) is not a valid GPU device. <<\n", devID);
# 1096 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "\n");
# 1097 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return -devID;
# 1098 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1100 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 1101 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, devID), "cudaGetDeviceProperties(&deviceProp, devID)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1101);
# 1103 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((deviceProp.computeMode) == (cudaComputeModeProhibited))
# 1104 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1105 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "Error: device is running in <Compute Mode Prohibited>, no threads can use ::cudaSetDevice().\n");
# 1106 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return -1;
# 1107 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1109 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((deviceProp.major) < 1)
# 1110 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1111 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "gpuDeviceInit(): GPU device does not support CUDA.\n");
# 1112 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1113 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1115 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaSetDevice(devID), "cudaSetDevice(devID)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1115);
# 1116 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("gpuDeviceInit() CUDA Device [%d]: \"%s\n", devID, deviceProp.name);
# 1118 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return devID;
# 1119 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1122 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline int gpuGetMaxGflopsDeviceId()
# 1123 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1124 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int current_device = 0, sm_per_multiproc = 0;
# 1125 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int max_perf_device = 0;
# 1126 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int device_count = 0, best_SM_arch = 0;
# 1127 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int devices_prohibited = 0;
# 1129 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
unsigned long long max_compute_perf = (0);
# 1130 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 1131 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaGetDeviceCount(&device_count);
# 1133 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDeviceCount(&device_count), "cudaGetDeviceCount(&device_count)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1133);
# 1135 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (device_count == 0)
# 1136 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1137 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "gpuGetMaxGflopsDeviceId() CUDA error: no devices supporting CUDA.\n");
# 1138 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1139 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1142 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
while (current_device < device_count)
# 1143 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1144 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 1147 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((deviceProp.computeMode) != (cudaComputeModeProhibited))
# 1148 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1149 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (((deviceProp.major) > 0) && ((deviceProp.major) < 9999))
# 1150 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1151 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
best_SM_arch = ((best_SM_arch > (deviceProp.major)) ? best_SM_arch : (deviceProp.major));
# 1152 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1153 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1155 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1156 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
devices_prohibited++;
# 1157 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1159 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
current_device++;
# 1160 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1162 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (devices_prohibited == device_count)
# 1163 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1164 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
fprintf(stderr, "gpuGetMaxGflopsDeviceId() CUDA error: all devices have compute mode prohibited.\n");
# 1165 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1166 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1169 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
current_device = 0;
# 1171 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
while (current_device < device_count)
# 1172 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1173 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaGetDeviceProperties(&deviceProp, current_device);
# 1176 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((deviceProp.computeMode) != (cudaComputeModeProhibited))
# 1177 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1178 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (((deviceProp.major) == 9999) && ((deviceProp.minor) == 9999))
# 1179 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1180 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
sm_per_multiproc = 1;
# 1181 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1183 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1184 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
sm_per_multiproc = _ConvertSMVer2Cores(deviceProp.major, deviceProp.minor);
# 1185 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1187 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
unsigned long long compute_perf = (((unsigned long long)(deviceProp.multiProcessorCount)) * sm_per_multiproc) * (deviceProp.clockRate);
# 1189 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (compute_perf > max_compute_perf)
# 1190 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1192 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (best_SM_arch > 2)
# 1193 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1195 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if ((deviceProp.major) == best_SM_arch)
# 1196 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1197 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
max_compute_perf = compute_perf;
# 1198 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
max_perf_device = current_device;
# 1199 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1200 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1202 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1203 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
max_compute_perf = compute_perf;
# 1204 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
max_perf_device = current_device;
# 1205 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1206 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1207 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1209 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
++current_device;
# 1210 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1212 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return max_perf_device;
# 1213 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1217 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline int findCudaDevice(int argc, const char **argv)
# 1218 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1219 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 1220 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int devID = 0;
# 1223 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (checkCmdLineFlag(argc, argv, "device"))
# 1224 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1225 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
devID = getCmdLineArgumentInt(argc, argv, "device=");
# 1227 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (devID < 0)
# 1228 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1229 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("Invalid command line parameter\n ");
# 1230 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1231 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1233 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1234 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
devID = gpuDeviceInit(devID);
# 1236 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (devID < 0)
# 1237 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1238 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("exiting...\n");
# 1239 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
exit(1);
# 1240 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1241 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1242 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1244 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1246 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
devID = gpuGetMaxGflopsDeviceId();
# 1247 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaSetDevice(devID), "cudaSetDevice(devID)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1247);
# 1248 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, devID), "cudaGetDeviceProperties(&deviceProp, devID)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1248);
# 1249 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("GPU Device %d: \"%s\" with compute capability %d.%d\n\n", devID, deviceProp.name, deviceProp.major, deviceProp.minor);
# 1250 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1252 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return devID;
# 1253 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1256 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
inline bool checkCudaCapabilities(int major_version, int minor_version)
# 1257 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1258 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
cudaDeviceProp deviceProp;
# 1259 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
(deviceProp.major) = 0;
# 1260 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
(deviceProp.minor) = 0;
# 1261 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
int dev;
# 1263 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDevice(&dev), "cudaGetDevice(&dev)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1263);
# 1264 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
check(cudaGetDeviceProperties(&deviceProp, dev), "cudaGetDeviceProperties(&deviceProp, dev)", "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h", 1264);
# 1266 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
if (((deviceProp.major) > major_version) || (((deviceProp.major) == major_version) && ((deviceProp.minor) >= minor_version)))
# 1268 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1269 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("  Device %d: <%16s >, Compute SM %d.%d detected\n", dev, deviceProp.name, deviceProp.major, deviceProp.minor);
# 1270 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return true;
# 1271 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
} else
# 1273 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
{
# 1274 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
printf("  No GPU device was found that can support CUDA compute capability %d.%d.\n", major_version, minor_version);
# 1275 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
return false;
# 1276 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 1277 "/usr/local/NVIDIA_CUDA-8.0_Samples/common/inc/helper_cuda.h"
}
# 43 "/usr/include/c++/5/ratio" 3

# 43 "/usr/include/c++/5/ratio" 3
namespace std __attribute((__visibility__("default"))) {
# 55 "/usr/include/c++/5/ratio" 3
template< intmax_t _Pn>
# 56 "/usr/include/c++/5/ratio" 3
struct __static_sign : public integral_constant< long, (_Pn < (0)) ? -1 : 1> {
# 58 "/usr/include/c++/5/ratio" 3
};
# 60 "/usr/include/c++/5/ratio" 3
template< intmax_t _Pn>
# 61 "/usr/include/c++/5/ratio" 3
struct __static_abs : public integral_constant< long, _Pn * __static_sign< _Pn> ::value> {
# 63 "/usr/include/c++/5/ratio" 3
};
# 65 "/usr/include/c++/5/ratio" 3
template< intmax_t _Pn, intmax_t _Qn>
# 66 "/usr/include/c++/5/ratio" 3
struct __static_gcd : public __static_gcd< _Qn, _Pn % _Qn> {
# 68 "/usr/include/c++/5/ratio" 3
};
# 70 "/usr/include/c++/5/ratio" 3
template< intmax_t _Pn>
# 71 "/usr/include/c++/5/ratio" 3
struct __static_gcd< _Pn, 0> : public integral_constant< long, __static_abs< _Pn> ::value> {
# 73 "/usr/include/c++/5/ratio" 3
};
# 75 "/usr/include/c++/5/ratio" 3
template< intmax_t _Qn>
# 76 "/usr/include/c++/5/ratio" 3
struct __static_gcd< 0, _Qn> : public integral_constant< long, __static_abs< _Qn> ::value> {
# 78 "/usr/include/c++/5/ratio" 3
};
# 86 "/usr/include/c++/5/ratio" 3
template< intmax_t _Pn, intmax_t _Qn>
# 87 "/usr/include/c++/5/ratio" 3
struct __safe_multiply {
# 90 "/usr/include/c++/5/ratio" 3
private: static const uintmax_t __c = (((uintmax_t)1) << (sizeof(intmax_t) * (4)));
# 92 "/usr/include/c++/5/ratio" 3
static const uintmax_t __a0 = (__static_abs< _Pn> ::value % __c);
# 93 "/usr/include/c++/5/ratio" 3
static const uintmax_t __a1 = (__static_abs< _Pn> ::value / __c);
# 94 "/usr/include/c++/5/ratio" 3
static const uintmax_t __b0 = (__static_abs< _Qn> ::value % __c);
# 95 "/usr/include/c++/5/ratio" 3
static const uintmax_t __b1 = (__static_abs< _Qn> ::value / __c);
# 97 "/usr/include/c++/5/ratio" 3
static_assert(((__a1 == (0)) || (__b1 == (0))), "overflow in multiplication");
# 99 "/usr/include/c++/5/ratio" 3
static_assert((((__a0 * __b1) + (__b0 * __a1)) < (__c >> 1)), "overflow in multiplication");
# 101 "/usr/include/c++/5/ratio" 3
static_assert(((__b0 * __a0) <= (9223372036854775807L)), "overflow in multiplication");
# 103 "/usr/include/c++/5/ratio" 3
static_assert(((((__a0 * __b1) + (__b0 * __a1)) * __c) <= ((9223372036854775807L) - (__b0 * __a0))), "overflow in multiplication");
# 108 "/usr/include/c++/5/ratio" 3
public: static const intmax_t value = (_Pn * _Qn);
# 109 "/usr/include/c++/5/ratio" 3
};
# 113 "/usr/include/c++/5/ratio" 3
template< uintmax_t __hi1, uintmax_t __lo1, uintmax_t __hi2, uintmax_t __lo2>
# 114 "/usr/include/c++/5/ratio" 3
struct __big_less : public integral_constant< bool, (__hi1 < __hi2) || ((__hi1 == __hi2) && (__lo1 < __lo2))> {
# 117 "/usr/include/c++/5/ratio" 3
};
# 119 "/usr/include/c++/5/ratio" 3
template< uintmax_t __hi1, uintmax_t __lo1, uintmax_t __hi2, uintmax_t __lo2>
# 120 "/usr/include/c++/5/ratio" 3
struct __big_add {
# 122 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __lo = (__lo1 + __lo2);
# 123 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __hi = ((__hi1 + __hi2) + ((__lo1 + __lo2) < __lo1));
# 125 "/usr/include/c++/5/ratio" 3
};
# 128 "/usr/include/c++/5/ratio" 3
template< uintmax_t __hi1, uintmax_t __lo1, uintmax_t __hi2, uintmax_t __lo2>
# 129 "/usr/include/c++/5/ratio" 3
struct __big_sub {
# 131 "/usr/include/c++/5/ratio" 3
static_assert((!__big_less< __hi1, __lo1, __hi2, __lo2> ::value), "Internal library error");
# 133 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __lo = (__lo1 - __lo2);
# 134 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __hi = ((__hi1 - __hi2) - (__lo1 < __lo2));
# 136 "/usr/include/c++/5/ratio" 3
};
# 139 "/usr/include/c++/5/ratio" 3
template< uintmax_t __x, uintmax_t __y>
# 140 "/usr/include/c++/5/ratio" 3
struct __big_mul {
# 143 "/usr/include/c++/5/ratio" 3
private: static constexpr uintmax_t __c = (((uintmax_t)1) << (sizeof(intmax_t) * (4)));
# 144 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x0 = (__x % __c);
# 145 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x1 = (__x / __c);
# 146 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __y0 = (__y % __c);
# 147 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __y1 = (__y / __c);
# 148 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x0y0 = (__x0 * __y0);
# 149 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x0y1 = (__x0 * __y1);
# 150 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x1y0 = (__x1 * __y0);
# 151 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __x1y1 = (__x1 * __y1);
# 152 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __mix = (__x0y1 + __x1y0);
# 153 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __mix_lo = (__mix * __c);
# 154 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __mix_hi = ((__mix / __c) + ((__mix < __x0y1) ? __c : (0)));
# 156 "/usr/include/c++/5/ratio" 3
typedef __big_add< __mix_hi, __mix_lo, __x1y1, __x0y0> _Res;
# 158 "/usr/include/c++/5/ratio" 3
public: static constexpr uintmax_t __hi = (_Res::__hi);
# 159 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __lo = (_Res::__lo);
# 160 "/usr/include/c++/5/ratio" 3
};
# 164 "/usr/include/c++/5/ratio" 3
template< uintmax_t __n1, uintmax_t __n0, uintmax_t __d>
# 165 "/usr/include/c++/5/ratio" 3
struct __big_div_impl {
# 168 "/usr/include/c++/5/ratio" 3
static_assert((__d >= (((uintmax_t)1) << ((sizeof(intmax_t) * (8)) - (1)))), "Internal library error");
# 170 "/usr/include/c++/5/ratio" 3
static_assert((__n1 < __d), "Internal library error");
# 171 "/usr/include/c++/5/ratio" 3
private: static constexpr uintmax_t __c = (((uintmax_t)1) << (sizeof(intmax_t) * (4)));
# 172 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __d1 = (__d / __c);
# 173 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __d0 = (__d % __c);
# 175 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __q1x = (__n1 / __d1);
# 176 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r1x = (__n1 % __d1);
# 177 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __m = (__q1x * __d0);
# 178 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r1y = ((__r1x * __c) + (__n0 / __c));
# 179 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r1z = (__r1y + __d);
# 180 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r1 = (((__r1y < __m) ? ((__r1z >= __d) && (__r1z < __m)) ? __r1z + __d : __r1z : __r1y) - __m);
# 183 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __q1 = (__q1x - ((__r1y < __m) ? ((__r1z >= __d) && (__r1z < __m)) ? 2 : 1 : 0));
# 186 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __q0x = (__r1 / __d1);
# 187 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r0x = (__r1 % __d1);
# 188 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __n = (__q0x * __d0);
# 189 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r0y = ((__r0x * __c) + (__n0 % __c));
# 190 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r0z = (__r0y + __d);
# 191 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __r0 = (((__r0y < __n) ? ((__r0z >= __d) && (__r0z < __n)) ? __r0z + __d : __r0z : __r0y) - __n);
# 194 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __q0 = (__q0x - ((__r0y < __n) ? ((__r0z >= __d) && (__r0z < __n)) ? 2 : 1 : 0));
# 199 "/usr/include/c++/5/ratio" 3
public: static constexpr uintmax_t __quot = ((__q1 * __c) + __q0);
# 200 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __rem = __r0;
# 203 "/usr/include/c++/5/ratio" 3
private: typedef __big_mul< __quot, __d> _Prod;
# 204 "/usr/include/c++/5/ratio" 3
typedef __big_add< __big_mul< __quot, __d> ::__hi, __big_mul< __quot, __d> ::__lo, 0UL, __rem> _Sum;
# 205 "/usr/include/c++/5/ratio" 3
static_assert(((_Sum::__hi == __n1) && (_Sum::__lo == __n0)), "Internal library error");
# 207 "/usr/include/c++/5/ratio" 3
};
# 209 "/usr/include/c++/5/ratio" 3
template< uintmax_t __n1, uintmax_t __n0, uintmax_t __d>
# 210 "/usr/include/c++/5/ratio" 3
struct __big_div {
# 213 "/usr/include/c++/5/ratio" 3
static_assert((__d != (0)), "Internal library error");
# 214 "/usr/include/c++/5/ratio" 3
static_assert((sizeof(uintmax_t) == sizeof(unsigned long long)), "This library calls __builtin_clzll on uintmax_t, which is unsafe on your platform. Please complain to http://gcc.gnu.org/bugzill" "a/");
# 218 "/usr/include/c++/5/ratio" 3
private: static constexpr int __shift = __builtin_clzll(__d);
# 219 "/usr/include/c++/5/ratio" 3
static constexpr int __coshift_ = ((sizeof(uintmax_t) * (8)) - __shift);
# 220 "/usr/include/c++/5/ratio" 3
static constexpr int __coshift = ((__shift != 0) ? __coshift_ : 0);
# 221 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __c1 = (((uintmax_t)1) << __shift);
# 222 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __c2 = (((uintmax_t)1) << __coshift);
# 223 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __new_d = (__d * __c1);
# 224 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __new_n0 = (__n0 * __c1);
# 225 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __n1_shifted = ((__n1 % __d) * __c1);
# 226 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __n0_top = ((__shift != 0) ? __n0 / __c2 : (0));
# 227 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __new_n1 = (__n1_shifted + __n0_top);
# 228 "/usr/include/c++/5/ratio" 3
typedef __big_div_impl< __new_n1, __new_n0, __new_d> _Res;
# 231 "/usr/include/c++/5/ratio" 3
public: static constexpr uintmax_t __quot_hi = (__n1 / __d);
# 232 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __quot_lo = (_Res::__quot);
# 233 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __rem = (_Res::__rem / __c1);
# 236 "/usr/include/c++/5/ratio" 3
private: typedef __big_mul< __quot_lo, __d> _P0;
# 237 "/usr/include/c++/5/ratio" 3
typedef __big_mul< __quot_hi, __d> _P1;
# 238 "/usr/include/c++/5/ratio" 3
typedef __big_add< __big_mul< __quot_lo, __d> ::__hi, __big_mul< __quot_lo, __d> ::__lo, __big_mul< __quot_hi, __d> ::__lo, __rem> _Sum;
# 240 "/usr/include/c++/5/ratio" 3
static_assert((_P1::__hi == 0), "Internal library error");
# 241 "/usr/include/c++/5/ratio" 3
static_assert((_Sum::__hi >= _P0::__hi), "Internal library error");
# 243 "/usr/include/c++/5/ratio" 3
static_assert(((_Sum::__hi == __n1) && (_Sum::__lo == __n0)), "Internal library error");
# 245 "/usr/include/c++/5/ratio" 3
static_assert((__rem < __d), "Internal library error");
# 246 "/usr/include/c++/5/ratio" 3
};
# 262 "/usr/include/c++/5/ratio" 3
template< intmax_t _Num, intmax_t _Den = 1L>
# 263 "/usr/include/c++/5/ratio" 3
struct ratio {
# 265 "/usr/include/c++/5/ratio" 3
static_assert((_Den != (0)), "denominator cannot be zero");
# 266 "/usr/include/c++/5/ratio" 3
static_assert(((_Num >= (-9223372036854775807L)) && (_Den >= (-9223372036854775807L))), "out of range");
# 270 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t num = ((_Num * __static_sign< _Den> ::value) / __static_gcd< _Num, _Den> ::value);
# 273 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t den = (__static_abs< _Den> ::value / __static_gcd< _Num, _Den> ::value);
# 276 "/usr/include/c++/5/ratio" 3
typedef std::ratio< num, den> type;
# 277 "/usr/include/c++/5/ratio" 3
};
# 279 "/usr/include/c++/5/ratio" 3
template< intmax_t _Num, intmax_t _Den> constexpr intmax_t
# 280 "/usr/include/c++/5/ratio" 3
ratio< _Num, _Den> ::num;
# 282 "/usr/include/c++/5/ratio" 3
template< intmax_t _Num, intmax_t _Den> constexpr intmax_t
# 283 "/usr/include/c++/5/ratio" 3
ratio< _Num, _Den> ::den;
# 285 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 286 "/usr/include/c++/5/ratio" 3
struct __ratio_multiply {
# 289 "/usr/include/c++/5/ratio" 3
private: static const intmax_t __gcd1 = (__static_gcd< _R1::num, _R2::den> ::value);
# 291 "/usr/include/c++/5/ratio" 3
static const intmax_t __gcd2 = (__static_gcd< _R2::num, _R1::den> ::value);
# 299 "/usr/include/c++/5/ratio" 3
public: typedef ratio< __safe_multiply< _R1::num / __gcd1, _R2::num / __gcd2> ::value, __safe_multiply< _R1::den / __gcd2, _R2::den / __gcd1> ::value> type;
# 301 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t num = (type::num);
# 302 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t den = (type::den);
# 303 "/usr/include/c++/5/ratio" 3
};
# 305 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 306 "/usr/include/c++/5/ratio" 3
__ratio_multiply< _R1, _R2> ::num;
# 308 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 309 "/usr/include/c++/5/ratio" 3
__ratio_multiply< _R1, _R2> ::den;
# 312 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> using ratio_multiply = typename __ratio_multiply< _R1, _R2> ::type;
# 315 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 316 "/usr/include/c++/5/ratio" 3
struct __ratio_divide {
# 318 "/usr/include/c++/5/ratio" 3
static_assert((_R2::num != 0), "division by 0");
# 322 "/usr/include/c++/5/ratio" 3
typedef typename __ratio_multiply< _R1, ratio< _R2::den, _R2::num> > ::type type;
# 324 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t num = (type::num);
# 325 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t den = (type::den);
# 326 "/usr/include/c++/5/ratio" 3
};
# 328 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 329 "/usr/include/c++/5/ratio" 3
__ratio_divide< _R1, _R2> ::num;
# 331 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 332 "/usr/include/c++/5/ratio" 3
__ratio_divide< _R1, _R2> ::den;
# 335 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> using ratio_divide = typename __ratio_divide< _R1, _R2> ::type;
# 339 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 340 "/usr/include/c++/5/ratio" 3
struct ratio_equal : public integral_constant< bool, (_R1::num == _R2::num) && (_R1::den == _R2::den)> {
# 342 "/usr/include/c++/5/ratio" 3
};
# 345 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 346 "/usr/include/c++/5/ratio" 3
struct ratio_not_equal : public integral_constant< bool, !ratio_equal< _R1, _R2> ::value> {
# 348 "/usr/include/c++/5/ratio" 3
};
# 351 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2, class
# 352 "/usr/include/c++/5/ratio" 3
_Left = __big_mul< _R1::num, _R2::den> , class
# 353 "/usr/include/c++/5/ratio" 3
_Right = __big_mul< _R2::num, _R1::den> >
# 354 "/usr/include/c++/5/ratio" 3
struct __ratio_less_impl_1 : public integral_constant< bool, __big_less< _Left::__hi, _Left::__lo, _Right::__hi, _Right::__lo> ::value> {
# 357 "/usr/include/c++/5/ratio" 3
};
# 359 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2, bool
# 360 "/usr/include/c++/5/ratio" 3
 = ((_R1::num == 0) || (_R2::num == 0)) || (__static_sign< _R1::num> ::value != __static_sign< _R2::num> ::value), bool
# 363 "/usr/include/c++/5/ratio" 3
 = (__static_sign< _R1::num> ::value == (-1)) && (__static_sign< _R2::num> ::value == (-1))>
# 365 "/usr/include/c++/5/ratio" 3
struct __ratio_less_impl : public __ratio_less_impl_1< _R1, _R2> ::type {
# 367 "/usr/include/c++/5/ratio" 3
};
# 369 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 370 "/usr/include/c++/5/ratio" 3
struct __ratio_less_impl< _R1, _R2, true, false> : public integral_constant< bool, _R1::num < _R2::num> {
# 372 "/usr/include/c++/5/ratio" 3
};
# 374 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 375 "/usr/include/c++/5/ratio" 3
struct __ratio_less_impl< _R1, _R2, false, true> : public __ratio_less_impl_1< ratio< -_R2::num, _R2::den> , ratio< -_R1::num, _R1::den> > ::type {
# 378 "/usr/include/c++/5/ratio" 3
};
# 381 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 382 "/usr/include/c++/5/ratio" 3
struct ratio_less : public __ratio_less_impl< _R1, _R2> ::type {
# 384 "/usr/include/c++/5/ratio" 3
};
# 387 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 388 "/usr/include/c++/5/ratio" 3
struct ratio_less_equal : public integral_constant< bool, !ratio_less< _R2, _R1> ::value> {
# 390 "/usr/include/c++/5/ratio" 3
};
# 393 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 394 "/usr/include/c++/5/ratio" 3
struct ratio_greater : public integral_constant< bool, ratio_less< _R2, _R1> ::value> {
# 396 "/usr/include/c++/5/ratio" 3
};
# 399 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 400 "/usr/include/c++/5/ratio" 3
struct ratio_greater_equal : public integral_constant< bool, !ratio_less< _R1, _R2> ::value> {
# 402 "/usr/include/c++/5/ratio" 3
};
# 404 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2, bool
# 405 "/usr/include/c++/5/ratio" 3
 = _R1::num >= 0, bool
# 406 "/usr/include/c++/5/ratio" 3
 = _R2::num >= 0, bool
# 407 "/usr/include/c++/5/ratio" 3
 = ratio_less< ratio< __static_abs< _R1::num> ::value, _R1::den> , ratio< __static_abs< _R2::num> ::value, _R2::den> > ::value>
# 409 "/usr/include/c++/5/ratio" 3
struct __ratio_add_impl {
# 414 "/usr/include/c++/5/ratio" 3
private: typedef typename std::__ratio_add_impl< ratio< -_R1::num, _R1::den> , ratio< -_R2::num, _R2::den> > ::type __t;
# 416 "/usr/include/c++/5/ratio" 3
public: typedef ratio< -std::__ratio_add_impl< ratio< -_R1::num, _R1::den> , ratio< -_R2::num, _R2::den> > ::type::num, std::__ratio_add_impl< ratio< -_R1::num, _R1::den> , ratio< -_R2::num, _R2::den> > ::type::den> type;
# 417 "/usr/include/c++/5/ratio" 3
};
# 420 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2, bool __b>
# 421 "/usr/include/c++/5/ratio" 3
struct __ratio_add_impl< _R1, _R2, true, true, __b> {
# 424 "/usr/include/c++/5/ratio" 3
private: static constexpr uintmax_t __g = (__static_gcd< _R1::den, _R2::den> ::value);
# 425 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __d2 = (_R2::den / __g);
# 426 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::den, __d2> __d;
# 427 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::num, _R2::den / __g> __x;
# 428 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R2::num, _R1::den / __g> __y;
# 429 "/usr/include/c++/5/ratio" 3
typedef __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> __n;
# 430 "/usr/include/c++/5/ratio" 3
static_assert((__n::__hi >= __x::__hi), "Internal library error");
# 431 "/usr/include/c++/5/ratio" 3
typedef __big_div< __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__hi, __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__lo, __g> __ng;
# 432 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __g2 = (__static_gcd< __big_div< __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__hi, __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__lo, __g> ::__rem, __g> ::value);
# 433 "/usr/include/c++/5/ratio" 3
typedef __big_div< __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__hi, __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__lo, __g2> __n_final;
# 434 "/usr/include/c++/5/ratio" 3
static_assert((__n_final::__rem == 0), "Internal library error");
# 435 "/usr/include/c++/5/ratio" 3
static_assert(((__n_final::__quot_hi == 0) && (__n_final::__quot_lo <= 9223372036854775807L)), "overflow in addition");
# 437 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::den / __g2, __d2> __d_final;
# 438 "/usr/include/c++/5/ratio" 3
static_assert(((__d_final::__hi == 0) && (__d_final::__lo <= 9223372036854775807L)), "overflow in addition");
# 441 "/usr/include/c++/5/ratio" 3
public: typedef ratio< __big_div< __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__hi, __big_add< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< _R2::num, _R1::den / __g> ::__hi, __big_mul< _R2::num, _R1::den / __g> ::__lo> ::__lo, __g2> ::__quot_lo, __big_mul< _R1::den / __g2, __d2> ::__lo> type;
# 442 "/usr/include/c++/5/ratio" 3
};
# 444 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 445 "/usr/include/c++/5/ratio" 3
struct __ratio_add_impl< _R1, _R2, false, true, true> : public __ratio_add_impl< _R2, _R1> {
# 447 "/usr/include/c++/5/ratio" 3
};
# 450 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 451 "/usr/include/c++/5/ratio" 3
struct __ratio_add_impl< _R1, _R2, true, false, false> {
# 454 "/usr/include/c++/5/ratio" 3
private: static constexpr uintmax_t __g = (__static_gcd< _R1::den, _R2::den> ::value);
# 455 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __d2 = (_R2::den / __g);
# 456 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::den, __d2> __d;
# 457 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::num, _R2::den / __g> __x;
# 458 "/usr/include/c++/5/ratio" 3
typedef __big_mul< -_R2::num, _R1::den / __g> __y;
# 459 "/usr/include/c++/5/ratio" 3
typedef __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> __n;
# 460 "/usr/include/c++/5/ratio" 3
typedef __big_div< __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__hi, __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__lo, __g> __ng;
# 461 "/usr/include/c++/5/ratio" 3
static constexpr uintmax_t __g2 = (__static_gcd< __big_div< __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__hi, __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__lo, __g> ::__rem, __g> ::value);
# 462 "/usr/include/c++/5/ratio" 3
typedef __big_div< __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__hi, __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__lo, __g2> __n_final;
# 463 "/usr/include/c++/5/ratio" 3
static_assert((__n_final::__rem == 0), "Internal library error");
# 464 "/usr/include/c++/5/ratio" 3
static_assert(((__n_final::__quot_hi == 0) && (__n_final::__quot_lo <= 9223372036854775807L)), "overflow in addition");
# 466 "/usr/include/c++/5/ratio" 3
typedef __big_mul< _R1::den / __g2, __d2> __d_final;
# 467 "/usr/include/c++/5/ratio" 3
static_assert(((__d_final::__hi == 0) && (__d_final::__lo <= 9223372036854775807L)), "overflow in addition");
# 470 "/usr/include/c++/5/ratio" 3
public: typedef ratio< __big_div< __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__hi, __big_sub< __big_mul< _R1::num, _R2::den / __g> ::__hi, __big_mul< _R1::num, _R2::den / __g> ::__lo, __big_mul< -_R2::num, _R1::den / __g> ::__hi, __big_mul< -_R2::num, _R1::den / __g> ::__lo> ::__lo, __g2> ::__quot_lo, __big_mul< _R1::den / __g2, __d2> ::__lo> type;
# 471 "/usr/include/c++/5/ratio" 3
};
# 473 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 474 "/usr/include/c++/5/ratio" 3
struct __ratio_add {
# 476 "/usr/include/c++/5/ratio" 3
typedef typename __ratio_add_impl< _R1, _R2> ::type type;
# 477 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t num = (type::num);
# 478 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t den = (type::den);
# 479 "/usr/include/c++/5/ratio" 3
};
# 481 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 482 "/usr/include/c++/5/ratio" 3
__ratio_add< _R1, _R2> ::num;
# 484 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 485 "/usr/include/c++/5/ratio" 3
__ratio_add< _R1, _R2> ::den;
# 488 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> using ratio_add = typename __ratio_add< _R1, _R2> ::type;
# 491 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2>
# 492 "/usr/include/c++/5/ratio" 3
struct __ratio_subtract {
# 496 "/usr/include/c++/5/ratio" 3
typedef typename __ratio_add< _R1, ratio< -_R2::num, _R2::den> > ::type type;
# 498 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t num = (type::num);
# 499 "/usr/include/c++/5/ratio" 3
static constexpr intmax_t den = (type::den);
# 500 "/usr/include/c++/5/ratio" 3
};
# 502 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 503 "/usr/include/c++/5/ratio" 3
__ratio_subtract< _R1, _R2> ::num;
# 505 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> constexpr intmax_t
# 506 "/usr/include/c++/5/ratio" 3
__ratio_subtract< _R1, _R2> ::den;
# 509 "/usr/include/c++/5/ratio" 3
template< class _R1, class _R2> using ratio_subtract = typename __ratio_subtract< _R1, _R2> ::type;
# 513 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000000000000000000L> atto;
# 514 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000000000000000L> femto;
# 515 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000000000000L> pico;
# 516 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000000000L> nano;
# 517 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000000L> micro;
# 518 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 1000L> milli;
# 519 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 100L> centi;
# 520 "/usr/include/c++/5/ratio" 3
typedef ratio< 1L, 10L> deci;
# 521 "/usr/include/c++/5/ratio" 3
typedef ratio< 10L, 1L> deca;
# 522 "/usr/include/c++/5/ratio" 3
typedef ratio< 100L, 1L> hecto;
# 523 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000L, 1L> kilo;
# 524 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000000L, 1L> mega;
# 525 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000000000L, 1L> giga;
# 526 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000000000000L, 1L> tera;
# 527 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000000000000000L, 1L> peta;
# 528 "/usr/include/c++/5/ratio" 3
typedef ratio< 1000000000000000000L, 1L> exa;
# 532 "/usr/include/c++/5/ratio" 3
}
# 158 "/usr/include/c++/5/limits" 3
namespace std __attribute((__visibility__("default"))) {
# 167 "/usr/include/c++/5/limits" 3
enum float_round_style {
# 169 "/usr/include/c++/5/limits" 3
round_indeterminate = (-1),
# 170 "/usr/include/c++/5/limits" 3
round_toward_zero = 0,
# 171 "/usr/include/c++/5/limits" 3
round_to_nearest,
# 172 "/usr/include/c++/5/limits" 3
round_toward_infinity,
# 173 "/usr/include/c++/5/limits" 3
round_toward_neg_infinity
# 174 "/usr/include/c++/5/limits" 3
};
# 182 "/usr/include/c++/5/limits" 3
enum float_denorm_style {
# 185 "/usr/include/c++/5/limits" 3
denorm_indeterminate = (-1),
# 187 "/usr/include/c++/5/limits" 3
denorm_absent = 0,
# 189 "/usr/include/c++/5/limits" 3
denorm_present
# 190 "/usr/include/c++/5/limits" 3
};
# 202 "/usr/include/c++/5/limits" 3
struct __numeric_limits_base {
# 206 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = false;
# 211 "/usr/include/c++/5/limits" 3
static constexpr int digits = 0;
# 214 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = 0;
# 219 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 223 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 226 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = false;
# 231 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = false;
# 235 "/usr/include/c++/5/limits" 3
static constexpr int radix = 0;
# 239 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 243 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 248 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 252 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 255 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 259 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 263 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 266 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 270 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 274 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 279 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = false;
# 288 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 291 "/usr/include/c++/5/limits" 3
static constexpr bool traps = false;
# 294 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 299 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 301 "/usr/include/c++/5/limits" 3
};
# 314 "/usr/include/c++/5/limits" 3
template< class _Tp>
# 315 "/usr/include/c++/5/limits" 3
struct numeric_limits : public __numeric_limits_base {
# 320 "/usr/include/c++/5/limits" 3
static constexpr _Tp min() noexcept { return _Tp(); }
# 324 "/usr/include/c++/5/limits" 3
static constexpr _Tp max() noexcept { return _Tp(); }
# 330 "/usr/include/c++/5/limits" 3
static constexpr _Tp lowest() noexcept { return _Tp(); }
# 336 "/usr/include/c++/5/limits" 3
static constexpr _Tp epsilon() noexcept { return _Tp(); }
# 340 "/usr/include/c++/5/limits" 3
static constexpr _Tp round_error() noexcept { return _Tp(); }
# 344 "/usr/include/c++/5/limits" 3
static constexpr _Tp infinity() noexcept { return _Tp(); }
# 349 "/usr/include/c++/5/limits" 3
static constexpr _Tp quiet_NaN() noexcept { return _Tp(); }
# 354 "/usr/include/c++/5/limits" 3
static constexpr _Tp signaling_NaN() noexcept { return _Tp(); }
# 360 "/usr/include/c++/5/limits" 3
static constexpr _Tp denorm_min() noexcept { return _Tp(); }
# 361 "/usr/include/c++/5/limits" 3
};
# 364 "/usr/include/c++/5/limits" 3
template< class _Tp>
# 365 "/usr/include/c++/5/limits" 3
struct numeric_limits< const _Tp> : public numeric_limits< _Tp> {
# 366 "/usr/include/c++/5/limits" 3
};
# 368 "/usr/include/c++/5/limits" 3
template< class _Tp>
# 369 "/usr/include/c++/5/limits" 3
struct numeric_limits< volatile _Tp> : public numeric_limits< _Tp> {
# 370 "/usr/include/c++/5/limits" 3
};
# 372 "/usr/include/c++/5/limits" 3
template< class _Tp>
# 373 "/usr/include/c++/5/limits" 3
struct numeric_limits< const volatile _Tp> : public numeric_limits< _Tp> {
# 374 "/usr/include/c++/5/limits" 3
};
# 382 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< bool> {
# 384 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 387 "/usr/include/c++/5/limits" 3
static constexpr bool min() noexcept { return false; }
# 390 "/usr/include/c++/5/limits" 3
static constexpr bool max() noexcept { return true; }
# 394 "/usr/include/c++/5/limits" 3
static constexpr bool lowest() noexcept { return min(); }
# 396 "/usr/include/c++/5/limits" 3
static constexpr int digits = 1;
# 397 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = 0;
# 399 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 401 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 402 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 403 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 404 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 407 "/usr/include/c++/5/limits" 3
static constexpr bool epsilon() noexcept { return false; }
# 410 "/usr/include/c++/5/limits" 3
static constexpr bool round_error() noexcept { return false; }
# 412 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 413 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 414 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 415 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 417 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 418 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 419 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 420 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 422 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 425 "/usr/include/c++/5/limits" 3
static constexpr bool infinity() noexcept { return false; }
# 428 "/usr/include/c++/5/limits" 3
static constexpr bool quiet_NaN() noexcept { return false; }
# 431 "/usr/include/c++/5/limits" 3
static constexpr bool signaling_NaN() noexcept { return false; }
# 434 "/usr/include/c++/5/limits" 3
static constexpr bool denorm_min() noexcept { return false; }
# 436 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 437 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 438 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 443 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 444 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 445 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 447 "/usr/include/c++/5/limits" 3
};
# 451 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< char> {
# 453 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 456 "/usr/include/c++/5/limits" 3
static constexpr char min() noexcept { return (((char)(-1)) < 0) ? (-((((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)))) - 1 : ((char)0); }
# 459 "/usr/include/c++/5/limits" 3
static constexpr char max() noexcept { return (((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)); }
# 463 "/usr/include/c++/5/limits" 3
static constexpr char lowest() noexcept { return min(); }
# 466 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(char) * (8)) - (((char)(-1)) < 0));
# 467 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(char) * (8)) - (((char)(-1)) < 0)) * (643L)) / (2136));
# 469 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 471 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = (((char)(-1)) < 0);
# 472 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 473 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 474 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 477 "/usr/include/c++/5/limits" 3
static constexpr char epsilon() noexcept { return 0; }
# 480 "/usr/include/c++/5/limits" 3
static constexpr char round_error() noexcept { return 0; }
# 482 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 483 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 484 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 485 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 487 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 488 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 489 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 490 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 492 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 495 "/usr/include/c++/5/limits" 3
static constexpr char infinity() noexcept { return ((char)0); }
# 498 "/usr/include/c++/5/limits" 3
static constexpr char quiet_NaN() noexcept { return ((char)0); }
# 501 "/usr/include/c++/5/limits" 3
static constexpr char signaling_NaN() noexcept { return ((char)0); }
# 504 "/usr/include/c++/5/limits" 3
static constexpr char denorm_min() noexcept { return static_cast< char>(0); }
# 506 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 507 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 508 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = (!is_signed);
# 510 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 511 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 512 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 514 "/usr/include/c++/5/limits" 3
};
# 518 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< signed char> {
# 520 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 523 "/usr/include/c++/5/limits" 3
static constexpr signed char min() noexcept { return (-127) - 1; }
# 526 "/usr/include/c++/5/limits" 3
static constexpr signed char max() noexcept { return 127; }
# 530 "/usr/include/c++/5/limits" 3
static constexpr signed char lowest() noexcept { return min(); }
# 533 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0));
# 534 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0)) * (643L)) / (2136));
# 537 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 539 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 540 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 541 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 542 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 545 "/usr/include/c++/5/limits" 3
static constexpr signed char epsilon() noexcept { return 0; }
# 548 "/usr/include/c++/5/limits" 3
static constexpr signed char round_error() noexcept { return 0; }
# 550 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 551 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 552 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 553 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 555 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 556 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 557 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 558 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 560 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 563 "/usr/include/c++/5/limits" 3
static constexpr signed char infinity() noexcept { return static_cast< signed char>(0); }
# 566 "/usr/include/c++/5/limits" 3
static constexpr signed char quiet_NaN() noexcept { return static_cast< signed char>(0); }
# 569 "/usr/include/c++/5/limits" 3
static constexpr signed char signaling_NaN() noexcept
# 570 "/usr/include/c++/5/limits" 3
{ return static_cast< signed char>(0); }
# 573 "/usr/include/c++/5/limits" 3
static constexpr signed char denorm_min() noexcept
# 574 "/usr/include/c++/5/limits" 3
{ return static_cast< signed char>(0); }
# 576 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 577 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 578 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 580 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 581 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 582 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 584 "/usr/include/c++/5/limits" 3
};
# 588 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned char> {
# 590 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 593 "/usr/include/c++/5/limits" 3
static constexpr unsigned char min() noexcept { return 0; }
# 596 "/usr/include/c++/5/limits" 3
static constexpr unsigned char max() noexcept { return ((127) * 2U) + (1); }
# 600 "/usr/include/c++/5/limits" 3
static constexpr unsigned char lowest() noexcept { return min(); }
# 603 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0));
# 605 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0)) * (643L)) / (2136));
# 608 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 610 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 611 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 612 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 613 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 616 "/usr/include/c++/5/limits" 3
static constexpr unsigned char epsilon() noexcept { return 0; }
# 619 "/usr/include/c++/5/limits" 3
static constexpr unsigned char round_error() noexcept { return 0; }
# 621 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 622 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 623 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 624 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 626 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 627 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 628 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 629 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 631 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 634 "/usr/include/c++/5/limits" 3
static constexpr unsigned char infinity() noexcept
# 635 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 638 "/usr/include/c++/5/limits" 3
static constexpr unsigned char quiet_NaN() noexcept
# 639 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 642 "/usr/include/c++/5/limits" 3
static constexpr unsigned char signaling_NaN() noexcept
# 643 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 646 "/usr/include/c++/5/limits" 3
static constexpr unsigned char denorm_min() noexcept
# 647 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned char>(0); }
# 649 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 650 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 651 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = true;
# 653 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 654 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 655 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 657 "/usr/include/c++/5/limits" 3
};
# 661 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< wchar_t> {
# 663 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 666 "/usr/include/c++/5/limits" 3
static constexpr wchar_t min() noexcept { return (((wchar_t)(-1)) < 0) ? (-((((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)))) - 1 : ((wchar_t)0); }
# 669 "/usr/include/c++/5/limits" 3
static constexpr wchar_t max() noexcept { return (((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)); }
# 673 "/usr/include/c++/5/limits" 3
static constexpr wchar_t lowest() noexcept { return min(); }
# 676 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0));
# 677 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) * (643L)) / (2136));
# 680 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 682 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = (((wchar_t)(-1)) < 0);
# 683 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 684 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 685 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 688 "/usr/include/c++/5/limits" 3
static constexpr wchar_t epsilon() noexcept { return 0; }
# 691 "/usr/include/c++/5/limits" 3
static constexpr wchar_t round_error() noexcept { return 0; }
# 693 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 694 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 695 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 696 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 698 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 699 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 700 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 701 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 703 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 706 "/usr/include/c++/5/limits" 3
static constexpr wchar_t infinity() noexcept { return ((wchar_t)0); }
# 709 "/usr/include/c++/5/limits" 3
static constexpr wchar_t quiet_NaN() noexcept { return ((wchar_t)0); }
# 712 "/usr/include/c++/5/limits" 3
static constexpr wchar_t signaling_NaN() noexcept { return ((wchar_t)0); }
# 715 "/usr/include/c++/5/limits" 3
static constexpr wchar_t denorm_min() noexcept { return ((wchar_t)0); }
# 717 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 718 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 719 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = (!is_signed);
# 721 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 722 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 723 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 725 "/usr/include/c++/5/limits" 3
};
# 730 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< char16_t> {
# 732 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 735 "/usr/include/c++/5/limits" 3
static constexpr char16_t min() noexcept { return (((char16_t)(-1)) < 0) ? (-((((char16_t)(-1)) < 0) ? (((((char16_t)1) << (((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char16_t)0)))) - 1 : ((char16_t)0); }
# 738 "/usr/include/c++/5/limits" 3
static constexpr char16_t max() noexcept { return (((char16_t)(-1)) < 0) ? (((((char16_t)1) << (((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char16_t)0)); }
# 741 "/usr/include/c++/5/limits" 3
static constexpr char16_t lowest() noexcept { return min(); }
# 743 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0));
# 744 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) * (643L)) / (2136));
# 745 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 746 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = (((char16_t)(-1)) < 0);
# 747 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 748 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 749 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 752 "/usr/include/c++/5/limits" 3
static constexpr char16_t epsilon() noexcept { return 0; }
# 755 "/usr/include/c++/5/limits" 3
static constexpr char16_t round_error() noexcept { return 0; }
# 757 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 758 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 759 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 760 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 762 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 763 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 764 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 765 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 766 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 769 "/usr/include/c++/5/limits" 3
static constexpr char16_t infinity() noexcept { return ((char16_t)0); }
# 772 "/usr/include/c++/5/limits" 3
static constexpr char16_t quiet_NaN() noexcept { return ((char16_t)0); }
# 775 "/usr/include/c++/5/limits" 3
static constexpr char16_t signaling_NaN() noexcept { return ((char16_t)0); }
# 778 "/usr/include/c++/5/limits" 3
static constexpr char16_t denorm_min() noexcept { return ((char16_t)0); }
# 780 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 781 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 782 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = (!is_signed);
# 784 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 785 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 786 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 787 "/usr/include/c++/5/limits" 3
};
# 791 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< char32_t> {
# 793 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 796 "/usr/include/c++/5/limits" 3
static constexpr char32_t min() noexcept { return (((char32_t)(-1)) < (0)) ? (-((((char32_t)(-1)) < (0)) ? (((((char32_t)1) << (((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((char32_t)0)))) - (1) : ((char32_t)0); }
# 799 "/usr/include/c++/5/limits" 3
static constexpr char32_t max() noexcept { return (((char32_t)(-1)) < (0)) ? (((((char32_t)1) << (((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((char32_t)0)); }
# 802 "/usr/include/c++/5/limits" 3
static constexpr char32_t lowest() noexcept { return min(); }
# 804 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0)));
# 805 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) * (643L)) / (2136));
# 806 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 807 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = (((char32_t)(-1)) < (0));
# 808 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 809 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 810 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 813 "/usr/include/c++/5/limits" 3
static constexpr char32_t epsilon() noexcept { return 0; }
# 816 "/usr/include/c++/5/limits" 3
static constexpr char32_t round_error() noexcept { return 0; }
# 818 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 819 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 820 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 821 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 823 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 824 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 825 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 826 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 827 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 830 "/usr/include/c++/5/limits" 3
static constexpr char32_t infinity() noexcept { return ((char32_t)0); }
# 833 "/usr/include/c++/5/limits" 3
static constexpr char32_t quiet_NaN() noexcept { return ((char32_t)0); }
# 836 "/usr/include/c++/5/limits" 3
static constexpr char32_t signaling_NaN() noexcept { return ((char32_t)0); }
# 839 "/usr/include/c++/5/limits" 3
static constexpr char32_t denorm_min() noexcept { return ((char32_t)0); }
# 841 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 842 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 843 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = (!is_signed);
# 845 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 846 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 847 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 848 "/usr/include/c++/5/limits" 3
};
# 853 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< short> {
# 855 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 858 "/usr/include/c++/5/limits" 3
static constexpr short min() noexcept { return (-32767) - 1; }
# 861 "/usr/include/c++/5/limits" 3
static constexpr short max() noexcept { return 32767; }
# 865 "/usr/include/c++/5/limits" 3
static constexpr short lowest() noexcept { return min(); }
# 868 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(short) * (8)) - (((short)(-1)) < 0));
# 869 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(short) * (8)) - (((short)(-1)) < 0)) * (643L)) / (2136));
# 871 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 873 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 874 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 875 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 876 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 879 "/usr/include/c++/5/limits" 3
static constexpr short epsilon() noexcept { return 0; }
# 882 "/usr/include/c++/5/limits" 3
static constexpr short round_error() noexcept { return 0; }
# 884 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 885 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 886 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 887 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 889 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 890 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 891 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 892 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 894 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 897 "/usr/include/c++/5/limits" 3
static constexpr short infinity() noexcept { return ((short)0); }
# 900 "/usr/include/c++/5/limits" 3
static constexpr short quiet_NaN() noexcept { return ((short)0); }
# 903 "/usr/include/c++/5/limits" 3
static constexpr short signaling_NaN() noexcept { return ((short)0); }
# 906 "/usr/include/c++/5/limits" 3
static constexpr short denorm_min() noexcept { return ((short)0); }
# 908 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 909 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 910 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 912 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 913 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 914 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 916 "/usr/include/c++/5/limits" 3
};
# 920 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned short> {
# 922 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 925 "/usr/include/c++/5/limits" 3
static constexpr unsigned short min() noexcept { return 0; }
# 928 "/usr/include/c++/5/limits" 3
static constexpr unsigned short max() noexcept { return ((32767) * 2U) + (1); }
# 932 "/usr/include/c++/5/limits" 3
static constexpr unsigned short lowest() noexcept { return min(); }
# 935 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0));
# 937 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0)) * (643L)) / (2136));
# 940 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 942 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 943 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 944 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 945 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 948 "/usr/include/c++/5/limits" 3
static constexpr unsigned short epsilon() noexcept { return 0; }
# 951 "/usr/include/c++/5/limits" 3
static constexpr unsigned short round_error() noexcept { return 0; }
# 953 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 954 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 955 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 956 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 958 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 959 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 960 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 961 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 963 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 966 "/usr/include/c++/5/limits" 3
static constexpr unsigned short infinity() noexcept
# 967 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 970 "/usr/include/c++/5/limits" 3
static constexpr unsigned short quiet_NaN() noexcept
# 971 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 974 "/usr/include/c++/5/limits" 3
static constexpr unsigned short signaling_NaN() noexcept
# 975 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 978 "/usr/include/c++/5/limits" 3
static constexpr unsigned short denorm_min() noexcept
# 979 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned short>(0); }
# 981 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 982 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 983 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = true;
# 985 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 986 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 987 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 989 "/usr/include/c++/5/limits" 3
};
# 993 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< int> {
# 995 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 998 "/usr/include/c++/5/limits" 3
static constexpr int min() noexcept { return (-2147483647) - 1; }
# 1001 "/usr/include/c++/5/limits" 3
static constexpr int max() noexcept { return 2147483647; }
# 1005 "/usr/include/c++/5/limits" 3
static constexpr int lowest() noexcept { return min(); }
# 1008 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(int) * (8)) - (((int)(-1)) < 0));
# 1009 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(int) * (8)) - (((int)(-1)) < 0)) * (643L)) / (2136));
# 1011 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1013 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1014 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1015 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1016 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1019 "/usr/include/c++/5/limits" 3
static constexpr int epsilon() noexcept { return 0; }
# 1022 "/usr/include/c++/5/limits" 3
static constexpr int round_error() noexcept { return 0; }
# 1024 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1025 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1026 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1027 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1029 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1030 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1031 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1032 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1034 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1037 "/usr/include/c++/5/limits" 3
static constexpr int infinity() noexcept { return static_cast< int>(0); }
# 1040 "/usr/include/c++/5/limits" 3
static constexpr int quiet_NaN() noexcept { return static_cast< int>(0); }
# 1043 "/usr/include/c++/5/limits" 3
static constexpr int signaling_NaN() noexcept { return static_cast< int>(0); }
# 1046 "/usr/include/c++/5/limits" 3
static constexpr int denorm_min() noexcept { return static_cast< int>(0); }
# 1048 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1049 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1050 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1052 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1053 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1054 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1056 "/usr/include/c++/5/limits" 3
};
# 1060 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned> {
# 1062 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1065 "/usr/include/c++/5/limits" 3
static constexpr unsigned min() noexcept { return 0; }
# 1068 "/usr/include/c++/5/limits" 3
static constexpr unsigned max() noexcept { return ((2147483647) * 2U) + (1); }
# 1072 "/usr/include/c++/5/limits" 3
static constexpr unsigned lowest() noexcept { return min(); }
# 1075 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0)));
# 1077 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0))) * (643L)) / (2136));
# 1080 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1082 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 1083 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1084 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1085 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1088 "/usr/include/c++/5/limits" 3
static constexpr unsigned epsilon() noexcept { return 0; }
# 1091 "/usr/include/c++/5/limits" 3
static constexpr unsigned round_error() noexcept { return 0; }
# 1093 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1094 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1095 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1096 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1098 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1099 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1100 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1101 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1103 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1106 "/usr/include/c++/5/limits" 3
static constexpr unsigned infinity() noexcept { return static_cast< unsigned>(0); }
# 1109 "/usr/include/c++/5/limits" 3
static constexpr unsigned quiet_NaN() noexcept
# 1110 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1113 "/usr/include/c++/5/limits" 3
static constexpr unsigned signaling_NaN() noexcept
# 1114 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1117 "/usr/include/c++/5/limits" 3
static constexpr unsigned denorm_min() noexcept
# 1118 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned>(0); }
# 1120 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1121 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1122 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = true;
# 1124 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1125 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1126 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1128 "/usr/include/c++/5/limits" 3
};
# 1132 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long> {
# 1134 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1137 "/usr/include/c++/5/limits" 3
static constexpr long min() noexcept { return (-9223372036854775807L) - (1); }
# 1140 "/usr/include/c++/5/limits" 3
static constexpr long max() noexcept { return 9223372036854775807L; }
# 1144 "/usr/include/c++/5/limits" 3
static constexpr long lowest() noexcept { return min(); }
# 1147 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(long) * (8)) - (((long)(-1)) < (0)));
# 1148 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(long) * (8)) - (((long)(-1)) < (0))) * (643L)) / (2136));
# 1150 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1152 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1153 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1154 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1155 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1158 "/usr/include/c++/5/limits" 3
static constexpr long epsilon() noexcept { return 0; }
# 1161 "/usr/include/c++/5/limits" 3
static constexpr long round_error() noexcept { return 0; }
# 1163 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1164 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1165 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1166 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1168 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1169 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1170 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1171 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1173 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1176 "/usr/include/c++/5/limits" 3
static constexpr long infinity() noexcept { return static_cast< long>(0); }
# 1179 "/usr/include/c++/5/limits" 3
static constexpr long quiet_NaN() noexcept { return static_cast< long>(0); }
# 1182 "/usr/include/c++/5/limits" 3
static constexpr long signaling_NaN() noexcept { return static_cast< long>(0); }
# 1185 "/usr/include/c++/5/limits" 3
static constexpr long denorm_min() noexcept { return static_cast< long>(0); }
# 1187 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1188 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1189 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1191 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1192 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1193 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1195 "/usr/include/c++/5/limits" 3
};
# 1199 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned long> {
# 1201 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1204 "/usr/include/c++/5/limits" 3
static constexpr unsigned long min() noexcept { return 0; }
# 1207 "/usr/include/c++/5/limits" 3
static constexpr unsigned long max() noexcept { return ((9223372036854775807L) * 2UL) + (1); }
# 1211 "/usr/include/c++/5/limits" 3
static constexpr unsigned long lowest() noexcept { return min(); }
# 1214 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0)));
# 1216 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0))) * (643L)) / (2136));
# 1219 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1221 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 1222 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1223 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1224 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1227 "/usr/include/c++/5/limits" 3
static constexpr unsigned long epsilon() noexcept { return 0; }
# 1230 "/usr/include/c++/5/limits" 3
static constexpr unsigned long round_error() noexcept { return 0; }
# 1232 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1233 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1234 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1235 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1237 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1238 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1239 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1240 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1242 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1245 "/usr/include/c++/5/limits" 3
static constexpr unsigned long infinity() noexcept
# 1246 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1249 "/usr/include/c++/5/limits" 3
static constexpr unsigned long quiet_NaN() noexcept
# 1250 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1253 "/usr/include/c++/5/limits" 3
static constexpr unsigned long signaling_NaN() noexcept
# 1254 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1257 "/usr/include/c++/5/limits" 3
static constexpr unsigned long denorm_min() noexcept
# 1258 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long>(0); }
# 1260 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1261 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1262 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = true;
# 1264 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1265 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1266 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1268 "/usr/include/c++/5/limits" 3
};
# 1272 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long long> {
# 1274 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1277 "/usr/include/c++/5/limits" 3
static constexpr long long min() noexcept { return (-9223372036854775807LL) - (1); }
# 1280 "/usr/include/c++/5/limits" 3
static constexpr long long max() noexcept { return 9223372036854775807LL; }
# 1284 "/usr/include/c++/5/limits" 3
static constexpr long long lowest() noexcept { return min(); }
# 1287 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(long long) * (8)) - (((long long)(-1)) < (0)));
# 1289 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(long long) * (8)) - (((long long)(-1)) < (0))) * (643L)) / (2136));
# 1292 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1294 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1295 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1296 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1297 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1300 "/usr/include/c++/5/limits" 3
static constexpr long long epsilon() noexcept { return 0; }
# 1303 "/usr/include/c++/5/limits" 3
static constexpr long long round_error() noexcept { return 0; }
# 1305 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1306 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1307 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1308 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1310 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1311 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1312 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1313 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1315 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1318 "/usr/include/c++/5/limits" 3
static constexpr long long infinity() noexcept { return static_cast< long long>(0); }
# 1321 "/usr/include/c++/5/limits" 3
static constexpr long long quiet_NaN() noexcept { return static_cast< long long>(0); }
# 1324 "/usr/include/c++/5/limits" 3
static constexpr long long signaling_NaN() noexcept
# 1325 "/usr/include/c++/5/limits" 3
{ return static_cast< long long>(0); }
# 1328 "/usr/include/c++/5/limits" 3
static constexpr long long denorm_min() noexcept { return static_cast< long long>(0); }
# 1330 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1331 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1332 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1334 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1335 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1336 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1338 "/usr/include/c++/5/limits" 3
};
# 1342 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< unsigned long long> {
# 1344 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1347 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long min() noexcept { return 0; }
# 1350 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long max() noexcept { return ((9223372036854775807LL) * 2ULL) + (1); }
# 1354 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long lowest() noexcept { return min(); }
# 1357 "/usr/include/c++/5/limits" 3
static constexpr int digits = ((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0)));
# 1359 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = ((((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0))) * (643L)) / (2136));
# 1362 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = 0;
# 1364 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = false;
# 1365 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = true;
# 1366 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = true;
# 1367 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1370 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long epsilon() noexcept { return 0; }
# 1373 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long round_error() noexcept { return 0; }
# 1375 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = 0;
# 1376 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = 0;
# 1377 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 0;
# 1378 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 0;
# 1380 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = false;
# 1381 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = false;
# 1382 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = false;
# 1383 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = denorm_absent;
# 1385 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1388 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long infinity() noexcept
# 1389 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1392 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long quiet_NaN() noexcept
# 1393 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1396 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long signaling_NaN() noexcept
# 1397 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1400 "/usr/include/c++/5/limits" 3
static constexpr unsigned long long denorm_min() noexcept
# 1401 "/usr/include/c++/5/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1403 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = false;
# 1404 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1405 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = true;
# 1407 "/usr/include/c++/5/limits" 3
static constexpr bool traps = true;
# 1408 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1409 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_toward_zero;
# 1411 "/usr/include/c++/5/limits" 3
};
# 1593 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< float> {
# 1595 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1598 "/usr/include/c++/5/limits" 3
static constexpr float min() noexcept { return (1.175494351e-38F); }
# 1601 "/usr/include/c++/5/limits" 3
static constexpr float max() noexcept { return (3.402823466e+38F); }
# 1605 "/usr/include/c++/5/limits" 3
static constexpr float lowest() noexcept { return -(3.402823466e+38F); }
# 1608 "/usr/include/c++/5/limits" 3
static constexpr int digits = 24;
# 1609 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = 6;
# 1611 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = ((2) + (((24) * 643L) / (2136)));
# 1614 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1615 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = false;
# 1616 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = false;
# 1617 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1620 "/usr/include/c++/5/limits" 3
static constexpr float epsilon() noexcept { return (1.192092896e-07F); }
# 1623 "/usr/include/c++/5/limits" 3
static constexpr float round_error() noexcept { return (0.5F); }
# 1625 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = (-125);
# 1626 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = (-37);
# 1627 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 128;
# 1628 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 38;
# 1630 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = (1);
# 1631 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = (1);
# 1632 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = has_quiet_NaN;
# 1633 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1635 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1639 "/usr/include/c++/5/limits" 3
static constexpr float infinity() noexcept { return __builtin_huge_valf(); }
# 1642 "/usr/include/c++/5/limits" 3
static constexpr float quiet_NaN() noexcept { return __builtin_nanf(""); }
# 1645 "/usr/include/c++/5/limits" 3
static constexpr float signaling_NaN() noexcept { return __builtin_nansf(""); }
# 1648 "/usr/include/c++/5/limits" 3
static constexpr float denorm_min() noexcept { return (1.401298464e-45F); }
# 1650 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1652 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1653 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1655 "/usr/include/c++/5/limits" 3
static constexpr bool traps = false;
# 1656 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1658 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_to_nearest;
# 1660 "/usr/include/c++/5/limits" 3
};
# 1668 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< double> {
# 1670 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1673 "/usr/include/c++/5/limits" 3
static constexpr double min() noexcept { return (double)(2.225073858507201383e-308L); }
# 1676 "/usr/include/c++/5/limits" 3
static constexpr double max() noexcept { return (double)(1.797693134862315708e+308L); }
# 1680 "/usr/include/c++/5/limits" 3
static constexpr double lowest() noexcept { return -((double)(1.797693134862315708e+308L)); }
# 1683 "/usr/include/c++/5/limits" 3
static constexpr int digits = 53;
# 1684 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = 15;
# 1686 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = ((2) + (((53) * 643L) / (2136)));
# 1689 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1690 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = false;
# 1691 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = false;
# 1692 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1695 "/usr/include/c++/5/limits" 3
static constexpr double epsilon() noexcept { return (double)(2.220446049250313081e-16L); }
# 1698 "/usr/include/c++/5/limits" 3
static constexpr double round_error() noexcept { return (0.5); }
# 1700 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = (-1021);
# 1701 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = (-307);
# 1702 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 1024;
# 1703 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 308;
# 1705 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = (1);
# 1706 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = (1);
# 1707 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = has_quiet_NaN;
# 1708 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1710 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1714 "/usr/include/c++/5/limits" 3
static constexpr double infinity() noexcept { return __builtin_huge_val(); }
# 1717 "/usr/include/c++/5/limits" 3
static constexpr double quiet_NaN() noexcept { return __builtin_nan(""); }
# 1720 "/usr/include/c++/5/limits" 3
static constexpr double signaling_NaN() noexcept { return __builtin_nans(""); }
# 1723 "/usr/include/c++/5/limits" 3
static constexpr double denorm_min() noexcept { return (double)(4.940656458412465442e-324L); }
# 1725 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1727 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1728 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1730 "/usr/include/c++/5/limits" 3
static constexpr bool traps = false;
# 1731 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1733 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_to_nearest;
# 1735 "/usr/include/c++/5/limits" 3
};
# 1743 "/usr/include/c++/5/limits" 3
template<> struct numeric_limits< long double> {
# 1745 "/usr/include/c++/5/limits" 3
static constexpr bool is_specialized = true;
# 1748 "/usr/include/c++/5/limits" 3
static constexpr long double min() noexcept { return (0.0L); }
# 1751 "/usr/include/c++/5/limits" 3
static constexpr long double max() noexcept { return ((__builtin_huge_vall())); }
# 1755 "/usr/include/c++/5/limits" 3
static constexpr long double lowest() noexcept { return -((__builtin_huge_vall())); }
# 1758 "/usr/include/c++/5/limits" 3
static constexpr int digits = 64;
# 1759 "/usr/include/c++/5/limits" 3
static constexpr int digits10 = 18;
# 1761 "/usr/include/c++/5/limits" 3
static constexpr int max_digits10 = ((2) + (((64) * 643L) / (2136)));
# 1764 "/usr/include/c++/5/limits" 3
static constexpr bool is_signed = true;
# 1765 "/usr/include/c++/5/limits" 3
static constexpr bool is_integer = false;
# 1766 "/usr/include/c++/5/limits" 3
static constexpr bool is_exact = false;
# 1767 "/usr/include/c++/5/limits" 3
static constexpr int radix = 2;
# 1770 "/usr/include/c++/5/limits" 3
static constexpr long double epsilon() noexcept { return (1.084202172485504434e-19L); }
# 1773 "/usr/include/c++/5/limits" 3
static constexpr long double round_error() noexcept { return (0.5L); }
# 1775 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent = (-16381);
# 1776 "/usr/include/c++/5/limits" 3
static constexpr int min_exponent10 = (-4931);
# 1777 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent = 16384;
# 1778 "/usr/include/c++/5/limits" 3
static constexpr int max_exponent10 = 4932;
# 1780 "/usr/include/c++/5/limits" 3
static constexpr bool has_infinity = (1);
# 1781 "/usr/include/c++/5/limits" 3
static constexpr bool has_quiet_NaN = (1);
# 1782 "/usr/include/c++/5/limits" 3
static constexpr bool has_signaling_NaN = has_quiet_NaN;
# 1783 "/usr/include/c++/5/limits" 3
static constexpr float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1785 "/usr/include/c++/5/limits" 3
static constexpr bool has_denorm_loss = false;
# 1789 "/usr/include/c++/5/limits" 3
static constexpr long double infinity() noexcept { return __builtin_huge_vall(); }
# 1792 "/usr/include/c++/5/limits" 3
static constexpr long double quiet_NaN() noexcept { return __builtin_nanl(""); }
# 1795 "/usr/include/c++/5/limits" 3
static constexpr long double signaling_NaN() noexcept { return __builtin_nansl(""); }
# 1798 "/usr/include/c++/5/limits" 3
static constexpr long double denorm_min() noexcept { return (0.0L); }
# 1800 "/usr/include/c++/5/limits" 3
static constexpr bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1802 "/usr/include/c++/5/limits" 3
static constexpr bool is_bounded = true;
# 1803 "/usr/include/c++/5/limits" 3
static constexpr bool is_modulo = false;
# 1805 "/usr/include/c++/5/limits" 3
static constexpr bool traps = false;
# 1806 "/usr/include/c++/5/limits" 3
static constexpr bool tinyness_before = false;
# 1808 "/usr/include/c++/5/limits" 3
static constexpr float_round_style round_style = round_to_nearest;
# 1810 "/usr/include/c++/5/limits" 3
};
# 1817 "/usr/include/c++/5/limits" 3
}
# 58 "/usr/include/c++/5/ctime" 3
namespace std {
# 60 "/usr/include/c++/5/ctime" 3
using ::clock_t;
# 61 "/usr/include/c++/5/ctime" 3
using ::time_t;
# 62 "/usr/include/c++/5/ctime" 3
using ::tm;
# 64 "/usr/include/c++/5/ctime" 3
using ::clock;
# 65 "/usr/include/c++/5/ctime" 3
using ::difftime;
# 66 "/usr/include/c++/5/ctime" 3
using ::mktime;
# 67 "/usr/include/c++/5/ctime" 3
using ::time;
# 68 "/usr/include/c++/5/ctime" 3
using ::asctime;
# 69 "/usr/include/c++/5/ctime" 3
using ::ctime;
# 70 "/usr/include/c++/5/ctime" 3
using ::gmtime;
# 71 "/usr/include/c++/5/ctime" 3
using ::localtime;
# 72 "/usr/include/c++/5/ctime" 3
using ::strftime;
# 73 "/usr/include/c++/5/ctime" 3
}
# 46 "/usr/include/c++/5/chrono" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/5/chrono" 3
namespace chrono {
# 63 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period = ratio< 1> > struct duration;
# 66 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur = typename _Clock::duration> struct time_point;
# 70 "/usr/include/c++/5/chrono" 3
}
# 76 "/usr/include/c++/5/chrono" 3
template< class _CT, class _Period1, class _Period2>
# 77 "/usr/include/c++/5/chrono" 3
struct __duration_common_type_wrapper {
# 80 "/usr/include/c++/5/chrono" 3
private: typedef __static_gcd< _Period1::num, _Period2::num> __gcd_num;
# 81 "/usr/include/c++/5/chrono" 3
typedef __static_gcd< _Period1::den, _Period2::den> __gcd_den;
# 82 "/usr/include/c++/5/chrono" 3
typedef typename _CT::type __cr;
# 84 "/usr/include/c++/5/chrono" 3
typedef ratio< __static_gcd< _Period1::num, _Period2::num> ::value, (_Period1::den / __static_gcd< _Period1::den, _Period2::den> ::value) * _Period2::den> __r;
# 86 "/usr/include/c++/5/chrono" 3
public: typedef __success_type< chrono::duration< typename _CT::type, ratio< __static_gcd< _Period1::num, _Period2::num> ::value, (_Period1::den / __static_gcd< _Period1::den, _Period2::den> ::value) * _Period2::den> > > type;
# 87 "/usr/include/c++/5/chrono" 3
};
# 89 "/usr/include/c++/5/chrono" 3
template< class _Period1, class _Period2>
# 90 "/usr/include/c++/5/chrono" 3
struct __duration_common_type_wrapper< __failure_type, _Period1, _Period2> {
# 91 "/usr/include/c++/5/chrono" 3
typedef __failure_type type; };
# 93 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class _Rep2, class _Period2>
# 94 "/usr/include/c++/5/chrono" 3
struct common_type< chrono::duration< _Rep1, _Period1> , chrono::duration< _Rep2, _Period2> > : public __duration_common_type_wrapper< typename __member_type_wrapper< common_type< _Rep1, _Rep2> > ::type, _Period1, _Period2> ::type {
# 98 "/usr/include/c++/5/chrono" 3
};
# 102 "/usr/include/c++/5/chrono" 3
template< class _CT, class _Clock>
# 103 "/usr/include/c++/5/chrono" 3
struct __timepoint_common_type_wrapper {
# 106 "/usr/include/c++/5/chrono" 3
typedef __success_type< chrono::time_point< _Clock, typename _CT::type> > type;
# 107 "/usr/include/c++/5/chrono" 3
};
# 109 "/usr/include/c++/5/chrono" 3
template< class _Clock>
# 110 "/usr/include/c++/5/chrono" 3
struct __timepoint_common_type_wrapper< __failure_type, _Clock> {
# 111 "/usr/include/c++/5/chrono" 3
typedef __failure_type type; };
# 113 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Duration1, class _Duration2>
# 114 "/usr/include/c++/5/chrono" 3
struct common_type< chrono::time_point< _Clock, _Duration1> , chrono::time_point< _Clock, _Duration2> > : public __timepoint_common_type_wrapper< typename __member_type_wrapper< common_type< _Duration1, _Duration2> > ::type, _Clock> ::type {
# 118 "/usr/include/c++/5/chrono" 3
};
# 122 "/usr/include/c++/5/chrono" 3
namespace chrono {
# 127 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _CF, class _CR, bool
# 128 "/usr/include/c++/5/chrono" 3
_NumIsOne = false, bool _DenIsOne = false>
# 129 "/usr/include/c++/5/chrono" 3
struct __duration_cast_impl {
# 131 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period> static constexpr _ToDur
# 133 "/usr/include/c++/5/chrono" 3
__cast(const duration< _Rep, _Period> &__d)
# 134 "/usr/include/c++/5/chrono" 3
{
# 135 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::rep __to_rep;
# 136 "/usr/include/c++/5/chrono" 3
return (_ToDur)(static_cast< __to_rep>(((static_cast< _CR>((__d.count()))) * (static_cast< _CR>(_CF::num))) / (static_cast< _CR>(_CF::den))));
# 139 "/usr/include/c++/5/chrono" 3
}
# 140 "/usr/include/c++/5/chrono" 3
};
# 142 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _CF, class _CR>
# 143 "/usr/include/c++/5/chrono" 3
struct __duration_cast_impl< _ToDur, _CF, _CR, true, true> {
# 145 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period> static constexpr _ToDur
# 147 "/usr/include/c++/5/chrono" 3
__cast(const duration< _Rep, _Period> &__d)
# 148 "/usr/include/c++/5/chrono" 3
{
# 149 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::rep __to_rep;
# 150 "/usr/include/c++/5/chrono" 3
return (_ToDur)(static_cast< __to_rep>((__d.count())));
# 151 "/usr/include/c++/5/chrono" 3
}
# 152 "/usr/include/c++/5/chrono" 3
};
# 154 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _CF, class _CR>
# 155 "/usr/include/c++/5/chrono" 3
struct __duration_cast_impl< _ToDur, _CF, _CR, true, false> {
# 157 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period> static constexpr _ToDur
# 159 "/usr/include/c++/5/chrono" 3
__cast(const duration< _Rep, _Period> &__d)
# 160 "/usr/include/c++/5/chrono" 3
{
# 161 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::rep __to_rep;
# 162 "/usr/include/c++/5/chrono" 3
return (_ToDur)(static_cast< __to_rep>((static_cast< _CR>((__d.count()))) / (static_cast< _CR>(_CF::den))));
# 164 "/usr/include/c++/5/chrono" 3
}
# 165 "/usr/include/c++/5/chrono" 3
};
# 167 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _CF, class _CR>
# 168 "/usr/include/c++/5/chrono" 3
struct __duration_cast_impl< _ToDur, _CF, _CR, false, true> {
# 170 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period> static constexpr _ToDur
# 172 "/usr/include/c++/5/chrono" 3
__cast(const duration< _Rep, _Period> &__d)
# 173 "/usr/include/c++/5/chrono" 3
{
# 174 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::rep __to_rep;
# 175 "/usr/include/c++/5/chrono" 3
return (_ToDur)(static_cast< __to_rep>((static_cast< _CR>((__d.count()))) * (static_cast< _CR>(_CF::num))));
# 177 "/usr/include/c++/5/chrono" 3
}
# 178 "/usr/include/c++/5/chrono" 3
};
# 180 "/usr/include/c++/5/chrono" 3
template< class _Tp>
# 181 "/usr/include/c++/5/chrono" 3
struct __is_duration : public false_type {
# 183 "/usr/include/c++/5/chrono" 3
};
# 185 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period>
# 186 "/usr/include/c++/5/chrono" 3
struct __is_duration< duration< _Rep, _Period> > : public true_type {
# 188 "/usr/include/c++/5/chrono" 3
};
# 191 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _Rep, class _Period> constexpr typename enable_if< __is_duration< _ToDur> ::value, _ToDur> ::type
# 194 "/usr/include/c++/5/chrono" 3
duration_cast(const duration< _Rep, _Period> &__d)
# 195 "/usr/include/c++/5/chrono" 3
{
# 196 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::period __to_period;
# 197 "/usr/include/c++/5/chrono" 3
typedef typename _ToDur::rep __to_rep;
# 198 "/usr/include/c++/5/chrono" 3
typedef ratio_divide< _Period, typename _ToDur::period> __cf;
# 200 "/usr/include/c++/5/chrono" 3
typedef typename common_type< typename _ToDur::rep, _Rep, long> ::type __cr;
# 202 "/usr/include/c++/5/chrono" 3
typedef __duration_cast_impl< _ToDur, ratio_divide< _Period, typename _ToDur::period> , typename common_type< typename _ToDur::rep, _Rep, long> ::type, __ratio_divide< _Period, typename _ToDur::period> ::type::num == 1, __ratio_divide< _Period, typename _ToDur::period> ::type::den == 1> __dc;
# 203 "/usr/include/c++/5/chrono" 3
return __dc::__cast(__d);
# 204 "/usr/include/c++/5/chrono" 3
}
# 207 "/usr/include/c++/5/chrono" 3
template< class _Rep>
# 208 "/usr/include/c++/5/chrono" 3
struct treat_as_floating_point : public is_floating_point< _Rep> {
# 210 "/usr/include/c++/5/chrono" 3
};
# 213 "/usr/include/c++/5/chrono" 3
template< class _Rep>
# 214 "/usr/include/c++/5/chrono" 3
struct duration_values {
# 217 "/usr/include/c++/5/chrono" 3
static constexpr _Rep zero()
# 218 "/usr/include/c++/5/chrono" 3
{ return (_Rep)0; }
# 221 "/usr/include/c++/5/chrono" 3
static constexpr _Rep max()
# 222 "/usr/include/c++/5/chrono" 3
{ return numeric_limits< _Rep> ::max(); }
# 225 "/usr/include/c++/5/chrono" 3
static constexpr _Rep min()
# 226 "/usr/include/c++/5/chrono" 3
{ return numeric_limits< _Rep> ::lowest(); }
# 227 "/usr/include/c++/5/chrono" 3
};
# 229 "/usr/include/c++/5/chrono" 3
template< class _Tp>
# 230 "/usr/include/c++/5/chrono" 3
struct __is_ratio : public false_type {
# 232 "/usr/include/c++/5/chrono" 3
};
# 234 "/usr/include/c++/5/chrono" 3
template< intmax_t _Num, intmax_t _Den>
# 235 "/usr/include/c++/5/chrono" 3
struct __is_ratio< ratio< _Num, _Den> > : public true_type {
# 237 "/usr/include/c++/5/chrono" 3
};
# 240 "/usr/include/c++/5/chrono" 3
template< class _Rep, class _Period>
# 241 "/usr/include/c++/5/chrono" 3
struct duration {
# 243 "/usr/include/c++/5/chrono" 3
typedef _Rep rep;
# 244 "/usr/include/c++/5/chrono" 3
typedef _Period period;
# 246 "/usr/include/c++/5/chrono" 3
static_assert((!__is_duration< _Rep> ::value), "rep cannot be a duration");
# 247 "/usr/include/c++/5/chrono" 3
static_assert((__is_ratio< _Period> ::value), "period must be a specialization of ratio");
# 249 "/usr/include/c++/5/chrono" 3
static_assert((_Period::num > 0), "period must be positive");
# 252 "/usr/include/c++/5/chrono" 3
duration() = default;
# 257 "/usr/include/c++/5/chrono" 3
duration(const duration &) = default;
# 259 "/usr/include/c++/5/chrono" 3
template< class _Rep2, class = typename enable_if< is_convertible< _Rep2, _Rep> ::value && (treat_as_floating_point< _Rep> ::value || (!treat_as_floating_point< _Rep2> ::value))> ::type> constexpr explicit
# 263 "/usr/include/c++/5/chrono" 3
duration(const _Rep2 &__rep) : __r(static_cast< rep>(__rep))
# 264 "/usr/include/c++/5/chrono" 3
{ }
# 266 "/usr/include/c++/5/chrono" 3
template< class _Rep2, class _Period2, class = typename enable_if< treat_as_floating_point< _Rep> ::value || ((__ratio_divide< _Period2, _Period> ::type::den == 1) && (!treat_as_floating_point< _Rep2> ::value))> ::type> constexpr
# 270 "/usr/include/c++/5/chrono" 3
duration(const chrono::duration< _Rep2, _Period2> &__d) : __r((duration_cast< duration> (__d).count()))
# 271 "/usr/include/c++/5/chrono" 3
{ }
# 273 "/usr/include/c++/5/chrono" 3
~duration() = default;
# 274 "/usr/include/c++/5/chrono" 3
duration &operator=(const duration &) = default;
# 278 "/usr/include/c++/5/chrono" 3
constexpr rep count() const
# 279 "/usr/include/c++/5/chrono" 3
{ return __r; }
# 283 "/usr/include/c++/5/chrono" 3
constexpr duration operator+() const
# 284 "/usr/include/c++/5/chrono" 3
{ return *this; }
# 287 "/usr/include/c++/5/chrono" 3
constexpr duration operator-() const
# 288 "/usr/include/c++/5/chrono" 3
{ return ((duration)(-(__r))); }
# 291 "/usr/include/c++/5/chrono" 3
duration &operator++()
# 292 "/usr/include/c++/5/chrono" 3
{
# 293 "/usr/include/c++/5/chrono" 3
++(__r);
# 294 "/usr/include/c++/5/chrono" 3
return *this;
# 295 "/usr/include/c++/5/chrono" 3
}
# 298 "/usr/include/c++/5/chrono" 3
duration operator++(int)
# 299 "/usr/include/c++/5/chrono" 3
{ return ((duration)((__r)++)); }
# 302 "/usr/include/c++/5/chrono" 3
duration &operator--()
# 303 "/usr/include/c++/5/chrono" 3
{
# 304 "/usr/include/c++/5/chrono" 3
--(__r);
# 305 "/usr/include/c++/5/chrono" 3
return *this;
# 306 "/usr/include/c++/5/chrono" 3
}
# 309 "/usr/include/c++/5/chrono" 3
duration operator--(int)
# 310 "/usr/include/c++/5/chrono" 3
{ return ((duration)((__r)--)); }
# 313 "/usr/include/c++/5/chrono" 3
duration &operator+=(const duration &__d)
# 314 "/usr/include/c++/5/chrono" 3
{
# 315 "/usr/include/c++/5/chrono" 3
(__r) += __d.count();
# 316 "/usr/include/c++/5/chrono" 3
return *this;
# 317 "/usr/include/c++/5/chrono" 3
}
# 320 "/usr/include/c++/5/chrono" 3
duration &operator-=(const duration &__d)
# 321 "/usr/include/c++/5/chrono" 3
{
# 322 "/usr/include/c++/5/chrono" 3
(__r) -= __d.count();
# 323 "/usr/include/c++/5/chrono" 3
return *this;
# 324 "/usr/include/c++/5/chrono" 3
}
# 327 "/usr/include/c++/5/chrono" 3
duration &operator*=(const rep &__rhs)
# 328 "/usr/include/c++/5/chrono" 3
{
# 329 "/usr/include/c++/5/chrono" 3
(__r) *= __rhs;
# 330 "/usr/include/c++/5/chrono" 3
return *this;
# 331 "/usr/include/c++/5/chrono" 3
}
# 334 "/usr/include/c++/5/chrono" 3
duration &operator/=(const rep &__rhs)
# 335 "/usr/include/c++/5/chrono" 3
{
# 336 "/usr/include/c++/5/chrono" 3
(__r) /= __rhs;
# 337 "/usr/include/c++/5/chrono" 3
return *this;
# 338 "/usr/include/c++/5/chrono" 3
}
# 341 "/usr/include/c++/5/chrono" 3
template< class _Rep2 = rep> typename enable_if< !treat_as_floating_point< _Rep2> ::value, duration &> ::type
# 344 "/usr/include/c++/5/chrono" 3
operator%=(const rep &__rhs)
# 345 "/usr/include/c++/5/chrono" 3
{
# 346 "/usr/include/c++/5/chrono" 3
(__r) %= __rhs;
# 347 "/usr/include/c++/5/chrono" 3
return *this;
# 348 "/usr/include/c++/5/chrono" 3
}
# 350 "/usr/include/c++/5/chrono" 3
template< class _Rep2 = rep> typename enable_if< !treat_as_floating_point< _Rep2> ::value, duration &> ::type
# 353 "/usr/include/c++/5/chrono" 3
operator%=(const duration &__d)
# 354 "/usr/include/c++/5/chrono" 3
{
# 355 "/usr/include/c++/5/chrono" 3
(__r) %= __d.count();
# 356 "/usr/include/c++/5/chrono" 3
return *this;
# 357 "/usr/include/c++/5/chrono" 3
}
# 361 "/usr/include/c++/5/chrono" 3
static constexpr duration zero()
# 362 "/usr/include/c++/5/chrono" 3
{ return ((duration)(duration_values< _Rep> ::zero())); }
# 365 "/usr/include/c++/5/chrono" 3
static constexpr duration min()
# 366 "/usr/include/c++/5/chrono" 3
{ return ((duration)(duration_values< _Rep> ::min())); }
# 369 "/usr/include/c++/5/chrono" 3
static constexpr duration max()
# 370 "/usr/include/c++/5/chrono" 3
{ return ((duration)(duration_values< _Rep> ::max())); }
# 373 "/usr/include/c++/5/chrono" 3
private: rep __r;
# 374 "/usr/include/c++/5/chrono" 3
};
# 376 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 377 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type
# 380 "/usr/include/c++/5/chrono" 3
operator+(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 381 "/usr/include/c++/5/chrono" 3
__rhs)
# 382 "/usr/include/c++/5/chrono" 3
{
# 383 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 384 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 385 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __cd;
# 386 "/usr/include/c++/5/chrono" 3
return (__cd)((((__cd)__lhs).count()) + (((__cd)__rhs).count()));
# 387 "/usr/include/c++/5/chrono" 3
}
# 389 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 390 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type
# 393 "/usr/include/c++/5/chrono" 3
operator-(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 394 "/usr/include/c++/5/chrono" 3
__rhs)
# 395 "/usr/include/c++/5/chrono" 3
{
# 396 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 397 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 398 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __cd;
# 399 "/usr/include/c++/5/chrono" 3
return (__cd)((((__cd)__lhs).count()) - (((__cd)__rhs).count()));
# 400 "/usr/include/c++/5/chrono" 3
}
# 402 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Rep2, bool = is_convertible< _Rep2, typename common_type< _Rep1, _Rep2> ::type> ::value>
# 405 "/usr/include/c++/5/chrono" 3
struct __common_rep_type { };
# 407 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Rep2>
# 408 "/usr/include/c++/5/chrono" 3
struct __common_rep_type< _Rep1, _Rep2, true> {
# 409 "/usr/include/c++/5/chrono" 3
typedef typename common_type< _Rep1, _Rep2> ::type type; };
# 411 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period, class _Rep2> constexpr duration< typename __common_rep_type< _Rep1, _Rep2> ::type, _Period>
# 414 "/usr/include/c++/5/chrono" 3
operator*(const duration< _Rep1, _Period> &__d, const _Rep2 &__s)
# 415 "/usr/include/c++/5/chrono" 3
{
# 417 "/usr/include/c++/5/chrono" 3
typedef duration< typename common_type< _Rep1, _Rep2> ::type, _Period> __cd;
# 418 "/usr/include/c++/5/chrono" 3
return ((__cd)((((__cd)(__d)).count()) * __s));
# 419 "/usr/include/c++/5/chrono" 3
}
# 421 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Rep2, class _Period> constexpr duration< typename __common_rep_type< _Rep2, _Rep1> ::type, _Period>
# 424 "/usr/include/c++/5/chrono" 3
operator*(const _Rep1 &__s, const duration< _Rep2, _Period> &__d)
# 425 "/usr/include/c++/5/chrono" 3
{ return __d * __s; }
# 427 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period, class _Rep2> constexpr duration< typename __common_rep_type< _Rep1, typename enable_if< !__is_duration< _Rep2> ::value, _Rep2> ::type> ::type, _Period>
# 430 "/usr/include/c++/5/chrono" 3
operator/(const duration< _Rep1, _Period> &__d, const _Rep2 &__s)
# 431 "/usr/include/c++/5/chrono" 3
{
# 433 "/usr/include/c++/5/chrono" 3
typedef duration< typename common_type< _Rep1, _Rep2> ::type, _Period> __cd;
# 434 "/usr/include/c++/5/chrono" 3
return ((__cd)((((__cd)(__d)).count()) / __s));
# 435 "/usr/include/c++/5/chrono" 3
}
# 437 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 438 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr typename common_type< _Rep1, _Rep2> ::type
# 440 "/usr/include/c++/5/chrono" 3
operator/(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 441 "/usr/include/c++/5/chrono" 3
__rhs)
# 442 "/usr/include/c++/5/chrono" 3
{
# 443 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 444 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 445 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __cd;
# 446 "/usr/include/c++/5/chrono" 3
return (((__cd)__lhs).count()) / (((__cd)__rhs).count());
# 447 "/usr/include/c++/5/chrono" 3
}
# 450 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period, class _Rep2> constexpr duration< typename __common_rep_type< _Rep1, typename enable_if< !__is_duration< _Rep2> ::value, _Rep2> ::type> ::type, _Period>
# 453 "/usr/include/c++/5/chrono" 3
operator%(const duration< _Rep1, _Period> &__d, const _Rep2 &__s)
# 454 "/usr/include/c++/5/chrono" 3
{
# 456 "/usr/include/c++/5/chrono" 3
typedef duration< typename common_type< _Rep1, _Rep2> ::type, _Period> __cd;
# 457 "/usr/include/c++/5/chrono" 3
return ((__cd)((((__cd)(__d)).count()) % __s));
# 458 "/usr/include/c++/5/chrono" 3
}
# 460 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 461 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type
# 464 "/usr/include/c++/5/chrono" 3
operator%(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 465 "/usr/include/c++/5/chrono" 3
__rhs)
# 466 "/usr/include/c++/5/chrono" 3
{
# 467 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 468 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 469 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __cd;
# 470 "/usr/include/c++/5/chrono" 3
return (__cd)((((__cd)__lhs).count()) % (((__cd)__rhs).count()));
# 471 "/usr/include/c++/5/chrono" 3
}
# 474 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 475 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 477 "/usr/include/c++/5/chrono" 3
operator==(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 478 "/usr/include/c++/5/chrono" 3
__rhs)
# 479 "/usr/include/c++/5/chrono" 3
{
# 480 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 481 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 482 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __ct;
# 483 "/usr/include/c++/5/chrono" 3
return (((__ct)__lhs).count()) == (((__ct)__rhs).count());
# 484 "/usr/include/c++/5/chrono" 3
}
# 486 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 487 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 489 "/usr/include/c++/5/chrono" 3
operator<(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 490 "/usr/include/c++/5/chrono" 3
__rhs)
# 491 "/usr/include/c++/5/chrono" 3
{
# 492 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 493 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 494 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , duration< _Rep2, _Period2> > ::type __ct;
# 495 "/usr/include/c++/5/chrono" 3
return (((__ct)__lhs).count()) < (((__ct)__rhs).count());
# 496 "/usr/include/c++/5/chrono" 3
}
# 498 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 499 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 501 "/usr/include/c++/5/chrono" 3
operator!=(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 502 "/usr/include/c++/5/chrono" 3
__rhs)
# 503 "/usr/include/c++/5/chrono" 3
{ return !(__lhs == __rhs); }
# 505 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 506 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 508 "/usr/include/c++/5/chrono" 3
operator<=(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 509 "/usr/include/c++/5/chrono" 3
__rhs)
# 510 "/usr/include/c++/5/chrono" 3
{ return !(__rhs < __lhs); }
# 512 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 513 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 515 "/usr/include/c++/5/chrono" 3
operator>(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 516 "/usr/include/c++/5/chrono" 3
__rhs)
# 517 "/usr/include/c++/5/chrono" 3
{ return __rhs < __lhs; }
# 519 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 520 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr bool
# 522 "/usr/include/c++/5/chrono" 3
operator>=(const duration< _Rep1, _Period1> &__lhs, const duration< _Rep2, _Period2> &
# 523 "/usr/include/c++/5/chrono" 3
__rhs)
# 524 "/usr/include/c++/5/chrono" 3
{ return !(__lhs < __rhs); }
# 527 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 1L, 1000000000L> > nanoseconds;
# 530 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 1L, 1000000L> > microseconds;
# 533 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 1L, 1000L> > milliseconds;
# 536 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 1L> > seconds;
# 539 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 60L> > minutes;
# 542 "/usr/include/c++/5/chrono" 3
typedef duration< long, ratio< 3600L> > hours;
# 545 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur>
# 546 "/usr/include/c++/5/chrono" 3
struct time_point {
# 548 "/usr/include/c++/5/chrono" 3
typedef _Clock clock;
# 549 "/usr/include/c++/5/chrono" 3
typedef _Dur duration;
# 550 "/usr/include/c++/5/chrono" 3
typedef typename _Dur::rep rep;
# 551 "/usr/include/c++/5/chrono" 3
typedef typename _Dur::period period;
# 553 "/usr/include/c++/5/chrono" 3
constexpr time_point() : __d(duration::zero())
# 554 "/usr/include/c++/5/chrono" 3
{ }
# 556 "/usr/include/c++/5/chrono" 3
constexpr explicit time_point(const duration &__dur) : __d(__dur)
# 558 "/usr/include/c++/5/chrono" 3
{ }
# 561 "/usr/include/c++/5/chrono" 3
template< class _Dur2> constexpr
# 562 "/usr/include/c++/5/chrono" 3
time_point(const chrono::time_point< _Clock, _Dur2> &__t) : __d((__t.time_since_epoch()))
# 564 "/usr/include/c++/5/chrono" 3
{ }
# 568 "/usr/include/c++/5/chrono" 3
constexpr duration time_since_epoch() const
# 569 "/usr/include/c++/5/chrono" 3
{ return __d; }
# 573 "/usr/include/c++/5/chrono" 3
time_point &operator+=(const duration &__dur)
# 574 "/usr/include/c++/5/chrono" 3
{
# 575 "/usr/include/c++/5/chrono" 3
(__d) += __dur;
# 576 "/usr/include/c++/5/chrono" 3
return *this;
# 577 "/usr/include/c++/5/chrono" 3
}
# 580 "/usr/include/c++/5/chrono" 3
time_point &operator-=(const duration &__dur)
# 581 "/usr/include/c++/5/chrono" 3
{
# 582 "/usr/include/c++/5/chrono" 3
(__d) -= __dur;
# 583 "/usr/include/c++/5/chrono" 3
return *this;
# 584 "/usr/include/c++/5/chrono" 3
}
# 588 "/usr/include/c++/5/chrono" 3
static constexpr time_point min()
# 589 "/usr/include/c++/5/chrono" 3
{ return ((time_point)(duration::min())); }
# 592 "/usr/include/c++/5/chrono" 3
static constexpr time_point max()
# 593 "/usr/include/c++/5/chrono" 3
{ return ((time_point)(duration::max())); }
# 596 "/usr/include/c++/5/chrono" 3
private: duration __d;
# 597 "/usr/include/c++/5/chrono" 3
};
# 600 "/usr/include/c++/5/chrono" 3
template< class _ToDur, class _Clock, class _Dur> constexpr typename enable_if< __is_duration< _ToDur> ::value, time_point< _Clock, _ToDur> > ::type
# 603 "/usr/include/c++/5/chrono" 3
time_point_cast(const time_point< _Clock, _Dur> &__t)
# 604 "/usr/include/c++/5/chrono" 3
{
# 605 "/usr/include/c++/5/chrono" 3
typedef time_point< _Clock, _ToDur> __time_point;
# 606 "/usr/include/c++/5/chrono" 3
return ((__time_point)(duration_cast< _ToDur> ((__t.time_since_epoch()))));
# 607 "/usr/include/c++/5/chrono" 3
}
# 609 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class
# 610 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr time_point< _Clock, typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type>
# 613 "/usr/include/c++/5/chrono" 3
operator+(const time_point< _Clock, _Dur1> &__lhs, const duration< _Rep2, _Period2> &
# 614 "/usr/include/c++/5/chrono" 3
__rhs)
# 615 "/usr/include/c++/5/chrono" 3
{
# 616 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 617 "/usr/include/c++/5/chrono" 3
typedef typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type __ct;
# 618 "/usr/include/c++/5/chrono" 3
typedef time_point< _Clock, typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type> __time_point;
# 619 "/usr/include/c++/5/chrono" 3
return ((__time_point)((__lhs.time_since_epoch()) + __rhs));
# 620 "/usr/include/c++/5/chrono" 3
}
# 622 "/usr/include/c++/5/chrono" 3
template< class _Rep1, class _Period1, class
# 623 "/usr/include/c++/5/chrono" 3
_Clock, class _Dur2> constexpr time_point< _Clock, typename common_type< duration< _Rep1, _Period1> , _Dur2> ::type>
# 626 "/usr/include/c++/5/chrono" 3
operator+(const duration< _Rep1, _Period1> &__lhs, const time_point< _Clock, _Dur2> &
# 627 "/usr/include/c++/5/chrono" 3
__rhs)
# 628 "/usr/include/c++/5/chrono" 3
{
# 629 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep1, _Period1> __dur1;
# 630 "/usr/include/c++/5/chrono" 3
typedef typename common_type< duration< _Rep1, _Period1> , _Dur2> ::type __ct;
# 631 "/usr/include/c++/5/chrono" 3
typedef time_point< _Clock, typename common_type< duration< _Rep1, _Period1> , _Dur2> ::type> __time_point;
# 632 "/usr/include/c++/5/chrono" 3
return ((__time_point)((__rhs.time_since_epoch()) + __lhs));
# 633 "/usr/include/c++/5/chrono" 3
}
# 635 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class
# 636 "/usr/include/c++/5/chrono" 3
_Rep2, class _Period2> constexpr time_point< _Clock, typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type>
# 639 "/usr/include/c++/5/chrono" 3
operator-(const time_point< _Clock, _Dur1> &__lhs, const duration< _Rep2, _Period2> &
# 640 "/usr/include/c++/5/chrono" 3
__rhs)
# 641 "/usr/include/c++/5/chrono" 3
{
# 642 "/usr/include/c++/5/chrono" 3
typedef duration< _Rep2, _Period2> __dur2;
# 643 "/usr/include/c++/5/chrono" 3
typedef typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type __ct;
# 644 "/usr/include/c++/5/chrono" 3
typedef time_point< _Clock, typename common_type< _Dur1, duration< _Rep2, _Period2> > ::type> __time_point;
# 645 "/usr/include/c++/5/chrono" 3
return ((__time_point)((__lhs.time_since_epoch()) - __rhs));
# 646 "/usr/include/c++/5/chrono" 3
}
# 648 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr typename common_type< _Dur1, _Dur2> ::type
# 650 "/usr/include/c++/5/chrono" 3
operator-(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 651 "/usr/include/c++/5/chrono" 3
__rhs)
# 652 "/usr/include/c++/5/chrono" 3
{ return (__lhs.time_since_epoch()) - (__rhs.time_since_epoch()); }
# 654 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 656 "/usr/include/c++/5/chrono" 3
operator==(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 657 "/usr/include/c++/5/chrono" 3
__rhs)
# 658 "/usr/include/c++/5/chrono" 3
{ return (__lhs.time_since_epoch()) == (__rhs.time_since_epoch()); }
# 660 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 662 "/usr/include/c++/5/chrono" 3
operator!=(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 663 "/usr/include/c++/5/chrono" 3
__rhs)
# 664 "/usr/include/c++/5/chrono" 3
{ return !(__lhs == __rhs); }
# 666 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 668 "/usr/include/c++/5/chrono" 3
operator<(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 669 "/usr/include/c++/5/chrono" 3
__rhs)
# 670 "/usr/include/c++/5/chrono" 3
{ return (__lhs.time_since_epoch()) < (__rhs.time_since_epoch()); }
# 672 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 674 "/usr/include/c++/5/chrono" 3
operator<=(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 675 "/usr/include/c++/5/chrono" 3
__rhs)
# 676 "/usr/include/c++/5/chrono" 3
{ return !(__rhs < __lhs); }
# 678 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 680 "/usr/include/c++/5/chrono" 3
operator>(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 681 "/usr/include/c++/5/chrono" 3
__rhs)
# 682 "/usr/include/c++/5/chrono" 3
{ return __rhs < __lhs; }
# 684 "/usr/include/c++/5/chrono" 3
template< class _Clock, class _Dur1, class _Dur2> constexpr bool
# 686 "/usr/include/c++/5/chrono" 3
operator>=(const time_point< _Clock, _Dur1> &__lhs, const time_point< _Clock, _Dur2> &
# 687 "/usr/include/c++/5/chrono" 3
__rhs)
# 688 "/usr/include/c++/5/chrono" 3
{ return !(__lhs < __rhs); }
# 709 "/usr/include/c++/5/chrono" 3
inline namespace _V2 {
# 716 "/usr/include/c++/5/chrono" 3
struct system_clock {
# 718 "/usr/include/c++/5/chrono" 3
typedef nanoseconds duration;
# 719 "/usr/include/c++/5/chrono" 3
typedef chrono::duration< long, ratio< 1L, 1000000000L> > ::rep rep;
# 720 "/usr/include/c++/5/chrono" 3
typedef chrono::duration< long, ratio< 1L, 1000000000L> > ::period period;
# 721 "/usr/include/c++/5/chrono" 3
typedef chrono::time_point< system_clock, chrono::duration< long, ratio< 1L, 1000000000L> > > time_point;
# 723 "/usr/include/c++/5/chrono" 3
static_assert((((system_clock::duration::min()) < (system_clock::duration::zero()))), "a clock\'s minimum duration cannot be less than its epoch");
# 727 "/usr/include/c++/5/chrono" 3
static constexpr bool is_steady = false;
# 730 "/usr/include/c++/5/chrono" 3
static time_point now() noexcept;
# 734 "/usr/include/c++/5/chrono" 3
static time_t to_time_t(const time_point &__t) noexcept
# 735 "/usr/include/c++/5/chrono" 3
{
# 736 "/usr/include/c++/5/chrono" 3
return (time_t)duration_cast< chrono::duration< long, ratio< 1L> > > (__t.time_since_epoch()).count();
# 738 "/usr/include/c++/5/chrono" 3
}
# 741 "/usr/include/c++/5/chrono" 3
static time_point from_time_t(time_t __t) noexcept
# 742 "/usr/include/c++/5/chrono" 3
{
# 743 "/usr/include/c++/5/chrono" 3
typedef chrono::time_point< system_clock, chrono::duration< long, ratio< 1L> > > __from;
# 744 "/usr/include/c++/5/chrono" 3
return time_point_cast< chrono::duration< long, ratio< 1L, 1000000000L> > > (((__from)(((seconds)(__t)))));
# 746 "/usr/include/c++/5/chrono" 3
}
# 747 "/usr/include/c++/5/chrono" 3
};
# 755 "/usr/include/c++/5/chrono" 3
struct steady_clock {
# 757 "/usr/include/c++/5/chrono" 3
typedef nanoseconds duration;
# 758 "/usr/include/c++/5/chrono" 3
typedef chrono::duration< long, ratio< 1L, 1000000000L> > ::rep rep;
# 759 "/usr/include/c++/5/chrono" 3
typedef chrono::duration< long, ratio< 1L, 1000000000L> > ::period period;
# 760 "/usr/include/c++/5/chrono" 3
typedef chrono::time_point< steady_clock, chrono::duration< long, ratio< 1L, 1000000000L> > > time_point;
# 762 "/usr/include/c++/5/chrono" 3
static constexpr bool is_steady = true;
# 765 "/usr/include/c++/5/chrono" 3
static time_point now() noexcept;
# 766 "/usr/include/c++/5/chrono" 3
};
# 776 "/usr/include/c++/5/chrono" 3
using high_resolution_clock = system_clock;
# 778 "/usr/include/c++/5/chrono" 3
}
# 781 "/usr/include/c++/5/chrono" 3
}
# 881 "/usr/include/c++/5/chrono" 3
}
# 63 "/usr/include/c++/5/bits/stl_construct.h" 3
namespace std __attribute((__visibility__("default"))) {
# 72 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _T1, class ..._Args> inline void
# 74 "/usr/include/c++/5/bits/stl_construct.h" 3
_Construct(_T1 *__p, _Args &&...__args)
# 75 "/usr/include/c++/5/bits/stl_construct.h" 3
{ ::new (static_cast< void *>(__p)) (_T1)(std::forward< _Args> (__args)...); }
# 90 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _Tp> inline void
# 92 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_Tp *__pointer)
# 93 "/usr/include/c++/5/bits/stl_construct.h" 3
{ (__pointer->~_Tp()); }
# 95 "/usr/include/c++/5/bits/stl_construct.h" 3
template< bool >
# 96 "/usr/include/c++/5/bits/stl_construct.h" 3
struct _Destroy_aux {
# 98 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 100 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator __first, _ForwardIterator __last)
# 101 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 102 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 103 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy(std::__addressof(*__first)); }
# 104 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 105 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 108 "/usr/include/c++/5/bits/stl_construct.h" 3
template<> struct _Destroy_aux< true> {
# 110 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> static void
# 112 "/usr/include/c++/5/bits/stl_construct.h" 3
__destroy(_ForwardIterator, _ForwardIterator) { }
# 113 "/usr/include/c++/5/bits/stl_construct.h" 3
};
# 120 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator> inline void
# 122 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last)
# 123 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 125 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _Value_type;
# 126 "/usr/include/c++/5/bits/stl_construct.h" 3
std::_Destroy_aux< __has_trivial_destructor(typename iterator_traits< _ForwardIterator> ::value_type)> ::__destroy(__first, __last);
# 128 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 136 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Allocator> void
# 138 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, _Allocator &
# 139 "/usr/include/c++/5/bits/stl_construct.h" 3
__alloc)
# 140 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_construct.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 142 "/usr/include/c++/5/bits/stl_construct.h" 3
for (; __first != __last; ++__first) {
# 143 "/usr/include/c++/5/bits/stl_construct.h" 3
__traits::destroy(__alloc, std::__addressof(*__first)); }
# 144 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 146 "/usr/include/c++/5/bits/stl_construct.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 148 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(_ForwardIterator __first, _ForwardIterator __last, allocator< _Tp> &)
# 150 "/usr/include/c++/5/bits/stl_construct.h" 3
{
# 151 "/usr/include/c++/5/bits/stl_construct.h" 3
_Destroy(__first, __last);
# 152 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 155 "/usr/include/c++/5/bits/stl_construct.h" 3
}
# 59 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueTypes>
# 64 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_copy {
# 66 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 68 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 69 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 70 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 71 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 72 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 73 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 74 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 75 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 76 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 77 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 78 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 79 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 80 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 81 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 82 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 83 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 84 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 87 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_copy< true> {
# 89 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> static _ForwardIterator
# 91 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 92 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 93 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::copy(__first, __last, __result); }
# 94 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 105 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator> inline _ForwardIterator
# 107 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_copy(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 108 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 109 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 111 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::value_type _ValueType1;
# 113 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType2;
# 118 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _InputIterator> ::reference _RefType1;
# 119 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::reference _RefType2;
# 120 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_assignable< typename iterator_traits< _ForwardIterator> ::reference, typename iterator_traits< _InputIterator> ::reference> ::value);
# 123 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy< __is_trivial(typename iterator_traits< _InputIterator> ::value_type) && __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_copy(__first, __last, __result);
# 127 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 130 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 131 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill {
# 133 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 135 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 136 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 137 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 138 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 139 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 140 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 141 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 142 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 143 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 144 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 145 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 146 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 147 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 148 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 149 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 150 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 153 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill< true> {
# 155 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> static void
# 157 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 158 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 159 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::fill(__first, __last, __x); }
# 160 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 171 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 173 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 174 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 175 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 177 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 182 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 185 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_fill(__first, __last, __x);
# 187 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 190 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 191 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_fill_n {
# 193 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 195 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 196 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 197 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 198 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 199 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 200 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 201 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 202 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), __x); }
# 203 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 204 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 205 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 206 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 207 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 208 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 209 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 210 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 211 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 214 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_fill_n< true> {
# 216 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> static _ForwardIterator
# 218 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_fill_n(_ForwardIterator __first, _Size __n, const _Tp &
# 219 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x)
# 220 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::fill_n(__first, __n, __x); }
# 221 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 234 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline _ForwardIterator
# 236 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp &__x)
# 237 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 239 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 244 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 246 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __uninitialized_fill_n< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_fill_n(__first, __n, __x);
# 248 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 257 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 259 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 260 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 261 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 262 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 263 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 264 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 265 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 266 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __first != __last; (++__first), (++__cur)) {
# 267 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), *__first); }
# 268 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 269 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 270 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 271 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 272 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur, __alloc);
# 273 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 274 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 275 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 277 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp> inline _ForwardIterator
# 279 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 280 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, allocator< _Tp> &)
# 281 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __last, __result); }
# 283 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 284 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 286 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_a(_InputIterator __first, _InputIterator __last, _ForwardIterator
# 287 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &__alloc)
# 288 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 289 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(std::make_move_iterator(__first), std::make_move_iterator(__last), __result, __alloc);
# 292 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 294 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class
# 295 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 297 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_if_noexcept_a(_InputIterator __first, _InputIterator
# 298 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _ForwardIterator
# 299 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 300 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 301 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 302 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(std::__make_move_if_noexcept_iterator(__first), std::__make_move_if_noexcept_iterator(__last), __result, __alloc);
# 305 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 307 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Allocator> void
# 309 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 310 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 311 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 312 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 313 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 314 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 315 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 316 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 317 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 318 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 319 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 320 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 321 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 322 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 323 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 324 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 326 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _Tp2> inline void
# 328 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 329 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 330 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::uninitialized_fill(__first, __last, __x); }
# 332 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 333 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> _ForwardIterator
# 335 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 336 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _Allocator &__alloc)
# 337 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 338 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 339 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 340 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 342 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 343 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur), __x); }
# 344 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 345 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 347 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 349 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 350 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 351 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 353 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp, class
# 354 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Tp2> inline _ForwardIterator
# 356 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, const _Tp &
# 357 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, allocator< _Tp2> &)
# 358 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_fill_n(__first, __n, __x); }
# 370 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 371 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 373 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_move(_InputIterator1 __first1, _InputIterator1
# 374 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 375 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 376 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 377 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 378 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 379 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 380 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1, __result, __alloc);
# 383 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 384 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 385 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
# 386 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 387 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 388 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 389 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 390 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 391 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 392 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 399 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator, class _Allocator> inline _ForwardIterator
# 401 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_copy(_InputIterator1 __first1, _InputIterator1
# 402 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last1, _InputIterator2
# 403 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _InputIterator2
# 404 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, _ForwardIterator
# 405 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, _Allocator &
# 406 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 407 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 408 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1, __result, __alloc);
# 411 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 412 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 413 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
# 414 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 415 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 416 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 417 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 418 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 419 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 420 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 425 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp, class _InputIterator, class
# 426 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline _ForwardIterator
# 428 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid, const _Tp &
# 429 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__x, _InputIterator __first, _InputIterator
# 430 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _Allocator &__alloc)
# 431 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 432 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
# 433 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 434 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 435 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
# 436 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 437 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 438 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 439 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __mid, __alloc);
# 440 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 441 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 442 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 447 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _ForwardIterator, class _Tp, class
# 448 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_Allocator> inline void
# 450 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1, _ForwardIterator
# 451 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__first2, _ForwardIterator
# 452 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last2, const _Tp &__x, _Allocator &
# 453 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 454 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 455 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1, __first2, __alloc);
# 458 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 459 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 460 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
# 461 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 462 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 463 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 464 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first2, __mid2, __alloc);
# 465 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 466 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 467 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 473 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 474 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_default_1 {
# 476 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> static void
# 478 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default(_ForwardIterator __first, _ForwardIterator __last)
# 479 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 480 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 481 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 482 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 483 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 484 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur)); }
# 485 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 486 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 487 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 488 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 489 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 490 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 491 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 492 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 495 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_default_1< true> {
# 497 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> static void
# 499 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default(_ForwardIterator __first, _ForwardIterator __last)
# 500 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 502 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 504 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::fill(__first, __last, _ValueType());
# 505 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 506 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 508 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< bool _TrivialValueType>
# 509 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
struct __uninitialized_default_n_1 {
# 511 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> static _ForwardIterator
# 513 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default_n(_ForwardIterator __first, _Size __n)
# 514 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 515 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 516 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 517 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 518 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 519 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur)); }
# 520 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 521 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 522 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 523 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 524 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur);
# 525 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 526 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 527 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 528 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 531 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template<> struct __uninitialized_default_n_1< true> {
# 533 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> static _ForwardIterator
# 535 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninit_default_n(_ForwardIterator __first, _Size __n)
# 536 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 538 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 540 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return std::fill_n(__first, __n, _ValueType());
# 541 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 542 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
};
# 547 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator> inline void
# 549 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default(_ForwardIterator __first, _ForwardIterator
# 550 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last)
# 551 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 553 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 555 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 557 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::__uninitialized_default_1< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_default(__first, __last);
# 560 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 564 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size> inline _ForwardIterator
# 566 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n(_ForwardIterator __first, _Size __n)
# 567 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 569 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef typename iterator_traits< _ForwardIterator> ::value_type _ValueType;
# 571 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
const bool __assignable = (is_copy_assignable< typename iterator_traits< _ForwardIterator> ::value_type> ::value);
# 573 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __uninitialized_default_n_1< __is_trivial(typename iterator_traits< _ForwardIterator> ::value_type) && __assignable> ::__uninit_default_n(__first, __n);
# 576 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 582 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Allocator> void
# 584 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_a(_ForwardIterator __first, _ForwardIterator
# 585 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, _Allocator &
# 586 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 587 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 588 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 589 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 590 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 591 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 592 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __cur != __last; ++__cur) {
# 593 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur)); }
# 594 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 595 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 596 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 597 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 598 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 599 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 600 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 602 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 604 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_a(_ForwardIterator __first, _ForwardIterator
# 605 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__last, allocator< _Tp> &)
# 607 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ std::__uninitialized_default(__first, __last); }
# 613 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Allocator> _ForwardIterator
# 615 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n_a(_ForwardIterator __first, _Size __n, _Allocator &
# 616 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__alloc)
# 617 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 618 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __first;
# 619 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 620 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 621 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
typedef __gnu_cxx::__alloc_traits< _Allocator> __traits;
# 622 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; (--__n), (++__cur)) {
# 623 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__traits::construct(__alloc, std::__addressof(*__cur)); }
# 624 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 625 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 626 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 627 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 628 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__first, __cur, __alloc);
# 629 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 630 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 631 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 633 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _ForwardIterator, class _Size, class _Tp> inline _ForwardIterator
# 635 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_default_n_a(_ForwardIterator __first, _Size __n, allocator< _Tp> &)
# 637 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::__uninitialized_default_n(__first, __n); }
# 640 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _Size, class
# 641 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator> _ForwardIterator
# 643 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_n(_InputIterator __first, _Size __n, _ForwardIterator
# 644 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, input_iterator_tag)
# 645 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator __cur = __result;
# 647 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
try
# 648 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 649 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
for (; __n > 0; ((--__n), (++__first)), (++__cur)) {
# 650 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Construct(std::__addressof(*__cur), *__first); }
# 651 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
return __cur;
# 652 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 653 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
catch (...)
# 654 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{
# 655 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
std::_Destroy(__result, __cur);
# 656 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
throw;
# 657 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 658 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 660 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _RandomAccessIterator, class _Size, class
# 661 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
_ForwardIterator> inline _ForwardIterator
# 663 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__uninitialized_copy_n(_RandomAccessIterator __first, _Size __n, _ForwardIterator
# 664 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result, random_access_iterator_tag)
# 666 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::uninitialized_copy(__first, __first + __n, __result); }
# 677 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
template< class _InputIterator, class _Size, class _ForwardIterator> inline _ForwardIterator
# 679 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
uninitialized_copy_n(_InputIterator __first, _Size __n, _ForwardIterator
# 680 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
__result)
# 681 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
{ return std::__uninitialized_copy_n(__first, __n, __result, std::__iterator_category(__first));
# 682 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 686 "/usr/include/c++/5/bits/stl_uninitialized.h" 3
}
# 66 "/usr/include/c++/5/bits/stl_vector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc>
# 72 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_base {
# 75 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other _Tp_alloc_type;
# 77 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> ::pointer pointer;
# 79 "/usr/include/c++/5/bits/stl_vector.h" 3
struct _Vector_impl : public _Tp_alloc_type {
# 82 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_start;
# 83 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_finish;
# 84 "/usr/include/c++/5/bits/stl_vector.h" 3
typename ::std::_Vector_base< _Tp, _Alloc> ::pointer _M_end_of_storage;
# 86 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl() : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 88 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 90 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl(const typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &__a) noexcept : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 92 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 95 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl(typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type &&__a) noexcept : ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type(::std::move(__a)), _M_start(), _M_finish(), _M_end_of_storage()
# 98 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 101 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_swap_data(_Vector_impl &__x) noexcept
# 102 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 103 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_start, __x._M_start);
# 104 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_finish, __x._M_finish);
# 105 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::swap(_M_end_of_storage, __x._M_end_of_storage);
# 106 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 107 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 110 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 113 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tp_alloc_type &_M_get_Tp_allocator() noexcept
# 114 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< _Tp_alloc_type *>(&(this->_M_impl))); }
# 117 "/usr/include/c++/5/bits/stl_vector.h" 3
const _Tp_alloc_type &_M_get_Tp_allocator() const noexcept
# 118 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(static_cast< const _Tp_alloc_type *>(&(this->_M_impl))); }
# 121 "/usr/include/c++/5/bits/stl_vector.h" 3
allocator_type get_allocator() const noexcept
# 122 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (allocator_type)this->_M_get_Tp_allocator(); }
# 124 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base() : _M_impl()
# 125 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 127 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(const allocator_type &__a) noexcept : _M_impl(__a)
# 128 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 130 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n) : _M_impl()
# 132 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 134 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(size_t __n, const allocator_type &__a) : _M_impl(__a)
# 136 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_create_storage(__n); }
# 139 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Tp_alloc_type &&__a) noexcept : _M_impl(std::move(__a))
# 140 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 142 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Vector_base &&__x) noexcept : _M_impl(std::move(__x._M_get_Tp_allocator()))
# 144 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_swap_data(__x._M_impl)); }
# 146 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_base(_Vector_base &&__x, const allocator_type &__a) : _M_impl(__a)
# 148 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 149 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__x.get_allocator() == __a) {
# 150 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data(__x._M_impl)); } else
# 152 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 153 "/usr/include/c++/5/bits/stl_vector.h" 3
size_t __n = ((__x._M_impl)._M_finish) - ((__x._M_impl)._M_start);
# 154 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_create_storage(__n);
# 155 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 156 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 159 "/usr/include/c++/5/bits/stl_vector.h" 3
~_Vector_base() noexcept
# 160 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 161 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 164 "/usr/include/c++/5/bits/stl_vector.h" 3
_Vector_impl _M_impl;
# 167 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer _M_allocate(size_t __n)
# 168 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 169 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 170 "/usr/include/c++/5/bits/stl_vector.h" 3
return (__n != (0)) ? _Tr::allocate(_M_impl, __n) : (pointer());
# 171 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 174 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_deallocate(pointer __p, size_t __n)
# 175 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 176 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< _Tp> ::other> _Tr;
# 177 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__p) {
# 178 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tr::deallocate(_M_impl, __p, __n); }
# 179 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 183 "/usr/include/c++/5/bits/stl_vector.h" 3
private: void _M_create_storage(size_t __n)
# 184 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 185 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = this->_M_allocate(__n);
# 186 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ((this->_M_impl)._M_start);
# 187 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 188 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 189 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 213 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc = allocator< _Tp> >
# 214 "/usr/include/c++/5/bits/stl_vector.h" 3
class vector : protected _Vector_base< _Tp, _Alloc> {
# 217 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename _Alloc::value_type _Alloc_value_type;
# 221 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::_Vector_base< _Tp, _Alloc> _Base;
# 222 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type _Tp_alloc_type;
# 223 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> _Alloc_traits;
# 226 "/usr/include/c++/5/bits/stl_vector.h" 3
public: typedef _Tp value_type;
# 227 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::std::_Vector_base< _Tp, _Alloc> ::pointer pointer;
# 228 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer const_pointer;
# 229 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::reference reference;
# 230 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_reference const_reference;
# 231 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> iterator;
# 233 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> const_iterator;
# 234 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::__gnu_cxx::__alloc_traits< typename ::std::_Vector_base< _Tp, _Alloc> ::_Tp_alloc_type> ::const_pointer, vector> > const_reverse_iterator;
# 235 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::reverse_iterator< ::__gnu_cxx::__normal_iterator< typename ::std::_Vector_base< _Tp, _Alloc> ::pointer, vector> > reverse_iterator;
# 236 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::size_t size_type;
# 237 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 238 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef _Alloc allocator_type;
# 241 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: using ::std::_Vector_base< _Tp, _Alloc> ::_M_allocate;
# 242 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_deallocate;
# 243 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_impl;
# 244 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::_M_get_Tp_allocator;
# 253 "/usr/include/c++/5/bits/stl_vector.h" 3
public: vector() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _Base()
# 257 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 264 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(const allocator_type &__a) noexcept : _Base(__a)
# 265 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 277 "/usr/include/c++/5/bits/stl_vector.h" 3
explicit vector(size_type __n, const allocator_type &__a = allocator_type()) : _Base(__n, __a)
# 279 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_default_initialize(__n); }
# 289 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(size_type __n, const value_type &__value, const allocator_type &
# 290 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__n, __a)
# 292 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_initialize(__n, __value); }
# 318 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(const vector &__x) : _Base(__x.size(), _Alloc_traits::_S_select_on_copy((__x._M_get_Tp_allocator())))
# 321 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__x.begin(), __x.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 325 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 335 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(vector &&__x) noexcept : _Base(::std::move(__x))
# 336 "/usr/include/c++/5/bits/stl_vector.h" 3
{ }
# 339 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(const vector &__x, const allocator_type &__a) : _Base(__x.size(), __a)
# 341 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__x.begin(), __x.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 345 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 348 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(vector &&__rv, const allocator_type &__m) noexcept(_Alloc_traits::_S_always_equal()) : _Base(::std::move(__rv), __m)
# 351 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 352 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((__rv.get_allocator()) != __m)
# 353 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 354 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_move_a(__rv.begin(), __rv.end(), ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 358 "/usr/include/c++/5/bits/stl_vector.h" 3
__rv.clear();
# 359 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 360 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 373 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(initializer_list< _Tp> __l, const allocator_type &
# 374 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 376 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 377 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize((__l.begin()), (__l.end()), ::std::random_access_iterator_tag());
# 379 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 399 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 400 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> >
# 401 "/usr/include/c++/5/bits/stl_vector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 402 "/usr/include/c++/5/bits/stl_vector.h" 3
__a = allocator_type()) : _Base(__a)
# 404 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_initialize_dispatch(__first, __last, ::std::__false_type()); }
# 423 "/usr/include/c++/5/bits/stl_vector.h" 3
~vector() noexcept
# 424 "/usr/include/c++/5/bits/stl_vector.h" 3
{ ::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 425 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 436 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(const vector & __x);
# 448 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(vector &&__x) noexcept(_Alloc_traits::_S_nothrow_move())
# 449 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 450 "/usr/include/c++/5/bits/stl_vector.h" 3
constexpr bool __move_storage = (_Alloc_traits::_S_propagate_on_move_assign() || _Alloc_traits::_S_always_equal());
# 453 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_move_assign(::std::move(__x), integral_constant< bool, __move_storage> ());
# 455 "/usr/include/c++/5/bits/stl_vector.h" 3
return *this;
# 456 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 470 "/usr/include/c++/5/bits/stl_vector.h" 3
vector &operator=(initializer_list< _Tp> __l)
# 471 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 472 "/usr/include/c++/5/bits/stl_vector.h" 3
(this->assign((__l.begin()), (__l.end())));
# 473 "/usr/include/c++/5/bits/stl_vector.h" 3
return *this;
# 474 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 488 "/usr/include/c++/5/bits/stl_vector.h" 3
void assign(size_type __n, const value_type &__val)
# 489 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 504 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 505 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > void
# 507 "/usr/include/c++/5/bits/stl_vector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 508 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_assign_dispatch(__first, __last, ::std::__false_type()); }
# 533 "/usr/include/c++/5/bits/stl_vector.h" 3
void assign(initializer_list< _Tp> __l)
# 534 "/usr/include/c++/5/bits/stl_vector.h" 3
{ (this->assign((__l.begin()), (__l.end()))); }
# 538 "/usr/include/c++/5/bits/stl_vector.h" 3
using ::std::_Vector_base< _Tp, _Alloc> ::get_allocator;
# 547 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator begin() noexcept
# 548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_start))); }
# 556 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator begin() const noexcept
# 557 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_start))); }
# 565 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator end() noexcept
# 566 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((iterator)(((this->_M_impl)._M_finish))); }
# 574 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator end() const noexcept
# 575 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_finish))); }
# 583 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rbegin() noexcept
# 584 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 592 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rbegin() const noexcept
# 593 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 601 "/usr/include/c++/5/bits/stl_vector.h" 3
reverse_iterator rend() noexcept
# 602 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 610 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator rend() const noexcept
# 611 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 620 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator cbegin() const noexcept
# 621 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_start))); }
# 629 "/usr/include/c++/5/bits/stl_vector.h" 3
const_iterator cend() const noexcept
# 630 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_iterator)(((this->_M_impl)._M_finish))); }
# 638 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator crbegin() const noexcept
# 639 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 647 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reverse_iterator crend() const noexcept
# 648 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 654 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type size() const noexcept
# 655 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_finish) - ((this->_M_impl)._M_start)); }
# 659 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type max_size() const noexcept
# 660 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
# 673 "/usr/include/c++/5/bits/stl_vector.h" 3
void resize(size_type __new_size)
# 674 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 675 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size > size()) {
# 676 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_default_append(__new_size - size()); } else {
# 677 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size < size()) {
# 678 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 679 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 693 "/usr/include/c++/5/bits/stl_vector.h" 3
void resize(size_type __new_size, const value_type &__x)
# 694 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 695 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size > size()) {
# 696 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(this->end(), __new_size - size(), __x); } else {
# 697 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__new_size < size()) {
# 698 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_erase_at_end(((this->_M_impl)._M_start) + __new_size); } }
# 699 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 725 "/usr/include/c++/5/bits/stl_vector.h" 3
void shrink_to_fit()
# 726 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_shrink_to_fit(); }
# 734 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type capacity() const noexcept
# 735 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 736 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 743 "/usr/include/c++/5/bits/stl_vector.h" 3
bool empty() const noexcept
# 744 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return this->begin() == this->end(); }
# 764 "/usr/include/c++/5/bits/stl_vector.h" 3
void reserve(size_type __n);
# 779 "/usr/include/c++/5/bits/stl_vector.h" 3
reference operator[](size_type __n) noexcept
# 780 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 794 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference operator[](size_type __n) const noexcept
# 795 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(((this->_M_impl)._M_start) + __n); }
# 800 "/usr/include/c++/5/bits/stl_vector.h" 3
protected: void _M_range_check(size_type __n) const
# 801 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 802 "/usr/include/c++/5/bits/stl_vector.h" 3
if (__n >= this->size()) {
# 803 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_out_of_range_fmt("vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 807 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 822 "/usr/include/c++/5/bits/stl_vector.h" 3
public: reference at(size_type __n)
# 823 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 824 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 825 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 826 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 840 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference at(size_type __n) const
# 841 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 842 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_check(__n);
# 843 "/usr/include/c++/5/bits/stl_vector.h" 3
return (*this)[__n];
# 844 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 851 "/usr/include/c++/5/bits/stl_vector.h" 3
reference front() noexcept
# 852 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 859 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference front() const noexcept
# 860 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *this->begin(); }
# 867 "/usr/include/c++/5/bits/stl_vector.h" 3
reference back() noexcept
# 868 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 875 "/usr/include/c++/5/bits/stl_vector.h" 3
const_reference back() const noexcept
# 876 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return *(this->end() - 1); }
# 890 "/usr/include/c++/5/bits/stl_vector.h" 3
_Tp *data() noexcept
# 891 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 898 "/usr/include/c++/5/bits/stl_vector.h" 3
const _Tp *data() const noexcept
# 899 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_data_ptr(((this->_M_impl)._M_start)); }
# 913 "/usr/include/c++/5/bits/stl_vector.h" 3
void push_back(const value_type &__x)
# 914 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 915 "/usr/include/c++/5/bits/stl_vector.h" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 916 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 917 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 919 "/usr/include/c++/5/bits/stl_vector.h" 3
++((this->_M_impl)._M_finish);
# 920 "/usr/include/c++/5/bits/stl_vector.h" 3
} else {
# 923 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_emplace_back_aux(__x); }
# 927 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 931 "/usr/include/c++/5/bits/stl_vector.h" 3
void push_back(value_type &&__x)
# 932 "/usr/include/c++/5/bits/stl_vector.h" 3
{ emplace_back(::std::move(__x)); }
# 934 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void emplace_back(_Args && ...__args);
# 949 "/usr/include/c++/5/bits/stl_vector.h" 3
void pop_back() noexcept
# 950 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 951 "/usr/include/c++/5/bits/stl_vector.h" 3
--((this->_M_impl)._M_finish);
# 952 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 953 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 968 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> iterator emplace(const_iterator __position, _Args && ...__args);
# 984 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, const value_type & __x);
# 1014 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, value_type &&__x)
# 1015 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return emplace(__position, ::std::move(__x)); }
# 1031 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, initializer_list< _Tp> __l)
# 1032 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (this->insert(__position, (__l.begin()), (__l.end()))); }
# 1051 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator insert(const_iterator __position, size_type __n, const value_type &__x)
# 1052 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1053 "/usr/include/c++/5/bits/stl_vector.h" 3
difference_type __offset = __position - cbegin();
# 1054 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_fill_insert(this->begin() + __offset, __n, __x);
# 1055 "/usr/include/c++/5/bits/stl_vector.h" 3
return this->begin() + __offset;
# 1056 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1092 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator, class
# 1093 "/usr/include/c++/5/bits/stl_vector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > iterator
# 1095 "/usr/include/c++/5/bits/stl_vector.h" 3
insert(const_iterator __position, _InputIterator __first, _InputIterator
# 1096 "/usr/include/c++/5/bits/stl_vector.h" 3
__last)
# 1097 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1098 "/usr/include/c++/5/bits/stl_vector.h" 3
difference_type __offset = __position - cbegin();
# 1099 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(this->begin() + __offset, __first, __last, ::std::__false_type());
# 1101 "/usr/include/c++/5/bits/stl_vector.h" 3
return this->begin() + __offset;
# 1102 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1146 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(const_iterator __position)
# 1147 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return _M_erase(this->begin() + (__position - cbegin())); }
# 1173 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 1174 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1175 "/usr/include/c++/5/bits/stl_vector.h" 3
const auto __beg = this->begin();
# 1176 "/usr/include/c++/5/bits/stl_vector.h" 3
const auto __cbeg = cbegin();
# 1177 "/usr/include/c++/5/bits/stl_vector.h" 3
return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
# 1178 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1194 "/usr/include/c++/5/bits/stl_vector.h" 3
void swap(vector &__x) noexcept(_Alloc_traits::_S_nothrow_swap())
# 1198 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1199 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1200 "/usr/include/c++/5/bits/stl_vector.h" 3
_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1202 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1211 "/usr/include/c++/5/bits/stl_vector.h" 3
void clear() noexcept
# 1212 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_erase_at_end(((this->_M_impl)._M_start)); }
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
protected:
# 1219 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> pointer
# 1221 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_allocate_and_copy(size_type __n, _ForwardIterator
# 1222 "/usr/include/c++/5/bits/stl_vector.h" 3
__first, _ForwardIterator __last)
# 1223 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_vector.h" 3
pointer __result = (this->_M_allocate(__n));
# 1225 "/usr/include/c++/5/bits/stl_vector.h" 3
try
# 1226 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1227 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::__uninitialized_copy_a(__first, __last, __result, _M_get_Tp_allocator());
# 1229 "/usr/include/c++/5/bits/stl_vector.h" 3
return __result;
# 1230 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_vector.h" 3
catch (...)
# 1232 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1233 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_deallocate(__result, __n);
# 1234 "/usr/include/c++/5/bits/stl_vector.h" 3
throw;
# 1235 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1236 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1245 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1247 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __value, ::std::__true_type)
# 1248 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1249 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = _M_allocate(static_cast< size_type>(__n));
# 1250 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + (static_cast< size_type>(__n)));
# 1252 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_fill_initialize(static_cast< size_type>(__n), __value);
# 1253 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1256 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1258 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1260 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1262 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1263 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(__first, __last, _IterCategory());
# 1264 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1269 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_InputIterator __first, _InputIterator
# 1270 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::input_iterator_tag)
# 1271 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1272 "/usr/include/c++/5/bits/stl_vector.h" 3
for (; __first != __last; ++__first) {
# 1274 "/usr/include/c++/5/bits/stl_vector.h" 3
emplace_back(*__first); }
# 1278 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1281 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void
# 1283 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_initialize(_ForwardIterator __first, _ForwardIterator
# 1284 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::forward_iterator_tag)
# 1285 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1286 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1287 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_start) = (this->_M_allocate(__n));
# 1288 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 1289 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__first, __last, ((this->_M_impl)._M_start), _M_get_Tp_allocator());
# 1293 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1298 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_initialize(size_type __n, const value_type &__value)
# 1299 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1300 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_start), __n, __value, _M_get_Tp_allocator());
# 1303 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1308 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_default_initialize(size_type __n)
# 1309 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1310 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_default_n_a(((this->_M_impl)._M_start), __n, _M_get_Tp_allocator());
# 1313 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1323 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1325 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1326 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_assign(__n, __val); }
# 1329 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1331 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1333 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1335 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1336 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_assign_aux(__first, __last, _IterCategory());
# 1337 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1340 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1346 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1354 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_assign(size_type __n, const value_type & __val);
# 1363 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Integer> void
# 1365 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val, ::std::__true_type)
# 1367 "/usr/include/c++/5/bits/stl_vector.h" 3
{ _M_fill_insert(__pos, __n, __val); }
# 1370 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void
# 1372 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator __first, _InputIterator
# 1373 "/usr/include/c++/5/bits/stl_vector.h" 3
__last, ::std::__false_type)
# 1374 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1376 "/usr/include/c++/5/bits/stl_vector.h" 3
typedef typename iterator_traits< _InputIterator> ::iterator_category _IterCategory;
# 1377 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_range_insert(__pos, __first, __last, _IterCategory());
# 1378 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1381 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _InputIterator> void _M_range_insert(iterator __pos, _InputIterator __first, _InputIterator __last, ::std::input_iterator_tag);
# 1387 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _ForwardIterator> void _M_range_insert(iterator __pos, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1395 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_fill_insert(iterator __pos, size_type __n, const value_type & __x);
# 1400 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_default_append(size_type __n);
# 1403 "/usr/include/c++/5/bits/stl_vector.h" 3
bool _M_shrink_to_fit();
# 1411 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void _M_insert_aux(iterator __position, _Args && ...__args);
# 1415 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class ..._Args> void _M_emplace_back_aux(_Args && ...__args);
# 1422 "/usr/include/c++/5/bits/stl_vector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1423 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1424 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((max_size() - size()) < __n) {
# 1425 "/usr/include/c++/5/bits/stl_vector.h" 3
__throw_length_error(__s); }
# 1427 "/usr/include/c++/5/bits/stl_vector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1428 "/usr/include/c++/5/bits/stl_vector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1429 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1436 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_erase_at_end(pointer __pos) noexcept
# 1437 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1438 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::_Destroy(__pos, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 1439 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_finish) = __pos;
# 1440 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1443 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __position);
# 1446 "/usr/include/c++/5/bits/stl_vector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1454 "/usr/include/c++/5/bits/stl_vector.h" 3
private: void _M_move_assign(vector &&__x, ::std::true_type) noexcept
# 1455 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1456 "/usr/include/c++/5/bits/stl_vector.h" 3
vector __tmp(get_allocator());
# 1457 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__tmp._M_impl)));
# 1458 "/usr/include/c++/5/bits/stl_vector.h" 3
((this->_M_impl)._M_swap_data((__x._M_impl)));
# 1459 "/usr/include/c++/5/bits/stl_vector.h" 3
::std::__alloc_on_move(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 1460 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1465 "/usr/include/c++/5/bits/stl_vector.h" 3
void _M_move_assign(vector &&__x, ::std::false_type)
# 1466 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1467 "/usr/include/c++/5/bits/stl_vector.h" 3
if ((__x._M_get_Tp_allocator()) == (this->_M_get_Tp_allocator())) {
# 1468 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_move_assign(::std::move(__x), ::std::true_type()); } else
# 1470 "/usr/include/c++/5/bits/stl_vector.h" 3
{
# 1473 "/usr/include/c++/5/bits/stl_vector.h" 3
(this->assign(::std::__make_move_if_noexcept_iterator(__x.begin()), ::std::__make_move_if_noexcept_iterator(__x.end())));
# 1475 "/usr/include/c++/5/bits/stl_vector.h" 3
__x.clear();
# 1476 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1477 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1481 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Up> _Up *
# 1483 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_data_ptr(_Up *__ptr) const
# 1484 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __ptr; }
# 1486 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Ptr> typename pointer_traits< _Ptr> ::element_type *
# 1488 "/usr/include/c++/5/bits/stl_vector.h" 3
_M_data_ptr(_Ptr __ptr) const
# 1489 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return (empty()) ? nullptr : ::std::__addressof(*__ptr); }
# 1496 "/usr/include/c++/5/bits/stl_vector.h" 3
};
# 1509 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1511 "/usr/include/c++/5/bits/stl_vector.h" 3
operator==(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1512 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return ((__x.size()) == (__y.size())) && std::equal((__x.begin()), (__x.end()), (__y.begin()));
# 1513 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1526 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1528 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1529 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return std::lexicographical_compare((__x.begin()), (__x.end()), (__y.begin()), (__y.end()));
# 1530 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 1533 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1535 "/usr/include/c++/5/bits/stl_vector.h" 3
operator!=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1536 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x == __y); }
# 1539 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1541 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1542 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return __y < __x; }
# 1545 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1547 "/usr/include/c++/5/bits/stl_vector.h" 3
operator<=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1548 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__y < __x); }
# 1551 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline bool
# 1553 "/usr/include/c++/5/bits/stl_vector.h" 3
operator>=(const vector< _Tp, _Alloc> &__x, const vector< _Tp, _Alloc> &__y)
# 1554 "/usr/include/c++/5/bits/stl_vector.h" 3
{ return !(__x < __y); }
# 1557 "/usr/include/c++/5/bits/stl_vector.h" 3
template< class _Tp, class _Alloc> inline void
# 1559 "/usr/include/c++/5/bits/stl_vector.h" 3
swap(vector< _Tp, _Alloc> &__x, vector< _Tp, _Alloc> &__y)
# 1560 "/usr/include/c++/5/bits/stl_vector.h" 3
{ (__x.swap(__y)); }
# 1563 "/usr/include/c++/5/bits/stl_vector.h" 3
}
# 63 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 67 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef unsigned long _Bit_type;
# 68 "/usr/include/c++/5/bits/stl_bvector.h" 3
enum { _S_word_bit = 64};
# 70 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_reference {
# 72 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 73 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type _M_mask;
# 75 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference(_Bit_type *__x, _Bit_type __y) : _M_p(__x), _M_mask(__y)
# 76 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 78 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference() noexcept : _M_p((0)), _M_mask((0)) { }
# 80 "/usr/include/c++/5/bits/stl_bvector.h" 3
operator bool() const noexcept
# 81 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(!((*(_M_p)) & (_M_mask))); }
# 84 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(bool __x) noexcept
# 85 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 86 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x) {
# 87 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) |= (_M_mask); } else {
# 89 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(_M_p)) &= (~(_M_mask)); }
# 90 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 91 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 94 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_reference &operator=(const _Bit_reference &__x) noexcept
# 95 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((*this) = ((bool)__x)); }
# 98 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_reference &__x) const
# 99 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((bool)(*this)) == ((bool)__x); }
# 102 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_reference &__x) const
# 103 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (!((bool)(*this))) && ((bool)__x); }
# 106 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip() noexcept
# 107 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ (*(_M_p)) ^= (_M_mask); }
# 108 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 112 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(_Bit_reference __x, _Bit_reference __y) noexcept
# 113 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 114 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 115 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 116 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 117 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 120 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(_Bit_reference __x, bool &__y) noexcept
# 121 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 122 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 123 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 124 "/usr/include/c++/5/bits/stl_bvector.h" 3
__y = __tmp;
# 125 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 128 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void swap(bool &__x, _Bit_reference __y) noexcept
# 129 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 130 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 131 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x = __y;
# 132 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 133 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 136 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator_base : public iterator< random_access_iterator_tag, bool> {
# 139 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_type *_M_p;
# 140 "/usr/include/c++/5/bits/stl_bvector.h" 3
unsigned _M_offset;
# 142 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator_base(_Bit_type *__x, unsigned __y) : _M_p(__x), _M_offset(__y)
# 143 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 146 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_up()
# 147 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 148 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)++) == (((int)_S_word_bit) - 1))
# 149 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 150 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (0);
# 151 "/usr/include/c++/5/bits/stl_bvector.h" 3
++(_M_p);
# 152 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 153 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 156 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_bump_down()
# 157 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 158 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_offset)--) == (0))
# 159 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 160 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (((int)_S_word_bit) - 1);
# 161 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 162 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 163 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 166 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_incr(ptrdiff_t __i)
# 167 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 168 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __n = __i + (_M_offset);
# 169 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_p) += (__n / ((int)_S_word_bit));
# 170 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n = (__n % ((int)_S_word_bit));
# 171 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n < (0))
# 172 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 173 "/usr/include/c++/5/bits/stl_bvector.h" 3
__n += ((int)_S_word_bit);
# 174 "/usr/include/c++/5/bits/stl_bvector.h" 3
--(_M_p);
# 175 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 176 "/usr/include/c++/5/bits/stl_bvector.h" 3
(_M_offset) = (static_cast< unsigned>(__n));
# 177 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 180 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator==(const _Bit_iterator_base &__i) const
# 181 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((_M_p) == (__i._M_p)) && ((_M_offset) == (__i._M_offset)); }
# 184 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<(const _Bit_iterator_base &__i) const
# 185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 186 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((_M_p) < (__i._M_p)) || (((_M_p) == (__i._M_p)) && ((_M_offset) < (__i._M_offset)));
# 188 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 191 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator!=(const _Bit_iterator_base &__i) const
# 192 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) == __i); }
# 195 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>(const _Bit_iterator_base &__i) const
# 196 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__i < (*this)); }
# 199 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator<=(const _Bit_iterator_base &__i) const
# 200 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !(__i < (*this)); }
# 203 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool operator>=(const _Bit_iterator_base &__i) const
# 204 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return !((*this) < __i); }
# 205 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 208 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline ptrdiff_t operator-(const _Bit_iterator_base &__x, const _Bit_iterator_base &__y)
# 209 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 210 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((((int)_S_word_bit) * ((__x._M_p) - (__y._M_p))) + (__x._M_offset)) - (__y._M_offset);
# 212 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 214 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_iterator : public _Bit_iterator_base {
# 216 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference reference;
# 217 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_reference *pointer;
# 218 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_iterator iterator;
# 220 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator() : _Bit_iterator_base(0, 0) { }
# 222 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 226 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_const_cast() const
# 227 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *this; }
# 230 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator*() const
# 231 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return reference(_M_p, 1UL << (_M_offset)); }
# 234 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator++()
# 235 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 236 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 237 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 238 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 241 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator++(int)
# 242 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 243 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 244 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 245 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 246 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 249 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator--()
# 250 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 251 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 252 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 253 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 256 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator--(int)
# 257 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 258 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 259 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 260 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 264 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator+=(difference_type __i)
# 265 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 266 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 267 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 268 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 271 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator &operator-=(difference_type __i)
# 272 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 273 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 274 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 275 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 278 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator+(difference_type __i) const
# 279 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 280 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 281 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 282 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 285 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator operator-(difference_type __i) const
# 286 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 287 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __tmp = *this;
# 288 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 289 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 292 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](difference_type __i) const
# 293 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 294 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 297 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_iterator operator+(ptrdiff_t __n, const _Bit_iterator &__x)
# 298 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 300 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bit_const_iterator : public _Bit_iterator_base {
# 302 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool reference;
# 303 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 304 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *pointer;
# 305 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Bit_const_iterator const_iterator;
# 307 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator() : _Bit_iterator_base(0, 0) { }
# 309 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(_Bit_type *__x, unsigned __y) : _Bit_iterator_base(__x, __y)
# 310 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 312 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_const_iterator(const _Bit_iterator &__x) : _Bit_iterator_base(__x._M_p, __x._M_offset)
# 313 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 316 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_iterator _M_const_cast() const
# 317 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_iterator(_M_p, _M_offset); }
# 320 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator*() const
# 321 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_reference(_M_p, 1UL << (_M_offset)); }
# 324 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator++()
# 325 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 326 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 327 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 328 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 331 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator++(int)
# 332 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 333 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 334 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_up();
# 335 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 336 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 339 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator--()
# 340 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 341 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 342 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 343 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 346 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator--(int)
# 347 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 348 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 349 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_bump_down();
# 350 "/usr/include/c++/5/bits/stl_bvector.h" 3
return __tmp;
# 351 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 354 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator+=(difference_type __i)
# 355 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 356 "/usr/include/c++/5/bits/stl_bvector.h" 3
this->_M_incr(__i);
# 357 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 358 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 361 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator &operator-=(difference_type __i)
# 362 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 363 "/usr/include/c++/5/bits/stl_bvector.h" 3
((*this) += (-__i));
# 364 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 365 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 368 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator+(difference_type __i) const
# 369 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 370 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 371 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp += __i);
# 372 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 375 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator operator-(difference_type __i) const
# 376 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 377 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator __tmp = *this;
# 378 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__tmp -= __i);
# 379 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 382 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](difference_type __i) const
# 383 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((*this) + __i))); }
# 384 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 387 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline _Bit_const_iterator operator+(ptrdiff_t __n, const _Bit_const_iterator &__x)
# 388 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (__x + __n); }
# 391 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void __fill_bvector(_Bit_iterator __first, _Bit_iterator __last, bool __x)
# 392 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 393 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last); (++__first)) {
# 394 "/usr/include/c++/5/bits/stl_bvector.h" 3
(((*__first)) = __x); }
# 395 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 398 "/usr/include/c++/5/bits/stl_bvector.h" 3
inline void fill(_Bit_iterator __first, _Bit_iterator __last, const bool &__x)
# 399 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 400 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((__first._M_p) != (__last._M_p))
# 401 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 402 "/usr/include/c++/5/bits/stl_bvector.h" 3
std::fill((__first._M_p) + 1, __last._M_p, __x ? ~0 : 0);
# 403 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, _Bit_iterator((__first._M_p) + 1, 0), __x);
# 404 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(_Bit_iterator(__last._M_p, 0), __last, __x);
# 405 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else {
# 407 "/usr/include/c++/5/bits/stl_bvector.h" 3
__fill_bvector(__first, __last, __x); }
# 408 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 410 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 411 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_base {
# 414 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other _Bit_alloc_type;
# 416 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> _Bit_alloc_traits;
# 417 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename __gnu_cxx::__alloc_traits< typename __gnu_cxx::__alloc_traits< _Alloc> ::template rebind< unsigned long> ::other> ::pointer _Bit_pointer;
# 419 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct _Bvector_impl : public _Bit_alloc_type {
# 422 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_start;
# 423 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_iterator _M_finish;
# 424 "/usr/include/c++/5/bits/stl_bvector.h" 3
typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _M_end_of_storage;
# 426 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl() : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(), _M_start(), _M_finish(), _M_end_of_storage()
# 428 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 430 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl(const typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type &__a) : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(__a), _M_start(), _M_finish(), _M_end_of_storage()
# 432 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 435 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_impl(typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type &&__a) : ::std::_Bvector_base< _Alloc> ::_Bit_alloc_type(::std::move(__a)), _M_start(), _M_finish(), _M_end_of_storage()
# 438 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 442 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *_M_end_addr() const noexcept
# 443 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 444 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_M_end_of_storage) {
# 445 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ::std::__addressof((_M_end_of_storage)[-1]) + 1; }
# 446 "/usr/include/c++/5/bits/stl_bvector.h" 3
return 0;
# 447 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 448 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 451 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 454 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_type &_M_get_Bit_allocator() noexcept
# 455 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< _Bit_alloc_type *>(&(this->_M_impl))); }
# 458 "/usr/include/c++/5/bits/stl_bvector.h" 3
const _Bit_alloc_type &_M_get_Bit_allocator() const noexcept
# 459 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return *(static_cast< const _Bit_alloc_type *>(&(this->_M_impl))); }
# 462 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const noexcept
# 463 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (allocator_type)this->_M_get_Bit_allocator(); }
# 465 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base() : _M_impl()
# 466 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 468 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base(const allocator_type &__a) : _M_impl(__a)
# 469 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 472 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bvector_base(_Bvector_base &&__x) noexcept : _M_impl(std::move(__x._M_get_Bit_allocator()))
# 474 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 475 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 476 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 477 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 478 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = _Bit_iterator();
# 479 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = _Bit_iterator();
# 480 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 481 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 484 "/usr/include/c++/5/bits/stl_bvector.h" 3
~_Bvector_base()
# 485 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ this->_M_deallocate(); }
# 488 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: _Bvector_impl _M_impl;
# 491 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer _M_allocate(size_t __n)
# 492 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Bit_alloc_traits::allocate(_M_impl, (_S_nword)(__n)); }
# 495 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_deallocate()
# 496 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 497 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((_M_impl)._M_start)._M_p)
# 498 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 499 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_t __n = ((_M_impl)._M_end_addr()) - (((_M_impl)._M_start)._M_p);
# 500 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::deallocate(_M_impl, ((_M_impl)._M_end_of_storage) - __n, __n);
# 503 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 504 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 507 "/usr/include/c++/5/bits/stl_bvector.h" 3
static size_t _S_nword(size_t __n)
# 508 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((__n + ((int)_S_word_bit)) - (1)) / ((int)_S_word_bit); }
# 509 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 512 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 517 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 540 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 541 "/usr/include/c++/5/bits/stl_bvector.h" 3
class vector< bool, _Alloc> : protected _Bvector_base< _Alloc> {
# 543 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bvector_base< _Alloc> _Base;
# 544 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_pointer _Bit_pointer;
# 545 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef typename ::std::_Bvector_base< _Alloc> ::_Bit_alloc_traits _Bit_alloc_traits;
# 548 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class > friend struct hash;
# 552 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: typedef bool value_type;
# 553 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::size_t size_type;
# 554 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::ptrdiff_t difference_type;
# 555 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference reference;
# 556 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef bool const_reference;
# 557 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_reference *pointer;
# 558 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef const bool *const_pointer;
# 559 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_iterator iterator;
# 560 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::_Bit_const_iterator const_iterator;
# 561 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_const_iterator> const_reverse_iterator;
# 562 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef ::std::reverse_iterator< ::std::_Bit_iterator> reverse_iterator;
# 563 "/usr/include/c++/5/bits/stl_bvector.h" 3
typedef _Alloc allocator_type;
# 565 "/usr/include/c++/5/bits/stl_bvector.h" 3
allocator_type get_allocator() const
# 566 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return _Base::get_allocator(); }
# 569 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: using ::std::_Bvector_base< _Alloc> ::_M_allocate;
# 570 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_deallocate;
# 571 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_S_nword;
# 572 "/usr/include/c++/5/bits/stl_bvector.h" 3
using ::std::_Bvector_base< _Alloc> ::_M_get_Bit_allocator;
# 575 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: vector() noexcept(is_nothrow_default_constructible< _Alloc> ::value) : _Base()
# 579 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 582 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(const allocator_type &__a) : _Base(__a)
# 583 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 587 "/usr/include/c++/5/bits/stl_bvector.h" 3
explicit vector(size_type __n, const allocator_type &__a = allocator_type()) : vector(__n, false, __a)
# 589 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 591 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(size_type __n, const bool &__value, const allocator_type &
# 592 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 594 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 595 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 596 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __value ? ~0 : 0);
# 598 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 611 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(const ::std::vector< bool, _Alloc> &__x) : _Base(_Bit_alloc_traits::_S_select_on_copy((__x._M_get_Bit_allocator())))
# 613 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 614 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 615 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), ((this->_M_impl)._M_start));
# 616 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 619 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::vector< bool, _Alloc> &&__x) noexcept : _Base(::std::move(__x))
# 620 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ }
# 622 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::vector< bool, _Alloc> &&__x, const allocator_type &__a) noexcept(_Bit_alloc_traits::_S_always_equal()) : _Base(__a)
# 625 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 626 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.get_allocator() == __a)
# 627 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 628 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 629 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 630 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 631 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = ::std::_Bit_iterator();
# 632 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = ::std::_Bit_iterator();
# 633 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 634 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 636 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 637 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 638 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 639 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x.clear();
# 640 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 641 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 643 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(const ::std::vector< bool, _Alloc> &__x, const allocator_type &__a) : _Base(__a)
# 645 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 646 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 647 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_copy_aligned(__x.begin(), __x.end(), ((this->_M_impl)._M_start));
# 648 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 650 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(::std::initializer_list< bool> __l, const allocator_type &
# 651 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 653 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 654 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(__l.begin(), __l.end(), ::std::random_access_iterator_tag());
# 656 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 660 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 661 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> >
# 662 "/usr/include/c++/5/bits/stl_bvector.h" 3
vector(_InputIterator __first, _InputIterator __last, const allocator_type &
# 663 "/usr/include/c++/5/bits/stl_bvector.h" 3
__a = allocator_type()) : _Base(__a)
# 665 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_initialize_dispatch(__first, __last, ::std::__false_type()); }
# 677 "/usr/include/c++/5/bits/stl_bvector.h" 3
~vector() noexcept { }
# 680 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(const ::std::vector< bool, _Alloc> &__x)
# 681 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 682 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((&__x) == this) {
# 683 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this; }
# 685 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_Bit_alloc_traits::_S_propagate_on_copy_assign())
# 686 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 687 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((this->_M_get_Bit_allocator()) != (__x._M_get_Bit_allocator()))
# 688 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 689 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 690 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_copy(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 692 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 693 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else {
# 695 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_copy(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator())); }
# 697 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 699 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.size() > capacity())
# 700 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 701 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 702 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 703 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 704 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 706 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 707 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 711 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(::std::vector< bool, _Alloc> &&__x) noexcept(_Bit_alloc_traits::_S_nothrow_move())
# 712 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 713 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (_Bit_alloc_traits::_S_propagate_on_move_assign() || ((this->_M_get_Bit_allocator()) == (__x._M_get_Bit_allocator())))
# 715 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 716 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 717 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = ((__x._M_impl)._M_start);
# 718 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = ((__x._M_impl)._M_finish);
# 719 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = ((__x._M_impl)._M_end_of_storage);
# 720 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_start) = ::std::_Bit_iterator();
# 721 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_finish) = ::std::_Bit_iterator();
# 722 "/usr/include/c++/5/bits/stl_bvector.h" 3
((__x._M_impl)._M_end_of_storage) = nullptr;
# 723 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::__alloc_on_move(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 725 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 727 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 728 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__x.size() > capacity())
# 729 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 730 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->_M_deallocate());
# 731 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__x.size());
# 732 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 733 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(__x.begin(), __x.end(), this->begin());
# 735 "/usr/include/c++/5/bits/stl_bvector.h" 3
__x.clear();
# 736 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 737 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 738 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 741 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::vector< bool, _Alloc> &operator=(::std::initializer_list< bool> __l)
# 742 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 743 "/usr/include/c++/5/bits/stl_bvector.h" 3
(this->assign(__l.begin(), __l.end()));
# 744 "/usr/include/c++/5/bits/stl_bvector.h" 3
return *this;
# 745 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 753 "/usr/include/c++/5/bits/stl_bvector.h" 3
void assign(size_type __n, const bool &__x)
# 754 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __x); }
# 757 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 758 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > void
# 760 "/usr/include/c++/5/bits/stl_bvector.h" 3
assign(_InputIterator __first, _InputIterator __last)
# 761 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_assign_dispatch(__first, __last, ::std::__false_type()); }
# 774 "/usr/include/c++/5/bits/stl_bvector.h" 3
void assign(::std::initializer_list< bool> __l)
# 775 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ (this->assign(__l.begin(), __l.end())); }
# 779 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator begin() noexcept
# 780 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 783 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator begin() const noexcept
# 784 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 787 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator end() noexcept
# 788 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 791 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator end() const noexcept
# 792 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 795 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rbegin() noexcept
# 796 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->end())); }
# 799 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rbegin() const noexcept
# 800 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 803 "/usr/include/c++/5/bits/stl_bvector.h" 3
reverse_iterator rend() noexcept
# 804 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((reverse_iterator)(this->begin())); }
# 807 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator rend() const noexcept
# 808 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 812 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator cbegin() const noexcept
# 813 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_start); }
# 816 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_iterator cend() const noexcept
# 817 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->_M_impl)._M_finish); }
# 820 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator crbegin() const noexcept
# 821 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->end())); }
# 824 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reverse_iterator crend() const noexcept
# 825 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((const_reverse_iterator)(this->begin())); }
# 829 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type size() const noexcept
# 830 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)(((this->end()) - (this->begin()))); }
# 833 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type max_size() const noexcept
# 834 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 835 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __isize = ((::__gnu_cxx::__numeric_traits_integer< long> ::__max - ((int)_S_word_bit)) + (1));
# 838 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __asize = _Bit_alloc_traits::max_size(_M_get_Bit_allocator());
# 840 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (__asize <= (__isize / ((int)_S_word_bit))) ? __asize * ((int)_S_word_bit) : __isize;
# 842 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 845 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type capacity() const noexcept
# 846 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (size_type)((const_iterator(((this->_M_impl)._M_end_addr()), 0) - (this->begin())));
# 847 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 850 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool empty() const noexcept
# 851 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return ((this->begin()) == (this->end())); }
# 854 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference operator[](size_type __n)
# 855 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 856 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 858 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 861 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference operator[](size_type __n) const
# 862 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 863 "/usr/include/c++/5/bits/stl_bvector.h" 3
return (*const_iterator((((this->_M_impl)._M_start)._M_p) + (__n / ((int)_S_word_bit)), __n % ((int)_S_word_bit)));
# 865 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 869 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: void _M_range_check(size_type __n) const
# 870 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 871 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n >= this->size()) {
# 872 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_out_of_range_fmt("vector<bool>::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)", __n, this->size()); }
# 876 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 880 "/usr/include/c++/5/bits/stl_bvector.h" 3
public: reference at(size_type __n)
# 881 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 884 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference at(size_type __n) const
# 885 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_range_check(__n); return (*this)[__n]; }
# 888 "/usr/include/c++/5/bits/stl_bvector.h" 3
void reserve(size_type __n)
# 889 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 890 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > max_size()) {
# 891 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error("vector::reserve"); }
# 892 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (capacity() < __n) {
# 893 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_reallocate(__n); }
# 894 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 897 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference front()
# 898 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 901 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference front() const
# 902 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(this->begin())); }
# 905 "/usr/include/c++/5/bits/stl_bvector.h" 3
reference back()
# 906 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 909 "/usr/include/c++/5/bits/stl_bvector.h" 3
const_reference back() const
# 910 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (*(((this->end()) - (1)))); }
# 918 "/usr/include/c++/5/bits/stl_bvector.h" 3
void data() noexcept { }
# 921 "/usr/include/c++/5/bits/stl_bvector.h" 3
void push_back(bool __x)
# 922 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 923 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) {
# 924 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 926 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(this->end(), __x); }
# 927 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 930 "/usr/include/c++/5/bits/stl_bvector.h" 3
void swap(::std::vector< bool, _Alloc> &__x) noexcept(_Bit_alloc_traits::_S_nothrow_swap())
# 934 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 935 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_start), ((__x._M_impl)._M_start));
# 936 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_finish), ((__x._M_impl)._M_finish));
# 937 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::swap(((this->_M_impl)._M_end_of_storage), ((__x._M_impl)._M_end_of_storage));
# 939 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_alloc_traits::_S_on_swap(_M_get_Bit_allocator(), (__x._M_get_Bit_allocator()));
# 941 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 945 "/usr/include/c++/5/bits/stl_bvector.h" 3
static void swap(reference __x, reference __y) noexcept
# 946 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 947 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool __tmp = __x;
# 948 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__x = __y);
# 949 "/usr/include/c++/5/bits/stl_bvector.h" 3
(__y = __tmp);
# 950 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 954 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __position, const bool &__x = ((bool)0))
# 958 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 959 "/usr/include/c++/5/bits/stl_bvector.h" 3
const difference_type __n = (__position - (this->begin()));
# 960 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr())) && (__position == (this->end()))) {
# 962 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*(((this->_M_impl)._M_finish)++)) = __x; } else {
# 964 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_aux(__position._M_const_cast(), __x); }
# 965 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __n);
# 966 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 969 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator, class
# 970 "/usr/include/c++/5/bits/stl_bvector.h" 3
 = ::std::_RequireInputIter< _InputIterator> > iterator
# 972 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(const_iterator __position, _InputIterator
# 973 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last)
# 974 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 975 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __offset = __position - cbegin();
# 976 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(__position._M_const_cast(), __first, __last, ::std::__false_type());
# 978 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __offset);
# 979 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 993 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __position, size_type __n, const bool &__x)
# 994 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 995 "/usr/include/c++/5/bits/stl_bvector.h" 3
difference_type __offset = __position - cbegin();
# 996 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_fill_insert(__position._M_const_cast(), __n, __x);
# 997 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((this->begin()) + __offset);
# 998 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1007 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator insert(const_iterator __p, ::std::initializer_list< bool> __l)
# 1008 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return (this->insert(__p, __l.begin(), __l.end())); }
# 1012 "/usr/include/c++/5/bits/stl_bvector.h" 3
void pop_back()
# 1013 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ --((this->_M_impl)._M_finish); }
# 1017 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(const_iterator __position)
# 1021 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__position._M_const_cast()); }
# 1025 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator erase(const_iterator __first, const_iterator __last)
# 1029 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return this->_M_erase(__first._M_const_cast(), __last._M_const_cast()); }
# 1032 "/usr/include/c++/5/bits/stl_bvector.h" 3
void resize(size_type __new_size, bool __x = ((bool)0))
# 1033 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1034 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__new_size < size()) {
# 1035 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + ((difference_type)__new_size))); } else {
# 1037 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __new_size - size(), __x); }
# 1038 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1042 "/usr/include/c++/5/bits/stl_bvector.h" 3
void shrink_to_fit()
# 1043 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_shrink_to_fit(); }
# 1047 "/usr/include/c++/5/bits/stl_bvector.h" 3
void flip() noexcept
# 1048 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1049 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *const __end = ((this->_M_impl)._M_end_addr());
# 1050 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (::std::_Bit_type *__p = ((((this->_M_impl)._M_start)._M_p)); __p != __end; ++__p) {
# 1051 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__p) = (~(*__p)); }
# 1052 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1055 "/usr/include/c++/5/bits/stl_bvector.h" 3
void clear() noexcept
# 1056 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_erase_at_end(this->begin()); }
# 1059 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class ..._Args> void
# 1061 "/usr/include/c++/5/bits/stl_bvector.h" 3
emplace_back(_Args &&...__args)
# 1062 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ push_back(bool(__args...)); }
# 1064 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class ..._Args> iterator
# 1066 "/usr/include/c++/5/bits/stl_bvector.h" 3
emplace(const_iterator __pos, _Args &&...__args)
# 1067 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ return insert(__pos, bool(__args...)); }
# 1073 "/usr/include/c++/5/bits/stl_bvector.h" 3
protected: iterator _M_copy_aligned(const_iterator __first, const_iterator __last, iterator
# 1074 "/usr/include/c++/5/bits/stl_bvector.h" 3
__result)
# 1075 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1076 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::_Bit_type *__q = std::copy(__first._M_p, __last._M_p, __result._M_p);
# 1077 "/usr/include/c++/5/bits/stl_bvector.h" 3
return std::copy(const_iterator(__last._M_p, 0), __last, iterator(__q, 0));
# 1079 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1082 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_initialize(size_type __n)
# 1083 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1084 "/usr/include/c++/5/bits/stl_bvector.h" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 1085 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 1086 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_start) = iterator(::std::__addressof(*__q), 0);
# 1087 "/usr/include/c++/5/bits/stl_bvector.h" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + ((difference_type)__n));
# 1088 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1091 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_reallocate(size_type __n);
# 1095 "/usr/include/c++/5/bits/stl_bvector.h" 3
bool _M_shrink_to_fit();
# 1102 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1104 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_Integer __n, _Integer __x, ::std::__true_type)
# 1105 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1106 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(static_cast< size_type>(__n));
# 1107 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), (__x) ? ~0 : 0);
# 1109 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1111 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1113 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1115 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_initialize_range(__first, __last, ::std::__iterator_category(__first));
# 1116 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1118 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1120 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1122 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1123 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first) {
# 1124 "/usr/include/c++/5/bits/stl_bvector.h" 3
push_back(*__first); }
# 1125 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1127 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1129 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize_range(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1131 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1132 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __n = ::std::distance(__first, __last);
# 1133 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_initialize(__n);
# 1134 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __last, ((this->_M_impl)._M_start));
# 1135 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1139 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1141 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_Integer __n, _Integer __val, ::std::__true_type)
# 1142 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_assign(__n, __val); }
# 1144 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1146 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_dispatch(_InputIterator __first, _InputIterator __last, ::std::__false_type)
# 1148 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_assign_aux(__first, __last, ::std::__iterator_category(__first)); }
# 1151 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_assign(::std::size_t __n, bool __x)
# 1152 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1153 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__n > size())
# 1154 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1155 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1157 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __n - size(), __x);
# 1158 "/usr/include/c++/5/bits/stl_bvector.h" 3
} else
# 1160 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1161 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(((this->begin()) + __n));
# 1162 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::fill((((this->_M_impl)._M_start)._M_p), ((this->_M_impl)._M_end_addr()), __x ? ~0 : 0);
# 1164 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1165 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1167 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1169 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 1171 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1172 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator __cur = this->begin();
# 1173 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; (__first != __last) && (__cur != (this->end())); (++__cur), (++__first)) {
# 1174 "/usr/include/c++/5/bits/stl_bvector.h" 3
(*__cur) = (*__first); }
# 1175 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__first == __last) {
# 1176 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(__cur); } else {
# 1178 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __first, __last); }
# 1179 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1181 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void
# 1183 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 1185 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1186 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = ::std::distance(__first, __last);
# 1187 "/usr/include/c++/5/bits/stl_bvector.h" 3
if (__len < size()) {
# 1188 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_erase_at_end(::std::copy(__first, __last, this->begin())); } else
# 1190 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1191 "/usr/include/c++/5/bits/stl_bvector.h" 3
_ForwardIterator __mid = __first;
# 1192 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::advance(__mid, size());
# 1193 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::copy(__first, __mid, this->begin());
# 1194 "/usr/include/c++/5/bits/stl_bvector.h" 3
insert(this->end(), __mid, __last);
# 1195 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1196 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1202 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Integer> void
# 1204 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __x, ::std::__true_type)
# 1206 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_fill_insert(__pos, __n, __x); }
# 1208 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1210 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_dispatch(iterator __pos, _InputIterator
# 1211 "/usr/include/c++/5/bits/stl_bvector.h" 3
__first, _InputIterator __last, ::std::__false_type)
# 1213 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ _M_insert_range(__pos, __first, __last, ::std::__iterator_category(__first));
# 1214 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1217 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_fill_insert(iterator __position, size_type __n, bool __x);
# 1219 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _InputIterator> void
# 1221 "/usr/include/c++/5/bits/stl_bvector.h" 3
_M_insert_range(iterator __pos, _InputIterator __first, _InputIterator
# 1222 "/usr/include/c++/5/bits/stl_bvector.h" 3
__last, ::std::input_iterator_tag)
# 1223 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1224 "/usr/include/c++/5/bits/stl_bvector.h" 3
for (; __first != __last; ++__first)
# 1225 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1226 "/usr/include/c++/5/bits/stl_bvector.h" 3
__pos = insert(__pos, *__first);
# 1227 "/usr/include/c++/5/bits/stl_bvector.h" 3
(++__pos);
# 1228 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1229 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1231 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _ForwardIterator> void _M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag);
# 1237 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_insert_aux(iterator __position, bool __x);
# 1240 "/usr/include/c++/5/bits/stl_bvector.h" 3
size_type _M_check_len(size_type __n, const char *__s) const
# 1241 "/usr/include/c++/5/bits/stl_bvector.h" 3
{
# 1242 "/usr/include/c++/5/bits/stl_bvector.h" 3
if ((max_size() - size()) < __n) {
# 1243 "/usr/include/c++/5/bits/stl_bvector.h" 3
__throw_length_error(__s); }
# 1245 "/usr/include/c++/5/bits/stl_bvector.h" 3
const size_type __len = size() + ::std::max(size(), __n);
# 1246 "/usr/include/c++/5/bits/stl_bvector.h" 3
return ((__len < size()) || (__len > max_size())) ? max_size() : __len;
# 1247 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1250 "/usr/include/c++/5/bits/stl_bvector.h" 3
void _M_erase_at_end(iterator __pos)
# 1251 "/usr/include/c++/5/bits/stl_bvector.h" 3
{ ((this->_M_impl)._M_finish) = __pos; }
# 1254 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __pos);
# 1257 "/usr/include/c++/5/bits/stl_bvector.h" 3
iterator _M_erase(iterator __first, iterator __last);
# 1258 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 1261 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 1267 "/usr/include/c++/5/bits/stl_bvector.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1273 "/usr/include/c++/5/bits/stl_bvector.h" 3
template< class _Alloc>
# 1274 "/usr/include/c++/5/bits/stl_bvector.h" 3
struct hash< vector< bool, _Alloc> > : public __hash_base< unsigned long, vector< bool, _Alloc> > {
# 1278 "/usr/include/c++/5/bits/stl_bvector.h" 3
::std::size_t operator()(const vector< bool, _Alloc> &) const noexcept;
# 1279 "/usr/include/c++/5/bits/stl_bvector.h" 3
};
# 1282 "/usr/include/c++/5/bits/stl_bvector.h" 3
}
# 59 "/usr/include/c++/5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 66 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::reserve(size_type __n)
# 67 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 68 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > this->max_size()) {
# 69 "/usr/include/c++/5/bits/vector.tcc" 3
__throw_length_error("vector::reserve"); }
# 70 "/usr/include/c++/5/bits/vector.tcc" 3
if (this->capacity() < __n)
# 71 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 72 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __old_size = size();
# 73 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__n, ::std::__make_move_if_noexcept_iterator(((this->_M_impl)._M_start)), ::std::__make_move_if_noexcept_iterator(((this->_M_impl)._M_finish)));
# 76 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 78 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 81 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 82 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (__tmp + __old_size);
# 83 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __n);
# 84 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 85 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 88 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 89 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 92 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::emplace_back(_Args &&...__args)
# 93 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 94 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 95 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 96 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::forward< _Args> (__args)...);
# 98 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 99 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 101 "/usr/include/c++/5/bits/vector.tcc" 3
_M_emplace_back_aux(::std::forward< _Args> (__args)...); }
# 102 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 105 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 109 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::insert(const_iterator __position, const value_type &__x)
# 113 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 114 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 115 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 117 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 118 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), __x);
# 119 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 120 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 122 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 124 "/usr/include/c++/5/bits/vector.tcc" 3
const auto __pos = this->begin() + (__position - cbegin());
# 125 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 126 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 127 "/usr/include/c++/5/bits/vector.tcc" 3
_Tp __x_copy = __x;
# 128 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(__pos, ::std::move(__x_copy));
# 129 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 131 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(__pos, __x); }
# 135 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 136 "/usr/include/c++/5/bits/vector.tcc" 3
return ((iterator)(((this->_M_impl)._M_start) + __n));
# 137 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 139 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 142 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __position)
# 143 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 144 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__position + 1) != this->end()) {
# 145 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move(__position + 1, this->end(), __position); }
# 146 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 147 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), ((this->_M_impl)._M_finish));
# 148 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 149 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 151 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> typename vector< _Tp, _Alloc> ::iterator
# 154 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 155 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 156 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 157 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 158 "/usr/include/c++/5/bits/vector.tcc" 3
if (__last != this->end()) {
# 159 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move(__last, this->end(), __first); }
# 160 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end((__first.base()) + (this->end() - __last));
# 161 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 162 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 163 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 165 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> vector< _Tp, _Alloc> &
# 168 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::operator=(const vector &__x)
# 169 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 170 "/usr/include/c++/5/bits/vector.tcc" 3
if ((&__x) != this)
# 171 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 173 "/usr/include/c++/5/bits/vector.tcc" 3
if (_Alloc_traits::_S_propagate_on_copy_assign())
# 174 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 175 "/usr/include/c++/5/bits/vector.tcc" 3
if ((!_Alloc_traits::_S_always_equal()) && (_M_get_Tp_allocator() != (__x._M_get_Tp_allocator())))
# 177 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 179 "/usr/include/c++/5/bits/vector.tcc" 3
this->clear();
# 180 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 183 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = nullptr;
# 184 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = nullptr;
# 185 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = nullptr;
# 186 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 187 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__alloc_on_copy(_M_get_Tp_allocator(), (__x._M_get_Tp_allocator()));
# 189 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 191 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __xlen = __x.size();
# 192 "/usr/include/c++/5/bits/vector.tcc" 3
if (__xlen > capacity())
# 193 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 194 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(), __x.end());
# 196 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 198 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 201 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 202 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (((this->_M_impl)._M_start) + __xlen);
# 203 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 204 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __xlen)
# 205 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 206 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(::std::copy(__x.begin(), __x.end(), this->begin()), this->end(), _M_get_Tp_allocator());
# 208 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 210 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 211 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(((__x._M_impl)._M_start), ((__x._M_impl)._M_start) + size(), ((this->_M_impl)._M_start));
# 213 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(((__x._M_impl)._M_start) + size(), ((__x._M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 217 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 218 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __xlen);
# 219 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 220 "/usr/include/c++/5/bits/vector.tcc" 3
return *this;
# 221 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 223 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 226 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_assign(::std::size_t __n, const value_type &__val)
# 227 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 228 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > capacity())
# 229 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 230 "/usr/include/c++/5/bits/vector.tcc" 3
vector __tmp(__n, __val, _M_get_Tp_allocator());
# 231 "/usr/include/c++/5/bits/vector.tcc" 3
((__tmp._M_impl)._M_swap_data((this->_M_impl)));
# 232 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 233 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n > size())
# 234 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 235 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill(this->begin(), this->end(), __val);
# 236 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - size(), __val, _M_get_Tp_allocator());
# 240 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 242 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::fill_n(((this->_M_impl)._M_start), __n, __val)); } }
# 243 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 245 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 246 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 249 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_InputIterator __first, _InputIterator __last, ::std::input_iterator_tag)
# 251 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 252 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __cur(((this->_M_impl)._M_start));
# 253 "/usr/include/c++/5/bits/vector.tcc" 3
for (; (__first != __last) && (__cur != ((this->_M_impl)._M_finish)); (++__cur), (++__first)) {
# 255 "/usr/include/c++/5/bits/vector.tcc" 3
(*__cur) = (*__first); }
# 256 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first == __last) {
# 257 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(__cur); } else {
# 259 "/usr/include/c++/5/bits/vector.tcc" 3
insert(this->end(), __first, __last); }
# 260 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 262 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 263 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 266 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last, ::std::forward_iterator_tag)
# 268 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 269 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = ::std::distance(__first, __last);
# 271 "/usr/include/c++/5/bits/vector.tcc" 3
if (__len > capacity())
# 272 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 273 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
# 274 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 276 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 279 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __tmp;
# 280 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = (((this->_M_impl)._M_start) + __len);
# 281 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = ((this->_M_impl)._M_finish);
# 282 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 283 "/usr/include/c++/5/bits/vector.tcc" 3
if (size() >= __len) {
# 284 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__first, __last, ((this->_M_impl)._M_start))); } else
# 286 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 287 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 288 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, size());
# 289 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, ((this->_M_impl)._M_start));
# 290 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 294 "/usr/include/c++/5/bits/vector.tcc" 3
} }
# 295 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 298 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 299 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> typename vector< _Tp, _Alloc> ::iterator
# 302 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::emplace(const_iterator __position, _Args &&...__args)
# 303 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 304 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = __position - this->begin();
# 305 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage)) && (__position == this->end()))
# 307 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 308 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::forward< _Args> (__args)...);
# 310 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 311 "/usr/include/c++/5/bits/vector.tcc" 3
} else {
# 313 "/usr/include/c++/5/bits/vector.tcc" 3
_M_insert_aux(this->begin() + (__position - cbegin()), ::std::forward< _Args> (__args)...); }
# 315 "/usr/include/c++/5/bits/vector.tcc" 3
return ((iterator)(((this->_M_impl)._M_start) + __n));
# 316 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 318 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 319 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 322 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_insert_aux(iterator __position, _Args &&...__args)
# 329 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 330 "/usr/include/c++/5/bits/vector.tcc" 3
if (((this->_M_impl)._M_finish) != ((this->_M_impl)._M_end_of_storage))
# 331 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 332 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), ((this->_M_impl)._M_finish), ::std::move(*(((this->_M_impl)._M_finish) - 1)));
# 335 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 339 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), ((this->_M_impl)._M_finish) - 2, ((this->_M_impl)._M_finish) - 1);
# 345 "/usr/include/c++/5/bits/vector.tcc" 3
(*__position) = (_Tp(::std::forward< _Args> (__args)...));
# 347 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 349 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 350 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_insert_aux");
# 352 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 353 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 354 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 355 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 356 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 361 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + __elems_before, ::std::forward< _Args> (__args)...);
# 368 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 370 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 375 "/usr/include/c++/5/bits/vector.tcc" 3
++__new_finish;
# 377 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 381 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 382 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 383 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 384 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 385 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + __elems_before); } else {
# 388 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 389 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 390 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 391 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 392 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 394 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 397 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 398 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 399 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 400 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 401 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 404 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 405 "/usr/include/c++/5/bits/vector.tcc" 3
template< class ..._Args> void
# 408 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_emplace_back_aux(_Args &&...__args)
# 409 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 410 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector::_M_emplace_back_aux");
# 412 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 413 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 414 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 415 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 416 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::construct((this->_M_impl), __new_start + size(), ::std::forward< _Args> (__args)...);
# 418 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 420 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), __new_start, _M_get_Tp_allocator());
# 425 "/usr/include/c++/5/bits/vector.tcc" 3
++__new_finish;
# 426 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 427 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 428 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 429 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 430 "/usr/include/c++/5/bits/vector.tcc" 3
_Alloc_traits::destroy((this->_M_impl), __new_start + size()); } else {
# 432 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 433 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 434 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 435 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 436 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 438 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 441 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 442 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 443 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 444 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 447 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 450 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, const value_type &__x)
# 451 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 452 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n != (0))
# 453 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 454 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 456 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 457 "/usr/include/c++/5/bits/vector.tcc" 3
value_type __x_copy = __x;
# 458 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 459 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 460 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 461 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 462 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 466 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 467 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), __old_finish - __n, __old_finish);
# 469 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), (__position.base()) + __n, __x_copy);
# 471 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 473 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 474 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_fill_n_a(((this->_M_impl)._M_finish), __n - __elems_after, __x_copy, _M_get_Tp_allocator());
# 479 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 482 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 483 "/usr/include/c++/5/bits/vector.tcc" 3
::std::fill((__position.base()), __old_finish, __x_copy);
# 484 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 485 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 487 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 488 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_fill_insert");
# 490 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_before = __position - this->begin();
# 491 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 492 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 493 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 494 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 496 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_fill_n_a(__new_start + __elems_before, __n, __x, _M_get_Tp_allocator());
# 499 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = pointer();
# 501 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 506 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish += __n;
# 508 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 512 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 513 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 514 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 515 "/usr/include/c++/5/bits/vector.tcc" 3
if (!__new_finish) {
# 516 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start + __elems_before, (__new_start + __elems_before) + __n, _M_get_Tp_allocator()); } else {
# 520 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator()); }
# 522 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 523 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 524 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 525 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 527 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 530 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 531 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 532 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 533 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 534 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 535 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 538 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> void
# 541 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_default_append(size_type __n)
# 542 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 543 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n != (0))
# 544 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 545 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 547 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 548 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::__uninitialized_default_n_a(((this->_M_impl)._M_finish), __n, _M_get_Tp_allocator());
# 551 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 553 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 554 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_default_append");
# 556 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __old_size = this->size();
# 557 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 558 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 559 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 560 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 561 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), __new_start, _M_get_Tp_allocator());
# 565 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_default_n_a(__new_finish, __n, _M_get_Tp_allocator());
# 568 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 569 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 570 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 571 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 573 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 574 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 575 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 576 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 578 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 581 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 582 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 583 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 584 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 585 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 586 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 588 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc> bool
# 591 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_shrink_to_fit()
# 592 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 593 "/usr/include/c++/5/bits/vector.tcc" 3
if (capacity() == size()) {
# 594 "/usr/include/c++/5/bits/vector.tcc" 3
return false; }
# 595 "/usr/include/c++/5/bits/vector.tcc" 3
return std::__shrink_to_fit_aux< vector> ::_S_do_it(*this);
# 596 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 599 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 600 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _InputIterator> void
# 603 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __pos, _InputIterator __first, _InputIterator
# 604 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::input_iterator_tag)
# 605 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 606 "/usr/include/c++/5/bits/vector.tcc" 3
for (; __first != __last; ++__first)
# 607 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 608 "/usr/include/c++/5/bits/vector.tcc" 3
__pos = insert(__pos, *__first);
# 609 "/usr/include/c++/5/bits/vector.tcc" 3
++__pos;
# 610 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 611 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 613 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Tp, class _Alloc>
# 614 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 617 "/usr/include/c++/5/bits/vector.tcc" 3
vector< _Tp, _Alloc> ::_M_range_insert(iterator __position, _ForwardIterator __first, _ForwardIterator
# 618 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 619 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 620 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 621 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 622 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __n = ::std::distance(__first, __last);
# 623 "/usr/include/c++/5/bits/vector.tcc" 3
if (((size_type)(((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_finish))) >= __n)
# 625 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 626 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __elems_after = this->end() - __position;
# 627 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __old_finish(((this->_M_impl)._M_finish));
# 628 "/usr/include/c++/5/bits/vector.tcc" 3
if (__elems_after > __n)
# 629 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 630 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a(((this->_M_impl)._M_finish) - __n, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 634 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __n;
# 635 "/usr/include/c++/5/bits/vector.tcc" 3
::std::move_backward((__position.base()), __old_finish - __n, __old_finish);
# 637 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 638 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 640 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 641 "/usr/include/c++/5/bits/vector.tcc" 3
_ForwardIterator __mid = __first;
# 642 "/usr/include/c++/5/bits/vector.tcc" 3
::std::advance(__mid, __elems_after);
# 643 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_copy_a(__mid, __last, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 646 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += (__n - __elems_after);
# 647 "/usr/include/c++/5/bits/vector.tcc" 3
::std::__uninitialized_move_a((__position.base()), __old_finish, ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 651 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += __elems_after;
# 652 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __mid, __position);
# 653 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 654 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 656 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 657 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector::_M_range_insert");
# 659 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_start((this->_M_allocate(__len)));
# 660 "/usr/include/c++/5/bits/vector.tcc" 3
pointer __new_finish(__new_start);
# 661 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 662 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 663 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a(((this->_M_impl)._M_start), (__position.base()), __new_start, _M_get_Tp_allocator());
# 667 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_copy_a(__first, __last, __new_finish, _M_get_Tp_allocator());
# 671 "/usr/include/c++/5/bits/vector.tcc" 3
__new_finish = ::std::__uninitialized_move_if_noexcept_a((__position.base()), ((this->_M_impl)._M_finish), __new_finish, _M_get_Tp_allocator());
# 675 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 676 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 677 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 678 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
# 680 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(__new_start, __len);
# 681 "/usr/include/c++/5/bits/vector.tcc" 3
throw;
# 682 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 683 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Destroy(((this->_M_impl)._M_start), ((this->_M_impl)._M_finish), _M_get_Tp_allocator());
# 685 "/usr/include/c++/5/bits/vector.tcc" 3
_M_deallocate(((this->_M_impl)._M_start), ((this->_M_impl)._M_end_of_storage) - ((this->_M_impl)._M_start));
# 688 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __new_start;
# 689 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = __new_finish;
# 690 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__new_start + __len);
# 691 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 692 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 693 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 697 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 700 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_reallocate(size_type __n)
# 701 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 702 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__n));
# 703 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 704 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = _M_copy_aligned(this->begin(), this->end(), __start);
# 705 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 706 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 707 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__n));
# 708 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 710 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 713 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_fill_insert(iterator __position, size_type __n, bool __x)
# 714 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 715 "/usr/include/c++/5/bits/vector.tcc" 3
if (__n == (0)) {
# 716 "/usr/include/c++/5/bits/vector.tcc" 3
return; }
# 717 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 718 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 719 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 721 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__position, (__position + ((difference_type)__n)), __x);
# 722 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 723 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 725 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 726 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_fill_insert");
# 728 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 729 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 730 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 731 "/usr/include/c++/5/bits/vector.tcc" 3
std::fill(__i, (__i + ((difference_type)__n)), __x);
# 732 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), (__i + ((difference_type)__n)));
# 734 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 735 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 736 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 737 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 738 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 740 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc>
# 741 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _ForwardIterator> void
# 744 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_range(iterator __position, _ForwardIterator __first, _ForwardIterator
# 745 "/usr/include/c++/5/bits/vector.tcc" 3
__last, ::std::forward_iterator_tag)
# 746 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 747 "/usr/include/c++/5/bits/vector.tcc" 3
if (__first != __last)
# 748 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 749 "/usr/include/c++/5/bits/vector.tcc" 3
size_type __n = ::std::distance(__first, __last);
# 750 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) >= __n)
# 751 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 752 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, this->end(), ((this->_M_impl)._M_finish) + ((difference_type)__n));
# 755 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy(__first, __last, __position);
# 756 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) += ((difference_type)__n);
# 757 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 759 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 760 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len(__n, "vector<bool>::_M_insert_range");
# 762 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 763 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 764 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 765 "/usr/include/c++/5/bits/vector.tcc" 3
__i = ::std::copy(__first, __last, __i);
# 766 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 767 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 768 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 769 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 770 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 771 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 772 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 774 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> void
# 777 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_insert_aux(iterator __position, bool __x)
# 778 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 779 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((this->_M_impl)._M_finish)._M_p) != ((this->_M_impl)._M_end_addr()))
# 780 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 781 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy_backward(__position, ((this->_M_impl)._M_finish), ((this->_M_impl)._M_finish) + 1);
# 783 "/usr/include/c++/5/bits/vector.tcc" 3
(((*__position)) = __x);
# 784 "/usr/include/c++/5/bits/vector.tcc" 3
++((this->_M_impl)._M_finish);
# 785 "/usr/include/c++/5/bits/vector.tcc" 3
} else
# 787 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 788 "/usr/include/c++/5/bits/vector.tcc" 3
const size_type __len = _M_check_len((size_type)1, "vector<bool>::_M_insert_aux");
# 790 "/usr/include/c++/5/bits/vector.tcc" 3
_Bit_pointer __q = (this->_M_allocate(__len));
# 791 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __start(::std::__addressof(*__q), 0);
# 792 "/usr/include/c++/5/bits/vector.tcc" 3
iterator __i = _M_copy_aligned(this->begin(), __position, __start);
# 793 "/usr/include/c++/5/bits/vector.tcc" 3
(((*(__i++))) = __x);
# 794 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_finish) = ::std::copy(__position, this->end(), __i);
# 795 "/usr/include/c++/5/bits/vector.tcc" 3
(this->_M_deallocate());
# 796 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_end_of_storage) = (__q + _S_nword(__len));
# 797 "/usr/include/c++/5/bits/vector.tcc" 3
((this->_M_impl)._M_start) = __start;
# 798 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 799 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 801 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 804 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __position)
# 805 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 806 "/usr/include/c++/5/bits/vector.tcc" 3
if ((((__position + (1))) != (this->end()))) {
# 807 "/usr/include/c++/5/bits/vector.tcc" 3
::std::copy((__position + (1)), this->end(), __position); }
# 808 "/usr/include/c++/5/bits/vector.tcc" 3
--((this->_M_impl)._M_finish);
# 809 "/usr/include/c++/5/bits/vector.tcc" 3
return __position;
# 810 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 812 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> typename vector< bool, _Alloc> ::iterator
# 815 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_erase(iterator __first, iterator __last)
# 816 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 817 "/usr/include/c++/5/bits/vector.tcc" 3
if ((__first != __last)) {
# 818 "/usr/include/c++/5/bits/vector.tcc" 3
_M_erase_at_end(::std::copy(__last, this->end(), __first)); }
# 819 "/usr/include/c++/5/bits/vector.tcc" 3
return __first;
# 820 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 823 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> bool
# 826 "/usr/include/c++/5/bits/vector.tcc" 3
vector< bool, _Alloc> ::_M_shrink_to_fit()
# 827 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 828 "/usr/include/c++/5/bits/vector.tcc" 3
if ((capacity() - size()) < ((int)_S_word_bit)) {
# 829 "/usr/include/c++/5/bits/vector.tcc" 3
return false; }
# 830 "/usr/include/c++/5/bits/vector.tcc" 3
try
# 831 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 832 "/usr/include/c++/5/bits/vector.tcc" 3
_M_reallocate(size());
# 833 "/usr/include/c++/5/bits/vector.tcc" 3
return true;
# 834 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 835 "/usr/include/c++/5/bits/vector.tcc" 3
catch (...)
# 836 "/usr/include/c++/5/bits/vector.tcc" 3
{ return false; }
# 837 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 841 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 845 "/usr/include/c++/5/bits/vector.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 849 "/usr/include/c++/5/bits/vector.tcc" 3
template< class _Alloc> size_t
# 852 "/usr/include/c++/5/bits/vector.tcc" 3
hash< vector< bool, _Alloc> > ::operator()(const vector< bool, _Alloc> &__b) const noexcept
# 853 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 854 "/usr/include/c++/5/bits/vector.tcc" 3
::std::size_t __hash = (0);
# 855 "/usr/include/c++/5/bits/vector.tcc" 3
using ::std::_S_word_bit;
# 856 "/usr/include/c++/5/bits/vector.tcc" 3
using ::std::_Bit_type;
# 858 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __words = (__b.size()) / _S_word_bit;
# 859 "/usr/include/c++/5/bits/vector.tcc" 3
if (__words)
# 860 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 861 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __clength = (__words * sizeof(::std::_Bit_type));
# 862 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = ::std::_Hash_impl::hash((((__b._M_impl)._M_start)._M_p), __clength);
# 863 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 865 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __extrabits = (__b.size()) % _S_word_bit;
# 866 "/usr/include/c++/5/bits/vector.tcc" 3
if (__extrabits)
# 867 "/usr/include/c++/5/bits/vector.tcc" 3
{
# 868 "/usr/include/c++/5/bits/vector.tcc" 3
::std::_Bit_type __hiword = *(((__b._M_impl)._M_finish)._M_p);
# 869 "/usr/include/c++/5/bits/vector.tcc" 3
__hiword &= (~((~(static_cast< ::std::_Bit_type>(0))) << __extrabits));
# 871 "/usr/include/c++/5/bits/vector.tcc" 3
const ::std::size_t __clength = (((__extrabits + (8)) - (1)) / (8));
# 873 "/usr/include/c++/5/bits/vector.tcc" 3
if (__words) {
# 874 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = std::_Hash_impl::hash(&__hiword, __clength, __hash); } else {
# 876 "/usr/include/c++/5/bits/vector.tcc" 3
__hash = std::_Hash_impl::hash(&__hiword, __clength); }
# 877 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 879 "/usr/include/c++/5/bits/vector.tcc" 3
return __hash;
# 880 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 883 "/usr/include/c++/5/bits/vector.tcc" 3
}
# 8 "Kernel.h"

# 8 "Kernel.h"
using namespace std;
# 9 "Kernel.h"
using namespace std::chrono;
# 20 "Kernel.h"
unsigned get_conflicts(int * combination, int combination_size);
# 21 "Kernel.h"
void warmGPU();
# 22 "Kernel.h"
void setDevice(int i);
# 23 "Kernel.h"
int getDevice();
# 10 "Kernel.cu"
void Ker_Warm() ;
# 16 "Kernel.cu"
void Ker_Check_Combination(int *
# 17 "Kernel.cu"
d_combination, int
# 18 "Kernel.cu"
combination_size, unsigned *
# 19 "Kernel.cu"
d_result) ;
# 46 "Kernel.cu"
void setDevice(int i)
# 47 "Kernel.cu"
{
# 48 "Kernel.cu"
check(cudaSetDevice(i), "cudaSetDevice( i )", "Kernel.cu", 48);
# 49 "Kernel.cu"
}
# 50 "Kernel.cu"
int getDevice()
# 51 "Kernel.cu"
{
# 52 "Kernel.cu"
int id = (-1);
# 53 "Kernel.cu"
check(cudaGetDevice(&id), "cudaGetDevice( &id )", "Kernel.cu", 53);
# 54 "Kernel.cu"
return id;
# 55 "Kernel.cu"
}
# 56 "Kernel.cu"
void warmGPU()
# 57 "Kernel.cu"
{
# 58 "Kernel.cu"
cudaError_t cuda_err;
# 59 "Kernel.cu"
cudaEvent_t start, stop;
# 60 "Kernel.cu"
cudaEventCreate(&start);
# 61 "Kernel.cu"
cudaEventCreate(&stop);
# 62 "Kernel.cu"
float cuda_time = (0);
# 63 "Kernel.cu"
cudaEventRecord(start, 0);
# 65 "Kernel.cu"
(cudaConfigureCall(1, 1)) ? (void)0 : (Ker_Warm)();
# 67 "Kernel.cu"
cuda_err = cudaSuccess;
# 68 "Kernel.cu"
cuda_err = cudaGetLastError();
# 69 "Kernel.cu"
if (cuda_err != (cudaSuccess))
# 70 "Kernel.cu"
{
# 71 "Kernel.cu"
fprintf(stderr, "Failed to launch (error code= %s)!\n", cudaGetErrorString(cuda_err));
# 72 "Kernel.cu"
exit(1);
# 73 "Kernel.cu"
} else
# 75 "Kernel.cu"
{
# 79 "Kernel.cu"
}
# 82 "Kernel.cu"
cudaEventRecord(stop, 0);
# 83 "Kernel.cu"
cudaEventSynchronize(stop);
# 84 "Kernel.cu"
cudaEventElapsedTime(&cuda_time, start, stop);
# 88 "Kernel.cu"
}
# 91 "Kernel.cu"
unsigned get_conflicts(int *combination, int combination_size)
# 92 "Kernel.cu"
{
# 96 "Kernel.cu"
int *h_combination = (0);
# 97 "Kernel.cu"
int *d_combination = (0);
# 98 "Kernel.cu"
unsigned *h_result = (0);
# 99 "Kernel.cu"
unsigned *d_result = (0);
# 108 "Kernel.cu"
cudaError_t cuda_err;
# 114 "Kernel.cu"
h_result = ((unsigned *)malloc((1) * sizeof(unsigned)));
# 116 "Kernel.cu"
if (h_result == (__null))
# 117 "Kernel.cu"
{
# 118 "Kernel.cu"
printf("malloc h_result  error \ni");
# 119 "Kernel.cu"
exit(1);
# 120 "Kernel.cu"
}
# 122 "Kernel.cu"
h_combination = combination;
# 124 "Kernel.cu"
cuda_err = cudaSuccess;
# 127 "Kernel.cu"
check(cudaMalloc((void **)(&d_combination), combination_size * sizeof(int)), "cudaMalloc((void **)&d_combination, combination_size * sizeof(int))", "Kernel.cu", 127);
# 128 "Kernel.cu"
check(cudaMalloc((void **)(&d_result), (1) * sizeof(int)), "cudaMalloc((void **)&d_result , 1 * sizeof(int))", "Kernel.cu", 128);
# 129 "Kernel.cu"
cuda_err = cudaGetLastError();
# 130 "Kernel.cu"
if (cuda_err != (cudaSuccess))
# 131 "Kernel.cu"
{
# 132 "Kernel.cu"
fprintf(stderr, "alloc d_combination error! (error code= %s)!\n", cudaGetErrorString(cuda_err));
# 133 "Kernel.cu"
exit(1);
# 134 "Kernel.cu"
}
# 146 "Kernel.cu"
check(cudaMemcpy(d_combination, h_combination, combination_size * sizeof(int), cudaMemcpyHostToDevice), "cudaMemcpy(d_combination, h_combination, combination_size * sizeof(int), cudaMemcpyHostToDevice)", "Kernel.cu", 146);
# 154 "Kernel.cu"
(cudaConfigureCall(((combination_size + 512) - 1) / 512, 512)) ? (void)0 : (Ker_Check_Combination)(d_combination, combination_size, d_result);
# 157 "Kernel.cu"
cuda_err = cudaSuccess;
# 158 "Kernel.cu"
cuda_err = cudaGetLastError();
# 159 "Kernel.cu"
if (cuda_err != (cudaSuccess))
# 160 "Kernel.cu"
{
# 164 "Kernel.cu"
exit(1);
# 165 "Kernel.cu"
}
# 180 "Kernel.cu"
(h_result[0]) = (0);
# 182 "Kernel.cu"
check(cudaMemcpy(h_result, d_result, (1) * sizeof(unsigned), cudaMemcpyDeviceToHost), "cudaMemcpy(h_result, d_result, 1 * sizeof(unsigned int), cudaMemcpyDeviceToHost)", "Kernel.cu", 182);
# 183 "Kernel.cu"
cuda_err = cudaSuccess;
# 184 "Kernel.cu"
cuda_err = cudaGetLastError();
# 185 "Kernel.cu"
if (cuda_err != (cudaSuccess))
# 186 "Kernel.cu"
{
# 190 "Kernel.cu"
exit(1);
# 191 "Kernel.cu"
}
# 202 "Kernel.cu"
unsigned conflicts = h_result[0];
# 209 "Kernel.cu"
free(h_result);
# 210 "Kernel.cu"
check(cudaFree(d_combination), "cudaFree(d_combination)", "Kernel.cu", 210);
# 211 "Kernel.cu"
check(cudaFree(d_result), "cudaFree(d_result)", "Kernel.cu", 211);
# 212 "Kernel.cu"
check(cudaDeviceSynchronize(), "cudaDeviceSynchronize()", "Kernel.cu", 212);
# 214 "Kernel.cu"
return conflicts;
# 215 "Kernel.cu"
}
# 1 "Kernel.cudafe1.stub.c"
# 1 "Kernel.cudafe1.stub.c"
# 1 "Kernel.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"


# 1 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 1 3
# 74 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 3

# 74 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 3
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 121 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 3
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary_14_Kernel_cpp1_ii_a105f23b ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "_14_Kernel_cpp1_ii_a105f23b";
# 152 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 3
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        int size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();





}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/local/cuda-8.0/bin/..//include/common_functions.h" 1 3
# 249 "/usr/local/cuda-8.0/bin/..//include/common_functions.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions.h" 1 3
# 10055 "/usr/local/cuda-8.0/include/math_functions.h" 3
# 1 "/usr/local/cuda-8.0/bin/..//include/crt/func_macro.h" 1 3
# 10056 "/usr/local/cuda-8.0/include/math_functions.h" 2 3







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 10327 "/usr/local/cuda-8.0/include/math_functions.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions.hpp" 1 3
# 1095 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
# 1 "/usr/local/cuda-8.0/include/math_constants.h" 1 3
# 1096 "/usr/local/cuda-8.0/include/math_functions.hpp" 2 3
# 3420 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
inline double rsqrt(double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  a = remquo (a, 0.5, &n);
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(double a)
{
  double p, q, t, fa;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  fa = fabs(a);
  if (fa >= 1.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(double a)
{
  double t;
  volatile union {
    double d;
    unsigned long long int l;
  } cvt;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    cvt.l = 0xfff8000000000000ull;
    t = cvt.d;
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3738 "/usr/local/cuda-8.0/include/math_functions.hpp" 3
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;

    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {

    t2 = ((int)(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(float a)
{
  return (float)rsqrt((double)a);
}

inline float rcbrtf(float a)
{
  return (float)rcbrt((double)a);
}

inline float sinpif(float a)
{
  return (float)sinpi((double)a);
}

inline float cospif(float a)
{
  return (float)cospi((double)a);
}

inline void sincospif(float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi((double)a, &s, &c);
  *sptr = (float)s;
  *cptr = (float)c;
}

inline float erfinvf(float a)
{
  return (float)erfinv((double)a);
}

inline float erfcinvf(float a)
{
  return (float)erfcinv((double)a);
}

inline float normcdfinvf(float a)
{
  return (float)normcdfinv((double)a);
}

inline float normcdff(float a)
{
  return (float)normcdf((double)a);
}

inline float erfcxf(float a)
{
  return (float)erfcx((double)a);
}
# 10328 "/usr/local/cuda-8.0/include/math_functions.h" 2 3



# 1 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 1 3
# 270 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 3
# 1 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.hpp" 1 3
# 271 "/usr/local/cuda-8.0/include/math_functions_dbl_ptx3.h" 2 3
# 10332 "/usr/local/cuda-8.0/include/math_functions.h" 2 3
# 250 "/usr/local/cuda-8.0/bin/..//include/common_functions.h" 2 3
# 247 "/usr/local/cuda-8.0/bin/..//include/crt/host_runtime.h" 2 3







#pragma pack()
# 7 "Kernel.cudafe1.stub.c" 2 3
# 1 "Kernel.fatbin.c" 1 3
# 1 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 1 3
# 33 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 3
# 1 "/usr/local/cuda-8.0/include/fatbinary.h" 1 3
# 49 "/usr/local/cuda-8.0/include/fatbinary.h" 3
typedef struct fatBinaryHeader *computeFatBinaryFormat_t;
# 78 "/usr/local/cuda-8.0/include/fatbinary.h" 3
struct __attribute__((aligned(8))) fatBinaryHeader
{
  unsigned int magic;
  unsigned short version;
  unsigned short headerSize;
  unsigned long long int fatSize;
};


typedef enum {
  FATBIN_KIND_PTX = 0x0001,
  FATBIN_KIND_ELF = 0x0002,
  FATBIN_KIND_OLDCUBIN = 0x0004,
} fatBinaryCodeKind;
# 34 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 2 3


extern "C" {







typedef enum {
  FBCTL_ERROR_NONE = 0,
  FBCTL_ERROR_NULL,
  FBCTL_ERROR_UNRECOGNIZED,
  FBCTL_ERROR_NO_CANDIDATE,
  FBCTL_ERROR_COMPILE_FAILED,
  FBCTL_ERROR_INTERNAL
} fatBinaryCtlError_t;
extern char* fatBinaryCtl_Errmsg (fatBinaryCtlError_t e);

extern fatBinaryCtlError_t fatBinaryCtl_Create (void* *data);

extern void fatBinaryCtl_Delete (void* data);


extern fatBinaryCtlError_t fatBinaryCtl (void* data, int request, ...);
# 75 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 3
typedef enum {
  fatBinary_PreferBestCode,
  fatBinary_AvoidPTX,
  fatBinary_ForcePTX,
  fatBinary_JITIfNotMatch
} fatBinary_CompilationPolicy;





extern fatBinaryCtlError_t fatBinaryCtl_PickCandidate (void* data);







extern fatBinaryCtlError_t fatBinaryCtl_Compile (void* data,
                                                 void* *elf, size_t *esize);
# 104 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 3
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 133 "/usr/local/cuda-8.0/bin/..//include/fatBinaryCtl.h" 3
}
# 2 "Kernel.fatbin.c" 2 3


asm(
".section __nv_relfatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000000780,0x0000004001010002,0x0000000000000740\n"
".quad 0x000000000000073a,0x0000002500010007,0x0000000000000000,0x0000000000002015\n"
".quad 0x0000000000000000,0x0000000000001810,0x010102464c457fa2,0x00016e0001000733\n"
".quad 0xd0220001005000be,0x2505250df5000812,0x4000000038004000,0x732e000001001500\n"
".quad 0x0062617472747368,0x00086d792700082e,0x78646e68735f1df3,0x666e692e766e2e00\n"
".quad 0x2e747865742e006f,0x6976654461647563,0x7474417465476563,0x001d657475626972\n"
".quad 0x5f72654b385a5fc5,0x0e0039766d726157,0x65726168736e0016,0x6f6c6701ff001864\n"
".quad 0x74696e692e6c6162,0x0400556c65722e00,0x6e6174736e6f639b,0x6700a005001b3074\n"
".quad 0x0011636f6c6c614d,0x61707563634f1af7,0x634178614d79636e,0x636f6c4265766974\n"
".quad 0x6c754d726550736b,0x7365636f72706974,0x6547320034726f73,0x322000dc0500e874\n"
".quad 0x65684307f8006d31,0x69626d6f435f6b63,0x69506e6f6974616e,0x00280f00ee6a5069\n"
".quad 0x0e002a0f0100050e,0x050b002d0f00eb08,0x9b636e75464800b8,0x5792210108731f01\n"
".quad 0x7367616c46687469,0x72676c6c61810086,0x72709f000e687061,0x44657079746f746f\n"
".quad 0x5b0f03023e0f2002,0x02680f01e50e0b02,0x746e697270767d29,0x727473244f027066\n"
".quad 0x4552535f6f200275,0x0011030202750047,0x1700340f2502800f,0x3d0f02c20c02ae0e\n"
".quad 0x5f7f9202e10f0b02,0x02e2006d61726170,0x2202f80f001c0e0d,0x6c6923732c03350f\n"
".quad 0x00220008696c696c,0x0f00116912000423,0x750500010f0b0353,0x100c002200000032\n"
".quad 0x00497d0008801300,0x1100300c00030000,0x1100180d1d001873,0x660018141d0018bc\n"
".quad 0x0018200d000000cc,0x1d0030e811005204,0x000001036600300a,0x080140220018810d\n"
".quad 0x0e1d00a801092000,0x1d004801142000a8,0x1d0030251100480e,0x1d0030531100300f\n"
".quad 0x1d0030871100300f,0x1d00309511003010,0x1d0018c811003010,0x0018023f20001811\n"
".quad 0xd8026c2000180b1d,0x50181400d00b1500,0x78121d0078021001,0x48121d0048891100\n"
".quad 0x30131d0030a51100,0x30131d0030dc1100,0x071d001803372000,0x081d001845110018\n"
".quad 0x1200000066660018,0x3f0008c01301e010,0x004000008e0000b4,0x010806003001a900\n"
".quad 0x2304350008024022,0x000c110427008e08,0x1700181100082347,0x1700181917001811\n"
".quad 0x1700180c17001819,0x1700180a1700180c,0x170018081700180a,0x1700181717001808\n"
".quad 0x0500180117001817,0x3101a4040f21000c,0x1c049001fe041e04,0x0c60000000200008\n"
".quad 0x40a20242080a2100,0x0400181903001801,0x25002a0210009617,0x007e0110001021f0\n"
".quad 0x013101001011f025,0x000254005421f022,0x000c70005c1d0400,0x03001fa000000048\n"
".quad 0x17ffffffff570081,0x08fffffffe400228,0x0023fffffffd4000,0x033253001c032c22\n"
".quad 0x0104000008080000,0x0328530364032122,0x017c000018110000,0x8850170048031922\n"
".quad 0x0010301300400003,0x0300380510034200,0x010f00100d130010,0x80b8a0b09fffff00\n"
".quad 0x1fc0120800808080,0x171c003c744003a3,0x2f00083c02193000,0x003c8e0d00088580\n"
".quad 0x003012007ffffc1c,0xa00012f21300080f,0x000608808010b8b0,0x000264c03c00089c\n"
".quad 0x001e86400000109c,0xa73cdb581c007f9c,0x00081fc012184000,0x0020010008167423\n"
".quad 0xb810b800e4c03c70,0x100200101a1400c0,0x03001003fe113204,0x0f4500c0181f00d0\n"
".quad 0x46ff00800f150140,0xac80a0a08c100078,0x0a40024012100240,0x500e1300102a1c00\n"
".quad 0x00051c000204f102,0x00291c001e51080c,0x00209c000e5b681c,0xb010a010b010b884\n"
".quad 0x1630027804026808,0x301a7420079a1fc0,0xce0bfc64c03c5000,0x1c0012e4801df106\n"
".quad 0x9c181d910c140028,0x10b080c88003ffff,0x9c001608008010b8,0x9c001e9318140028\n"
".quad 0xa01018db681c0003,0x10181102c0c41500,0x8833000816e02100,0xb0a010b0006032e0\n"
".quad 0x9c000108b0a0dca0,0x803008a3c0120020,0x910c304000682a14,0x249318305200582e\n"
".quad 0x0048242222005028,0x1c00021c201e01f2,0xb0a000b0b010db28,0x1ee088e0001808a0\n"
".quad 0x1edb290000031c24,0x3c02310008029c20,0xe101982210012860,0xffff9c201d86c71c\n"
".quad 0x0348a3c022bb281f,0x10a0dca0100004f1,0x000004600bfe08dc,0x1100189fc0226808\n"
".quad 0x20228640c201c82a,0x202578b803e7809c,0x10811c24224000a0,0x20410128281e2000\n"
".quad 0x2608500002dca0db,0x2422400098041c24,0x1b0010070020821c,0x1300108810001084\n"
".quad 0xb8b00010b1001022,0x80000bfe0800b810,0x0200b05c3c023100,0x6c10040018100148\n"
".quad 0x03400f03d00e0220,0x6920555047bf34ff,0x06500a214b4f2073,0x0018031f057f0032\n"
".quad 0x02442e0008401300,0x400b1f0001080030,0x532f003884130400,0x1f09bc000b004003\n"
".quad 0x099dd81300004002,0x22000700001d7013,0x130c60080a0c0016,0x482a00400c002729\n"
".quad 0x041b0087040be008,0x22040040621f0028,0x00401c1700080908,0x01502f0000400d1f\n"
".quad 0x1700402413030040,0x000040111f004060,0x00400d0114022821,0x00c0201f00408413\n"
".quad 0x1c02362101080404,0x0040a41300400d01,0x0b94000c0040381f,0x15e013000180091f\n"
".quad 0x0038040100301b00,0x0c01d4b7130e3204,0x1f0ee00a102a01c4,0x4001a22f04014000\n"
".quad 0x58170e6350130300,0x32130101400f0040,0xc02a0018061b0080,0x2b002803120e400c\n"
".quad 0x00404f1f00284008,0x171f02400d402e04,0x040040d21f000040,0x40081f00800e002e\n"
".quad 0x1f040040e31f0000,0x00000a4c00004080,0x008001172f00400c,0x000c4c00400f1e04\n"
".quad 0x00402b1f00400600,0x40000ef00f802a04,0x00400d0000194c00,0x11c02e040040cf1f\n"
".quad 0x1f000100111f0080,0x4012402e040040eb,0x901f000100131f00,0x119012c02a0404c4\n"
".quad 0x000000500004800f,0x0000000000000000\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[242];

}


extern "C" {





extern const __fatBinC_Wrapper_t __fatbinwrap_14_Kernel_cpp1_ii_a105f23b __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 8 "Kernel.cudafe1.stub.c" 2 3
extern void __device_stub__Z8Ker_Warmv(void);
extern void __device_stub__Z21Ker_Check_CombinationPiiPj(int *, int, unsigned *);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll_14_Kernel_cpp1_ii_a105f23b(void) __attribute__((__constructor__));
void __device_stub__Z8Ker_Warmv(void){{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(void))Ker_Warm)); (void)cudaLaunch(((char *)((void ( *)(void))Ker_Warm))); };}
# 10 "Kernel.cu"

# 10 "Kernel.cu"
void Ker_Warm(void)
# 10 "Kernel.cu"
{__device_stub__Z8Ker_Warmv();



}
# 1 "Kernel.cudafe1.stub.c"
void __device_stub__Z21Ker_Check_CombinationPiiPj( int *__par0, int __par1, unsigned *__par2) { 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                  if (cudaSetupArgument((void *)(char *)&
# 1 "Kernel.cudafe1.stub.c"
                                                                                                  __par0
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                  , sizeof(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                  __par0
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                  ), (size_t)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                  0UL
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                  ) != cudaSuccess) return
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                   ; 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                     if (cudaSetupArgument((void *)(char *)&
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                     __par1
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                     , sizeof(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                     __par1
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                     ), (size_t)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                     8UL
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                     ) != cudaSuccess) return
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                      ; 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                        if (cudaSetupArgument((void *)(char *)&
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                        __par2
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                        , sizeof(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                        __par2
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                        ), (size_t)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                        16UL
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                        ) != cudaSuccess) return
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                          ; 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                            { volatile static char *__f __attribute__((unused)); __f = 
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                            ((char *)((void ( *)(int *, int, unsigned *))Ker_Check_Combination))
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                            ; (void)cudaLaunch(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                            ((char *)((void ( *)(int *, int, unsigned *))Ker_Check_Combination))
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                            ); }
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                                              ; }
# 16 "Kernel.cu"
void Ker_Check_Combination( int *__cuda_0,int __cuda_1,unsigned *__cuda_2)
# 21 "Kernel.cu"
{__device_stub__Z21Ker_Check_CombinationPiiPj( __cuda_0,__cuda_1,__cuda_2);
# 42 "Kernel.cu"
}
# 1 "Kernel.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T20) { 
# 1 "Kernel.cudafe1.stub.c" 3
                                                             { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)
# 1 "Kernel.cudafe1.stub.c"
                                                             __T20
# 1 "Kernel.cudafe1.stub.c" 3
                                                             ; }
# 1 "Kernel.cudafe1.stub.c"
                                                                                        ; __nv_save_fatbinhandle_for_managed_rt(__T20); 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                        __cudaRegisterFunction(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                        __T20
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                        , (const char*)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                        ((void ( *)(int *, int, unsigned *))Ker_Check_Combination)
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                        , (char*)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                        "_Z21Ker_Check_CombinationPiiPj"
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                        , 
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                        "_Z21Ker_Check_CombinationPiiPj"
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                        , -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                    ; 
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                                                                                      __cudaRegisterFunction(
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                      __T20
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                                                                                      , (const char*)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                      ((void ( *)(void))Ker_Warm)
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                                                                                      , (char*)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                      "_Z8Ker_Warmv"
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                                                                                      , 
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                      "_Z8Ker_Warmv"
# 1 "Kernel.cudafe1.stub.c" 3
                                                                                                                                                                                                                                                                      , -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0)
# 1 "Kernel.cudafe1.stub.c"
                                                                                                                                                                                                                                                                                                                                                 ; }
static void __sti____cudaRegisterAll_14_Kernel_cpp1_ii_a105f23b(void) { 
# 2 "Kernel.cudafe1.stub.c" 3
                                                                        { __cudaRegisterLinkedBinary_14_Kernel_cpp1_ii_a105f23b (( void (*)(void **))(
# 2 "Kernel.cudafe1.stub.c"
                                                                        __nv_cudaEntityRegisterCallback
# 2 "Kernel.cudafe1.stub.c" 3
                                                                        ), (void *)&__fatbinwrap_14_Kernel_cpp1_ii_a105f23b, (void *)&__module_id_str, (void (*)(void *))&____nv_dummy_param_ref); }
# 2 "Kernel.cudafe1.stub.c"
                                                                                                                                     ; }

#pragma GCC diagnostic pop
# 2 "Kernel.cudafe1.stub.c" 2
# 1 "Kernel.cudafe1.stub.c"
